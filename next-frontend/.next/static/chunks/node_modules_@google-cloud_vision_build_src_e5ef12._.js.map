{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 11, "column": 0}, "map": {"version":3,"sources":["file:///Users/dokyunglee/Documents/Hackathon/Mental-Health-Tracker-App/next-frontend/node_modules/%40google-cloud/vision/build/src/v1/image_annotator_client.js"],"sourcesContent":["\"use strict\";\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImageAnnotatorClient = void 0;\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v1/image_annotator_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./image_annotator_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Service that performs Google Cloud Vision API detection tasks over client\n *  images, such as face, landmark, logo, label, and text detection. The\n *  ImageAnnotator service returns detected entities from the images.\n * @class\n * @memberof v1\n */\nclass ImageAnnotatorClient {\n    /**\n     * Construct an instance of ImageAnnotatorClient.\n     *\n     * @param {object} [options] - The configuration object.\n     * The options accepted by the constructor are described in detail\n     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n     * The common options are:\n     * @param {object} [options.credentials] - Credentials object.\n     * @param {string} [options.credentials.client_email]\n     * @param {string} [options.credentials.private_key]\n     * @param {string} [options.email] - Account email address. Required when\n     *     using a .pem or .p12 keyFilename.\n     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n     *     .p12 key downloaded from the Google Developers Console. If you provide\n     *     a path to a JSON file, the projectId option below is not necessary.\n     *     NOTE: .pem and .p12 require you to specify options.email as well.\n     * @param {number} [options.port] - The port on which to connect to\n     *     the remote host.\n     * @param {string} [options.projectId] - The project ID from the Google\n     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n     *     the environment variable GCLOUD_PROJECT for your project ID. If your\n     *     app is running in an environment which supports\n     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n     *     your project ID will be detected automatically.\n     * @param {string} [options.apiEndpoint] - The domain name of the\n     *     API remote host.\n     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n     *     Follows the structure of {@link gapicConfig}.\n     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n     *     For more information, please check the\n     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n     *     need to avoid loading the default gRPC version and want to use the fallback\n     *     HTTP implementation. Load only fallback version and pass it to the constructor:\n     *     ```\n     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n     *     const client = new ImageAnnotatorClient({fallback: true}, gax);\n     *     ```\n     */\n    constructor(opts, gaxInstance) {\n        var _a, _b, _c, _d, _e;\n        this._terminated = false;\n        this.descriptors = {\n            page: {},\n            stream: {},\n            longrunning: {},\n            batching: {},\n        };\n        // Ensure that options include all the required fields.\n        const staticMembers = this.constructor;\n        if ((opts === null || opts === void 0 ? void 0 : opts.universe_domain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universeDomain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== (opts === null || opts === void 0 ? void 0 : opts.universeDomain)) {\n            throw new Error('Please set either universe_domain or universeDomain, but not both.');\n        }\n        const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object'\n            ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN']\n            : undefined;\n        this._universeDomain =\n            (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.universeDomain) !== null && _a !== void 0 ? _a : opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== null && _b !== void 0 ? _b : universeDomainEnvVar) !== null && _c !== void 0 ? _c : 'googleapis.com';\n        this._servicePath = 'vision.' + this._universeDomain;\n        const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || this._servicePath;\n        this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n        const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n        const clientConfig = (_d = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _d !== void 0 ? _d : {};\n        const fallback = (_e = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _e !== void 0 ? _e : (typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function');\n        opts = Object.assign({ servicePath, port, clientConfig, fallback }, opts);\n        // Request numeric enum values if REST transport is used.\n        opts.numericEnums = true;\n        // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n        if (servicePath !== this._servicePath && !('scopes' in opts)) {\n            opts['scopes'] = staticMembers.scopes;\n        }\n        // Load google-gax module synchronously if needed\n        if (!gaxInstance) {\n            gaxInstance = require('google-gax');\n        }\n        // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n        this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n        // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n        this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n        // Save options to use in initialize() method.\n        this._opts = opts;\n        // Save the auth object to the client, for use by other methods.\n        this.auth = this._gaxGrpc.auth;\n        // Set useJWTAccessWithScope on the auth object.\n        this.auth.useJWTAccessWithScope = true;\n        // Set defaultServicePath on the auth object.\n        this.auth.defaultServicePath = this._servicePath;\n        // Set the default scopes in auth client if needed.\n        if (servicePath === this._servicePath) {\n            this.auth.defaultScopes = staticMembers.scopes;\n        }\n        // Determine the client header string.\n        const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n        if (typeof process === 'object' && 'versions' in process) {\n            clientHeader.push(`gl-node/${process.versions.node}`);\n        }\n        else {\n            clientHeader.push(`gl-web/${this._gaxModule.version}`);\n        }\n        if (!opts.fallback) {\n            clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n        }\n        else {\n            clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n        }\n        if (opts.libName && opts.libVersion) {\n            clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n        }\n        // Load the applicable protos.\n        this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n        // This API contains \"path templates\"; forward-slash-separated\n        // identifiers to uniquely identify resources within the API.\n        // Create useful helper objects for these.\n        this.pathTemplates = {\n            productPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/products/{product}'),\n            productSetPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/productSets/{product_set}'),\n            referenceImagePathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/products/{product}/referenceImages/{reference_image}'),\n        };\n        const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);\n        // This API contains \"long-running operations\", which return a\n        // an Operation object that allows for tracking of the operation,\n        // rather than holding a request open.\n        const lroOptions = {\n            auth: this.auth,\n            grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,\n        };\n        if (opts.fallback) {\n            lroOptions.protoJson = protoFilesRoot;\n            lroOptions.httpRules = [\n                {\n                    selector: 'google.longrunning.Operations.GetOperation',\n                    get: '/v1/{name=projects/*/operations/*}',\n                    additional_bindings: [\n                        { get: '/v1/{name=projects/*/locations/*/operations/*}' },\n                        { get: '/v1/{name=operations/*}' },\n                        { get: '/v1/{name=locations/*/operations/*}' },\n                    ],\n                },\n            ];\n        }\n        this.operationsClient = this._gaxModule\n            .lro(lroOptions)\n            .operationsClient(opts);\n        const asyncBatchAnnotateImagesResponse = protoFilesRoot.lookup('.google.cloud.vision.v1.AsyncBatchAnnotateImagesResponse');\n        const asyncBatchAnnotateImagesMetadata = protoFilesRoot.lookup('.google.cloud.vision.v1.OperationMetadata');\n        const asyncBatchAnnotateFilesResponse = protoFilesRoot.lookup('.google.cloud.vision.v1.AsyncBatchAnnotateFilesResponse');\n        const asyncBatchAnnotateFilesMetadata = protoFilesRoot.lookup('.google.cloud.vision.v1.OperationMetadata');\n        this.descriptors.longrunning = {\n            asyncBatchAnnotateImages: new this._gaxModule.LongrunningDescriptor(this.operationsClient, asyncBatchAnnotateImagesResponse.decode.bind(asyncBatchAnnotateImagesResponse), asyncBatchAnnotateImagesMetadata.decode.bind(asyncBatchAnnotateImagesMetadata)),\n            asyncBatchAnnotateFiles: new this._gaxModule.LongrunningDescriptor(this.operationsClient, asyncBatchAnnotateFilesResponse.decode.bind(asyncBatchAnnotateFilesResponse), asyncBatchAnnotateFilesMetadata.decode.bind(asyncBatchAnnotateFilesMetadata)),\n        };\n        // Put together the default options sent with requests.\n        this._defaults = this._gaxGrpc.constructSettings('google.cloud.vision.v1.ImageAnnotator', gapicConfig, opts.clientConfig || {}, { 'x-goog-api-client': clientHeader.join(' ') });\n        // Set up a dictionary of \"inner API calls\"; the core implementation\n        // of calling the API is handled in `google-gax`, with this code\n        // merely providing the destination and request information.\n        this.innerApiCalls = {};\n        // Add a warn function to the client constructor so it can be easily tested.\n        this.warn = this._gaxModule.warn;\n    }\n    /**\n     * Initialize the client.\n     * Performs asynchronous operations (such as authentication) and prepares the client.\n     * This function will be called automatically when any class method is called for the\n     * first time, but if you need to initialize it before calling an actual method,\n     * feel free to call initialize() directly.\n     *\n     * You can await on this method if you want to make sure the client is initialized.\n     *\n     * @returns {Promise} A promise that resolves to an authenticated service stub.\n     */\n    initialize() {\n        // If the client stub promise is already initialized, return immediately.\n        if (this.imageAnnotatorStub) {\n            return this.imageAnnotatorStub;\n        }\n        // Put together the \"service stub\" for\n        // google.cloud.vision.v1.ImageAnnotator.\n        this.imageAnnotatorStub = this._gaxGrpc.createStub(this._opts.fallback\n            ? this._protos.lookupService('google.cloud.vision.v1.ImageAnnotator')\n            : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this._protos.google.cloud.vision.v1.ImageAnnotator, this._opts, this._providedCustomServicePath);\n        // Iterate over each of the methods that the service provides\n        // and create an API call method for each.\n        const imageAnnotatorStubMethods = [\n            'batchAnnotateImages',\n            'batchAnnotateFiles',\n            'asyncBatchAnnotateImages',\n            'asyncBatchAnnotateFiles',\n        ];\n        for (const methodName of imageAnnotatorStubMethods) {\n            const callPromise = this.imageAnnotatorStub.then(stub => (...args) => {\n                if (this._terminated) {\n                    return Promise.reject('The client has already been closed.');\n                }\n                const func = stub[methodName];\n                return func.apply(stub, args);\n            }, (err) => () => {\n                throw err;\n            });\n            const descriptor = this.descriptors.longrunning[methodName] || undefined;\n            const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n            this.innerApiCalls[methodName] = apiCall;\n        }\n        return this.imageAnnotatorStub;\n    }\n    /**\n     * The DNS address for this API service.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get servicePath() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'vision.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service - same as servicePath.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get apiEndpoint() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'vision.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service.\n     * @returns {string} The DNS address for this service.\n     */\n    get apiEndpoint() {\n        return this._servicePath;\n    }\n    get universeDomain() {\n        return this._universeDomain;\n    }\n    /**\n     * The port for this API service.\n     * @returns {number} The default port for this service.\n     */\n    static get port() {\n        return 443;\n    }\n    /**\n     * The scopes needed to make gRPC calls for every method defined\n     * in this service.\n     * @returns {string[]} List of default scopes.\n     */\n    static get scopes() {\n        return [\n            'https://www.googleapis.com/auth/cloud-platform',\n            'https://www.googleapis.com/auth/cloud-vision',\n        ];\n    }\n    /**\n     * Return the project ID used by this class.\n     * @returns {Promise} A promise that resolves to string containing the project ID.\n     */\n    getProjectId(callback) {\n        if (callback) {\n            this.auth.getProjectId(callback);\n            return;\n        }\n        return this.auth.getProjectId();\n    }\n    batchAnnotateImages(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.batchAnnotateImages(request, options, callback);\n    }\n    batchAnnotateFiles(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.batchAnnotateFiles(request, options, callback);\n    }\n    asyncBatchAnnotateImages(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.asyncBatchAnnotateImages(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `asyncBatchAnnotateImages()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/image_annotator.async_batch_annotate_images.js</caption>\n     * region_tag:vision_v1_generated_ImageAnnotator_AsyncBatchAnnotateImages_async\n     */\n    async checkAsyncBatchAnnotateImagesProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.asyncBatchAnnotateImages, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    asyncBatchAnnotateFiles(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.asyncBatchAnnotateFiles(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `asyncBatchAnnotateFiles()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/image_annotator.async_batch_annotate_files.js</caption>\n     * region_tag:vision_v1_generated_ImageAnnotator_AsyncBatchAnnotateFiles_async\n     */\n    async checkAsyncBatchAnnotateFilesProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.asyncBatchAnnotateFiles, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    /**\n     * Gets the latest state of a long-running operation.  Clients can use this\n     * method to poll the operation result at intervals as recommended by the API\n     * service.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation resource.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     *   e.g, timeout, retries, paginations, etc. See {@link\n     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}\n     *   for the details.\n     * @param {function(?Error, ?Object)=} callback\n     *   The function which will be called with the result of the API call.\n     *\n     *   The second parameter to the callback is an object representing\n     *   {@link google.longrunning.Operation | google.longrunning.Operation}.\n     * @return {Promise} - The promise which resolves to an array.\n     *   The first element of the array is an object representing\n     * {@link google.longrunning.Operation | google.longrunning.Operation}.\n     * The promise has a method named \"cancel\" which cancels the ongoing API call.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * const name = '';\n     * const [response] = await client.getOperation({name});\n     * // doThingsWith(response)\n     * ```\n     */\n    getOperation(request, options, callback) {\n        return this.operationsClient.getOperation(request, options, callback);\n    }\n    /**\n     * Lists operations that match the specified filter in the request. If the\n     * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.\n     *\n     * For-await-of syntax is used with the iterable to recursively get response element on-demand.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation collection.\n     * @param {string} request.filter - The standard list filter.\n     * @param {number=} request.pageSize -\n     *   The maximum number of resources contained in the underlying API\n     *   response. If page streaming is performed per-resource, this\n     *   parameter does not affect the return value. If page streaming is\n     *   performed per-page, this determines the maximum number of\n     *   resources in a page.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     *   e.g, timeout, retries, paginations, etc. See {@link\n     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the\n     *   details.\n     * @returns {Object}\n     *   An iterable Object that conforms to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | iteration protocols}.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * for await (const response of client.listOperationsAsync(request));\n     * // doThingsWith(response)\n     * ```\n     */\n    listOperationsAsync(request, options) {\n        return this.operationsClient.listOperationsAsync(request, options);\n    }\n    /**\n     * Starts asynchronous cancellation on a long-running operation.  The server\n     * makes a best effort to cancel the operation, but success is not\n     * guaranteed.  If the server doesn't support this method, it returns\n     * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use\n     * {@link Operations.GetOperation} or\n     * other methods to check whether the cancellation succeeded or whether the\n     * operation completed despite cancellation. On successful cancellation,\n     * the operation is not deleted; instead, it becomes an operation with\n     * an {@link Operation.error} value with a {@link google.rpc.Status.code} of\n     * 1, corresponding to `Code.CANCELLED`.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation resource to be cancelled.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     * e.g, timeout, retries, paginations, etc. See {@link\n     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the\n     * details.\n     * @param {function(?Error)=} callback\n     *   The function which will be called with the result of the API call.\n     * @return {Promise} - The promise which resolves when API call finishes.\n     *   The promise has a method named \"cancel\" which cancels the ongoing API\n     * call.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * await client.cancelOperation({name: ''});\n     * ```\n     */\n    cancelOperation(request, options, callback) {\n        return this.operationsClient.cancelOperation(request, options, callback);\n    }\n    /**\n     * Deletes a long-running operation. This method indicates that the client is\n     * no longer interested in the operation result. It does not cancel the\n     * operation. If the server doesn't support this method, it returns\n     * `google.rpc.Code.UNIMPLEMENTED`.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation resource to be deleted.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     * e.g, timeout, retries, paginations, etc. See {@link\n     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}\n     * for the details.\n     * @param {function(?Error)=} callback\n     *   The function which will be called with the result of the API call.\n     * @return {Promise} - The promise which resolves when API call finishes.\n     *   The promise has a method named \"cancel\" which cancels the ongoing API\n     * call.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * await client.deleteOperation({name: ''});\n     * ```\n     */\n    deleteOperation(request, options, callback) {\n        return this.operationsClient.deleteOperation(request, options, callback);\n    }\n    // --------------------\n    // -- Path templates --\n    // --------------------\n    /**\n     * Return a fully-qualified product resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} product\n     * @returns {string} Resource name string.\n     */\n    productPath(project, location, product) {\n        return this.pathTemplates.productPathTemplate.render({\n            project: project,\n            location: location,\n            product: product,\n        });\n    }\n    /**\n     * Parse the project from Product resource.\n     *\n     * @param {string} productName\n     *   A fully-qualified path representing Product resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProductName(productName) {\n        return this.pathTemplates.productPathTemplate.match(productName).project;\n    }\n    /**\n     * Parse the location from Product resource.\n     *\n     * @param {string} productName\n     *   A fully-qualified path representing Product resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromProductName(productName) {\n        return this.pathTemplates.productPathTemplate.match(productName).location;\n    }\n    /**\n     * Parse the product from Product resource.\n     *\n     * @param {string} productName\n     *   A fully-qualified path representing Product resource.\n     * @returns {string} A string representing the product.\n     */\n    matchProductFromProductName(productName) {\n        return this.pathTemplates.productPathTemplate.match(productName).product;\n    }\n    /**\n     * Return a fully-qualified productSet resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} product_set\n     * @returns {string} Resource name string.\n     */\n    productSetPath(project, location, productSet) {\n        return this.pathTemplates.productSetPathTemplate.render({\n            project: project,\n            location: location,\n            product_set: productSet,\n        });\n    }\n    /**\n     * Parse the project from ProductSet resource.\n     *\n     * @param {string} productSetName\n     *   A fully-qualified path representing ProductSet resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProductSetName(productSetName) {\n        return this.pathTemplates.productSetPathTemplate.match(productSetName)\n            .project;\n    }\n    /**\n     * Parse the location from ProductSet resource.\n     *\n     * @param {string} productSetName\n     *   A fully-qualified path representing ProductSet resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromProductSetName(productSetName) {\n        return this.pathTemplates.productSetPathTemplate.match(productSetName)\n            .location;\n    }\n    /**\n     * Parse the product_set from ProductSet resource.\n     *\n     * @param {string} productSetName\n     *   A fully-qualified path representing ProductSet resource.\n     * @returns {string} A string representing the product_set.\n     */\n    matchProductSetFromProductSetName(productSetName) {\n        return this.pathTemplates.productSetPathTemplate.match(productSetName)\n            .product_set;\n    }\n    /**\n     * Return a fully-qualified referenceImage resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} product\n     * @param {string} reference_image\n     * @returns {string} Resource name string.\n     */\n    referenceImagePath(project, location, product, referenceImage) {\n        return this.pathTemplates.referenceImagePathTemplate.render({\n            project: project,\n            location: location,\n            product: product,\n            reference_image: referenceImage,\n        });\n    }\n    /**\n     * Parse the project from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).project;\n    }\n    /**\n     * Parse the location from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).location;\n    }\n    /**\n     * Parse the product from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the product.\n     */\n    matchProductFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).product;\n    }\n    /**\n     * Parse the reference_image from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the reference_image.\n     */\n    matchReferenceImageFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).reference_image;\n    }\n    /**\n     * Terminate the gRPC channel and close the client.\n     *\n     * The client will no longer be usable and all future behavior is undefined.\n     * @returns {Promise} A promise that resolves when the client is closed.\n     */\n    close() {\n        if (this.imageAnnotatorStub && !this._terminated) {\n            return this.imageAnnotatorStub.then(stub => {\n                this._terminated = true;\n                stub.close();\n                this.operationsClient.close();\n            });\n        }\n        return Promise.resolve();\n    }\n}\nexports.ImageAnnotatorClient = ImageAnnotatorClient;\n//# sourceMappingURL=image_annotator_client.js.map"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 703, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 713, "column": 0}, "map": {"version":3,"sources":["file:///Users/dokyunglee/Documents/Hackathon/Mental-Health-Tracker-App/next-frontend/node_modules/%40google-cloud/vision/build/src/v1/product_search_client.js"],"sourcesContent":["\"use strict\";\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProductSearchClient = void 0;\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v1/product_search_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./product_search_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Manages Products and ProductSets of reference images for use in product\n *  search. It uses the following resource model:\n *\n *  - The API has a collection of {@link protos.google.cloud.vision.v1.ProductSet|ProductSet}\n *  resources, named `projects/* /locations/* /productSets/*`, which acts as a way\n *  to put different products into groups to limit identification.\n *\n *  In parallel,\n *\n *  - The API has a collection of {@link protos.google.cloud.vision.v1.Product|Product}\n *  resources, named\n *    `projects/* /locations/* /products/*`\n *\n *  - Each {@link protos.google.cloud.vision.v1.Product|Product} has a collection of\n *  {@link protos.google.cloud.vision.v1.ReferenceImage|ReferenceImage} resources, named\n *    `projects/* /locations/* /products/* /referenceImages/*`\n * @class\n * @memberof v1\n */\nclass ProductSearchClient {\n    /**\n     * Construct an instance of ProductSearchClient.\n     *\n     * @param {object} [options] - The configuration object.\n     * The options accepted by the constructor are described in detail\n     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n     * The common options are:\n     * @param {object} [options.credentials] - Credentials object.\n     * @param {string} [options.credentials.client_email]\n     * @param {string} [options.credentials.private_key]\n     * @param {string} [options.email] - Account email address. Required when\n     *     using a .pem or .p12 keyFilename.\n     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n     *     .p12 key downloaded from the Google Developers Console. If you provide\n     *     a path to a JSON file, the projectId option below is not necessary.\n     *     NOTE: .pem and .p12 require you to specify options.email as well.\n     * @param {number} [options.port] - The port on which to connect to\n     *     the remote host.\n     * @param {string} [options.projectId] - The project ID from the Google\n     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n     *     the environment variable GCLOUD_PROJECT for your project ID. If your\n     *     app is running in an environment which supports\n     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n     *     your project ID will be detected automatically.\n     * @param {string} [options.apiEndpoint] - The domain name of the\n     *     API remote host.\n     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n     *     Follows the structure of {@link gapicConfig}.\n     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n     *     For more information, please check the\n     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n     *     need to avoid loading the default gRPC version and want to use the fallback\n     *     HTTP implementation. Load only fallback version and pass it to the constructor:\n     *     ```\n     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n     *     const client = new ProductSearchClient({fallback: true}, gax);\n     *     ```\n     */\n    constructor(opts, gaxInstance) {\n        var _a, _b, _c, _d, _e;\n        this._terminated = false;\n        this.descriptors = {\n            page: {},\n            stream: {},\n            longrunning: {},\n            batching: {},\n        };\n        // Ensure that options include all the required fields.\n        const staticMembers = this.constructor;\n        if ((opts === null || opts === void 0 ? void 0 : opts.universe_domain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universeDomain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== (opts === null || opts === void 0 ? void 0 : opts.universeDomain)) {\n            throw new Error('Please set either universe_domain or universeDomain, but not both.');\n        }\n        const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object'\n            ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN']\n            : undefined;\n        this._universeDomain =\n            (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.universeDomain) !== null && _a !== void 0 ? _a : opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== null && _b !== void 0 ? _b : universeDomainEnvVar) !== null && _c !== void 0 ? _c : 'googleapis.com';\n        this._servicePath = 'vision.' + this._universeDomain;\n        const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || this._servicePath;\n        this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n        const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n        const clientConfig = (_d = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _d !== void 0 ? _d : {};\n        const fallback = (_e = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _e !== void 0 ? _e : (typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function');\n        opts = Object.assign({ servicePath, port, clientConfig, fallback }, opts);\n        // Request numeric enum values if REST transport is used.\n        opts.numericEnums = true;\n        // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n        if (servicePath !== this._servicePath && !('scopes' in opts)) {\n            opts['scopes'] = staticMembers.scopes;\n        }\n        // Load google-gax module synchronously if needed\n        if (!gaxInstance) {\n            gaxInstance = require('google-gax');\n        }\n        // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n        this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n        // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n        this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n        // Save options to use in initialize() method.\n        this._opts = opts;\n        // Save the auth object to the client, for use by other methods.\n        this.auth = this._gaxGrpc.auth;\n        // Set useJWTAccessWithScope on the auth object.\n        this.auth.useJWTAccessWithScope = true;\n        // Set defaultServicePath on the auth object.\n        this.auth.defaultServicePath = this._servicePath;\n        // Set the default scopes in auth client if needed.\n        if (servicePath === this._servicePath) {\n            this.auth.defaultScopes = staticMembers.scopes;\n        }\n        // Determine the client header string.\n        const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n        if (typeof process === 'object' && 'versions' in process) {\n            clientHeader.push(`gl-node/${process.versions.node}`);\n        }\n        else {\n            clientHeader.push(`gl-web/${this._gaxModule.version}`);\n        }\n        if (!opts.fallback) {\n            clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n        }\n        else {\n            clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n        }\n        if (opts.libName && opts.libVersion) {\n            clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n        }\n        // Load the applicable protos.\n        this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n        // This API contains \"path templates\"; forward-slash-separated\n        // identifiers to uniquely identify resources within the API.\n        // Create useful helper objects for these.\n        this.pathTemplates = {\n            locationPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}'),\n            productPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/products/{product}'),\n            productSetPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/productSets/{product_set}'),\n            referenceImagePathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/products/{product}/referenceImages/{reference_image}'),\n        };\n        // Some of the methods on this service return \"paged\" results,\n        // (e.g. 50 results at a time, with tokens to get subsequent\n        // pages). Denote the keys used for pagination and results.\n        this.descriptors.page = {\n            listProductSets: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'productSets'),\n            listProducts: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'products'),\n            listReferenceImages: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'referenceImages'),\n            listProductsInProductSet: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'products'),\n        };\n        const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);\n        // This API contains \"long-running operations\", which return a\n        // an Operation object that allows for tracking of the operation,\n        // rather than holding a request open.\n        const lroOptions = {\n            auth: this.auth,\n            grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,\n        };\n        if (opts.fallback) {\n            lroOptions.protoJson = protoFilesRoot;\n            lroOptions.httpRules = [\n                {\n                    selector: 'google.longrunning.Operations.GetOperation',\n                    get: '/v1/{name=projects/*/operations/*}',\n                    additional_bindings: [\n                        { get: '/v1/{name=projects/*/locations/*/operations/*}' },\n                        { get: '/v1/{name=operations/*}' },\n                        { get: '/v1/{name=locations/*/operations/*}' },\n                    ],\n                },\n            ];\n        }\n        this.operationsClient = this._gaxModule\n            .lro(lroOptions)\n            .operationsClient(opts);\n        const importProductSetsResponse = protoFilesRoot.lookup('.google.cloud.vision.v1.ImportProductSetsResponse');\n        const importProductSetsMetadata = protoFilesRoot.lookup('.google.cloud.vision.v1.BatchOperationMetadata');\n        const purgeProductsResponse = protoFilesRoot.lookup('.google.protobuf.Empty');\n        const purgeProductsMetadata = protoFilesRoot.lookup('.google.cloud.vision.v1.BatchOperationMetadata');\n        this.descriptors.longrunning = {\n            importProductSets: new this._gaxModule.LongrunningDescriptor(this.operationsClient, importProductSetsResponse.decode.bind(importProductSetsResponse), importProductSetsMetadata.decode.bind(importProductSetsMetadata)),\n            purgeProducts: new this._gaxModule.LongrunningDescriptor(this.operationsClient, purgeProductsResponse.decode.bind(purgeProductsResponse), purgeProductsMetadata.decode.bind(purgeProductsMetadata)),\n        };\n        // Put together the default options sent with requests.\n        this._defaults = this._gaxGrpc.constructSettings('google.cloud.vision.v1.ProductSearch', gapicConfig, opts.clientConfig || {}, { 'x-goog-api-client': clientHeader.join(' ') });\n        // Set up a dictionary of \"inner API calls\"; the core implementation\n        // of calling the API is handled in `google-gax`, with this code\n        // merely providing the destination and request information.\n        this.innerApiCalls = {};\n        // Add a warn function to the client constructor so it can be easily tested.\n        this.warn = this._gaxModule.warn;\n    }\n    /**\n     * Initialize the client.\n     * Performs asynchronous operations (such as authentication) and prepares the client.\n     * This function will be called automatically when any class method is called for the\n     * first time, but if you need to initialize it before calling an actual method,\n     * feel free to call initialize() directly.\n     *\n     * You can await on this method if you want to make sure the client is initialized.\n     *\n     * @returns {Promise} A promise that resolves to an authenticated service stub.\n     */\n    initialize() {\n        // If the client stub promise is already initialized, return immediately.\n        if (this.productSearchStub) {\n            return this.productSearchStub;\n        }\n        // Put together the \"service stub\" for\n        // google.cloud.vision.v1.ProductSearch.\n        this.productSearchStub = this._gaxGrpc.createStub(this._opts.fallback\n            ? this._protos.lookupService('google.cloud.vision.v1.ProductSearch')\n            : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this._protos.google.cloud.vision.v1.ProductSearch, this._opts, this._providedCustomServicePath);\n        // Iterate over each of the methods that the service provides\n        // and create an API call method for each.\n        const productSearchStubMethods = [\n            'createProductSet',\n            'listProductSets',\n            'getProductSet',\n            'updateProductSet',\n            'deleteProductSet',\n            'createProduct',\n            'listProducts',\n            'getProduct',\n            'updateProduct',\n            'deleteProduct',\n            'createReferenceImage',\n            'deleteReferenceImage',\n            'listReferenceImages',\n            'getReferenceImage',\n            'addProductToProductSet',\n            'removeProductFromProductSet',\n            'listProductsInProductSet',\n            'importProductSets',\n            'purgeProducts',\n        ];\n        for (const methodName of productSearchStubMethods) {\n            const callPromise = this.productSearchStub.then(stub => (...args) => {\n                if (this._terminated) {\n                    return Promise.reject('The client has already been closed.');\n                }\n                const func = stub[methodName];\n                return func.apply(stub, args);\n            }, (err) => () => {\n                throw err;\n            });\n            const descriptor = this.descriptors.page[methodName] ||\n                this.descriptors.longrunning[methodName] ||\n                undefined;\n            const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n            this.innerApiCalls[methodName] = apiCall;\n        }\n        return this.productSearchStub;\n    }\n    /**\n     * The DNS address for this API service.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get servicePath() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'vision.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service - same as servicePath.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get apiEndpoint() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'vision.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service.\n     * @returns {string} The DNS address for this service.\n     */\n    get apiEndpoint() {\n        return this._servicePath;\n    }\n    get universeDomain() {\n        return this._universeDomain;\n    }\n    /**\n     * The port for this API service.\n     * @returns {number} The default port for this service.\n     */\n    static get port() {\n        return 443;\n    }\n    /**\n     * The scopes needed to make gRPC calls for every method defined\n     * in this service.\n     * @returns {string[]} List of default scopes.\n     */\n    static get scopes() {\n        return [\n            'https://www.googleapis.com/auth/cloud-platform',\n            'https://www.googleapis.com/auth/cloud-vision',\n        ];\n    }\n    /**\n     * Return the project ID used by this class.\n     * @returns {Promise} A promise that resolves to string containing the project ID.\n     */\n    getProjectId(callback) {\n        if (callback) {\n            this.auth.getProjectId(callback);\n            return;\n        }\n        return this.auth.getProjectId();\n    }\n    createProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createProductSet(request, options, callback);\n    }\n    getProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getProductSet(request, options, callback);\n    }\n    updateProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                'product_set.name': (_a = request.productSet.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.updateProductSet(request, options, callback);\n    }\n    deleteProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deleteProductSet(request, options, callback);\n    }\n    createProduct(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createProduct(request, options, callback);\n    }\n    getProduct(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getProduct(request, options, callback);\n    }\n    updateProduct(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                'product.name': (_a = request.product.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.updateProduct(request, options, callback);\n    }\n    deleteProduct(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deleteProduct(request, options, callback);\n    }\n    createReferenceImage(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createReferenceImage(request, options, callback);\n    }\n    deleteReferenceImage(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deleteReferenceImage(request, options, callback);\n    }\n    getReferenceImage(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getReferenceImage(request, options, callback);\n    }\n    addProductToProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.addProductToProductSet(request, options, callback);\n    }\n    removeProductFromProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.removeProductFromProductSet(request, options, callback);\n    }\n    importProductSets(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.importProductSets(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `importProductSets()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/product_search.import_product_sets.js</caption>\n     * region_tag:vision_v1_generated_ProductSearch_ImportProductSets_async\n     */\n    async checkImportProductSetsProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.importProductSets, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    purgeProducts(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.purgeProducts(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `purgeProducts()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/product_search.purge_products.js</caption>\n     * region_tag:vision_v1_generated_ProductSearch_PurgeProducts_async\n     */\n    async checkPurgeProductsProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.purgeProducts, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    listProductSets(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listProductSets(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project from which ProductSets should be listed.\n     *\n     *   Format is `projects/PROJECT_ID/locations/LOC_ID`.\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1.ProductSet|ProductSet} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listProductSetsAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listProductSetsStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProductSets'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProductSets.createStream(this.innerApiCalls.listProductSets, request, callSettings);\n    }\n    /**\n     * Equivalent to `listProductSets`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project from which ProductSets should be listed.\n     *\n     *   Format is `projects/PROJECT_ID/locations/LOC_ID`.\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.vision.v1.ProductSet|ProductSet}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/product_search.list_product_sets.js</caption>\n     * region_tag:vision_v1_generated_ProductSearch_ListProductSets_async\n     */\n    listProductSetsAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProductSets'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProductSets.asyncIterate(this.innerApiCalls['listProductSets'], request, callSettings);\n    }\n    listProducts(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listProducts(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project OR ProductSet from which Products should be listed.\n     *\n     *   Format:\n     *   `projects/PROJECT_ID/locations/LOC_ID`\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1.Product|Product} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listProductsAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listProductsStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProducts'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProducts.createStream(this.innerApiCalls.listProducts, request, callSettings);\n    }\n    /**\n     * Equivalent to `listProducts`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project OR ProductSet from which Products should be listed.\n     *\n     *   Format:\n     *   `projects/PROJECT_ID/locations/LOC_ID`\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.vision.v1.Product|Product}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/product_search.list_products.js</caption>\n     * region_tag:vision_v1_generated_ProductSearch_ListProducts_async\n     */\n    listProductsAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProducts'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProducts.asyncIterate(this.innerApiCalls['listProducts'], request, callSettings);\n    }\n    listReferenceImages(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listReferenceImages(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. Resource name of the product containing the reference images.\n     *\n     *   Format is\n     *   `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   A token identifying a page of results to be returned. This is the value\n     *   of `nextPageToken` returned in a previous reference image list request.\n     *\n     *   Defaults to the first page if not specified.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1.ReferenceImage|ReferenceImage} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listReferenceImagesAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listReferenceImagesStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listReferenceImages'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listReferenceImages.createStream(this.innerApiCalls.listReferenceImages, request, callSettings);\n    }\n    /**\n     * Equivalent to `listReferenceImages`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. Resource name of the product containing the reference images.\n     *\n     *   Format is\n     *   `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   A token identifying a page of results to be returned. This is the value\n     *   of `nextPageToken` returned in a previous reference image list request.\n     *\n     *   Defaults to the first page if not specified.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.vision.v1.ReferenceImage|ReferenceImage}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/product_search.list_reference_images.js</caption>\n     * region_tag:vision_v1_generated_ProductSearch_ListReferenceImages_async\n     */\n    listReferenceImagesAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listReferenceImages'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listReferenceImages.asyncIterate(this.innerApiCalls['listReferenceImages'], request, callSettings);\n    }\n    listProductsInProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listProductsInProductSet(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.name\n     *   Required. The ProductSet resource for which to retrieve Products.\n     *\n     *   Format is:\n     *   `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1.Product|Product} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listProductsInProductSetAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listProductsInProductSetStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProductsInProductSet'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProductsInProductSet.createStream(this.innerApiCalls.listProductsInProductSet, request, callSettings);\n    }\n    /**\n     * Equivalent to `listProductsInProductSet`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.name\n     *   Required. The ProductSet resource for which to retrieve Products.\n     *\n     *   Format is:\n     *   `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.vision.v1.Product|Product}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/product_search.list_products_in_product_set.js</caption>\n     * region_tag:vision_v1_generated_ProductSearch_ListProductsInProductSet_async\n     */\n    listProductsInProductSetAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProductsInProductSet'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProductsInProductSet.asyncIterate(this.innerApiCalls['listProductsInProductSet'], request, callSettings);\n    }\n    /**\n     * Gets the latest state of a long-running operation.  Clients can use this\n     * method to poll the operation result at intervals as recommended by the API\n     * service.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation resource.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     *   e.g, timeout, retries, paginations, etc. See {@link\n     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}\n     *   for the details.\n     * @param {function(?Error, ?Object)=} callback\n     *   The function which will be called with the result of the API call.\n     *\n     *   The second parameter to the callback is an object representing\n     *   {@link google.longrunning.Operation | google.longrunning.Operation}.\n     * @return {Promise} - The promise which resolves to an array.\n     *   The first element of the array is an object representing\n     * {@link google.longrunning.Operation | google.longrunning.Operation}.\n     * The promise has a method named \"cancel\" which cancels the ongoing API call.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * const name = '';\n     * const [response] = await client.getOperation({name});\n     * // doThingsWith(response)\n     * ```\n     */\n    getOperation(request, options, callback) {\n        return this.operationsClient.getOperation(request, options, callback);\n    }\n    /**\n     * Lists operations that match the specified filter in the request. If the\n     * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.\n     *\n     * For-await-of syntax is used with the iterable to recursively get response element on-demand.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation collection.\n     * @param {string} request.filter - The standard list filter.\n     * @param {number=} request.pageSize -\n     *   The maximum number of resources contained in the underlying API\n     *   response. If page streaming is performed per-resource, this\n     *   parameter does not affect the return value. If page streaming is\n     *   performed per-page, this determines the maximum number of\n     *   resources in a page.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     *   e.g, timeout, retries, paginations, etc. See {@link\n     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the\n     *   details.\n     * @returns {Object}\n     *   An iterable Object that conforms to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | iteration protocols}.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * for await (const response of client.listOperationsAsync(request));\n     * // doThingsWith(response)\n     * ```\n     */\n    listOperationsAsync(request, options) {\n        return this.operationsClient.listOperationsAsync(request, options);\n    }\n    /**\n     * Starts asynchronous cancellation on a long-running operation.  The server\n     * makes a best effort to cancel the operation, but success is not\n     * guaranteed.  If the server doesn't support this method, it returns\n     * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use\n     * {@link Operations.GetOperation} or\n     * other methods to check whether the cancellation succeeded or whether the\n     * operation completed despite cancellation. On successful cancellation,\n     * the operation is not deleted; instead, it becomes an operation with\n     * an {@link Operation.error} value with a {@link google.rpc.Status.code} of\n     * 1, corresponding to `Code.CANCELLED`.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation resource to be cancelled.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     * e.g, timeout, retries, paginations, etc. See {@link\n     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the\n     * details.\n     * @param {function(?Error)=} callback\n     *   The function which will be called with the result of the API call.\n     * @return {Promise} - The promise which resolves when API call finishes.\n     *   The promise has a method named \"cancel\" which cancels the ongoing API\n     * call.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * await client.cancelOperation({name: ''});\n     * ```\n     */\n    cancelOperation(request, options, callback) {\n        return this.operationsClient.cancelOperation(request, options, callback);\n    }\n    /**\n     * Deletes a long-running operation. This method indicates that the client is\n     * no longer interested in the operation result. It does not cancel the\n     * operation. If the server doesn't support this method, it returns\n     * `google.rpc.Code.UNIMPLEMENTED`.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation resource to be deleted.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     * e.g, timeout, retries, paginations, etc. See {@link\n     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}\n     * for the details.\n     * @param {function(?Error)=} callback\n     *   The function which will be called with the result of the API call.\n     * @return {Promise} - The promise which resolves when API call finishes.\n     *   The promise has a method named \"cancel\" which cancels the ongoing API\n     * call.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * await client.deleteOperation({name: ''});\n     * ```\n     */\n    deleteOperation(request, options, callback) {\n        return this.operationsClient.deleteOperation(request, options, callback);\n    }\n    // --------------------\n    // -- Path templates --\n    // --------------------\n    /**\n     * Return a fully-qualified location resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @returns {string} Resource name string.\n     */\n    locationPath(project, location) {\n        return this.pathTemplates.locationPathTemplate.render({\n            project: project,\n            location: location,\n        });\n    }\n    /**\n     * Parse the project from Location resource.\n     *\n     * @param {string} locationName\n     *   A fully-qualified path representing Location resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromLocationName(locationName) {\n        return this.pathTemplates.locationPathTemplate.match(locationName).project;\n    }\n    /**\n     * Parse the location from Location resource.\n     *\n     * @param {string} locationName\n     *   A fully-qualified path representing Location resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromLocationName(locationName) {\n        return this.pathTemplates.locationPathTemplate.match(locationName).location;\n    }\n    /**\n     * Return a fully-qualified product resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} product\n     * @returns {string} Resource name string.\n     */\n    productPath(project, location, product) {\n        return this.pathTemplates.productPathTemplate.render({\n            project: project,\n            location: location,\n            product: product,\n        });\n    }\n    /**\n     * Parse the project from Product resource.\n     *\n     * @param {string} productName\n     *   A fully-qualified path representing Product resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProductName(productName) {\n        return this.pathTemplates.productPathTemplate.match(productName).project;\n    }\n    /**\n     * Parse the location from Product resource.\n     *\n     * @param {string} productName\n     *   A fully-qualified path representing Product resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromProductName(productName) {\n        return this.pathTemplates.productPathTemplate.match(productName).location;\n    }\n    /**\n     * Parse the product from Product resource.\n     *\n     * @param {string} productName\n     *   A fully-qualified path representing Product resource.\n     * @returns {string} A string representing the product.\n     */\n    matchProductFromProductName(productName) {\n        return this.pathTemplates.productPathTemplate.match(productName).product;\n    }\n    /**\n     * Return a fully-qualified productSet resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} product_set\n     * @returns {string} Resource name string.\n     */\n    productSetPath(project, location, productSet) {\n        return this.pathTemplates.productSetPathTemplate.render({\n            project: project,\n            location: location,\n            product_set: productSet,\n        });\n    }\n    /**\n     * Parse the project from ProductSet resource.\n     *\n     * @param {string} productSetName\n     *   A fully-qualified path representing ProductSet resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProductSetName(productSetName) {\n        return this.pathTemplates.productSetPathTemplate.match(productSetName)\n            .project;\n    }\n    /**\n     * Parse the location from ProductSet resource.\n     *\n     * @param {string} productSetName\n     *   A fully-qualified path representing ProductSet resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromProductSetName(productSetName) {\n        return this.pathTemplates.productSetPathTemplate.match(productSetName)\n            .location;\n    }\n    /**\n     * Parse the product_set from ProductSet resource.\n     *\n     * @param {string} productSetName\n     *   A fully-qualified path representing ProductSet resource.\n     * @returns {string} A string representing the product_set.\n     */\n    matchProductSetFromProductSetName(productSetName) {\n        return this.pathTemplates.productSetPathTemplate.match(productSetName)\n            .product_set;\n    }\n    /**\n     * Return a fully-qualified referenceImage resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} product\n     * @param {string} reference_image\n     * @returns {string} Resource name string.\n     */\n    referenceImagePath(project, location, product, referenceImage) {\n        return this.pathTemplates.referenceImagePathTemplate.render({\n            project: project,\n            location: location,\n            product: product,\n            reference_image: referenceImage,\n        });\n    }\n    /**\n     * Parse the project from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).project;\n    }\n    /**\n     * Parse the location from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).location;\n    }\n    /**\n     * Parse the product from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the product.\n     */\n    matchProductFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).product;\n    }\n    /**\n     * Parse the reference_image from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the reference_image.\n     */\n    matchReferenceImageFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).reference_image;\n    }\n    /**\n     * Terminate the gRPC channel and close the client.\n     *\n     * The client will no longer be usable and all future behavior is undefined.\n     * @returns {Promise} A promise that resolves when the client is closed.\n     */\n    close() {\n        if (this.productSearchStub && !this._terminated) {\n            return this.productSearchStub.then(stub => {\n                this._terminated = true;\n                stub.close();\n                this.operationsClient.close();\n            });\n        }\n        return Promise.resolve();\n    }\n}\nexports.ProductSearchClient = ProductSearchClient;\n//# sourceMappingURL=product_search_client.js.map"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2070, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2075, "column": 0}, "map": {"version":3,"sources":["file:///Users/dokyunglee/Documents/Hackathon/Mental-Health-Tracker-App/next-frontend/node_modules/%40google-cloud/vision/build/src/v1/index.js"],"sourcesContent":["\"use strict\";\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProductSearchClient = exports.ImageAnnotatorClient = void 0;\nvar image_annotator_client_1 = require(\"./image_annotator_client\");\nObject.defineProperty(exports, \"ImageAnnotatorClient\", { enumerable: true, get: function () { return image_annotator_client_1.ImageAnnotatorClient; } });\nvar product_search_client_1 = require(\"./product_search_client\");\nObject.defineProperty(exports, \"ProductSearchClient\", { enumerable: true, get: function () { return product_search_client_1.ProductSearchClient; } });\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,EAAE;AACF,4EAA4E;AAC5E,iEAAiE;AACjE,qDAAqD;AACrD,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,mBAAmB,GAAG,QAAQ,oBAAoB,GAAG,KAAK;AAClE,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,wBAAwB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,yBAAyB,oBAAoB;IAAE;AAAE;AACtJ,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,uBAAuB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,wBAAwB,mBAAmB;IAAE;AAAE,IACnJ,iCAAiC","ignoreList":[0]}},
    {"offset": {"line": 2111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2121, "column": 0}, "map": {"version":3,"sources":["file:///Users/dokyunglee/Documents/Hackathon/Mental-Health-Tracker-App/next-frontend/node_modules/%40google-cloud/vision/build/src/v1p1beta1/image_annotator_client.js"],"sourcesContent":["\"use strict\";\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImageAnnotatorClient = void 0;\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v1p1beta1/image_annotator_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./image_annotator_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Service that performs Google Cloud Vision API detection tasks over client\n *  images, such as face, landmark, logo, label, and text detection. The\n *  ImageAnnotator service returns detected entities from the images.\n * @class\n * @memberof v1p1beta1\n */\nclass ImageAnnotatorClient {\n    /**\n     * Construct an instance of ImageAnnotatorClient.\n     *\n     * @param {object} [options] - The configuration object.\n     * The options accepted by the constructor are described in detail\n     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n     * The common options are:\n     * @param {object} [options.credentials] - Credentials object.\n     * @param {string} [options.credentials.client_email]\n     * @param {string} [options.credentials.private_key]\n     * @param {string} [options.email] - Account email address. Required when\n     *     using a .pem or .p12 keyFilename.\n     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n     *     .p12 key downloaded from the Google Developers Console. If you provide\n     *     a path to a JSON file, the projectId option below is not necessary.\n     *     NOTE: .pem and .p12 require you to specify options.email as well.\n     * @param {number} [options.port] - The port on which to connect to\n     *     the remote host.\n     * @param {string} [options.projectId] - The project ID from the Google\n     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n     *     the environment variable GCLOUD_PROJECT for your project ID. If your\n     *     app is running in an environment which supports\n     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n     *     your project ID will be detected automatically.\n     * @param {string} [options.apiEndpoint] - The domain name of the\n     *     API remote host.\n     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n     *     Follows the structure of {@link gapicConfig}.\n     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n     *     For more information, please check the\n     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n     *     need to avoid loading the default gRPC version and want to use the fallback\n     *     HTTP implementation. Load only fallback version and pass it to the constructor:\n     *     ```\n     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n     *     const client = new ImageAnnotatorClient({fallback: true}, gax);\n     *     ```\n     */\n    constructor(opts, gaxInstance) {\n        var _a, _b, _c, _d, _e;\n        this._terminated = false;\n        this.descriptors = {\n            page: {},\n            stream: {},\n            longrunning: {},\n            batching: {},\n        };\n        // Ensure that options include all the required fields.\n        const staticMembers = this.constructor;\n        if ((opts === null || opts === void 0 ? void 0 : opts.universe_domain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universeDomain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== (opts === null || opts === void 0 ? void 0 : opts.universeDomain)) {\n            throw new Error('Please set either universe_domain or universeDomain, but not both.');\n        }\n        const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object'\n            ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN']\n            : undefined;\n        this._universeDomain =\n            (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.universeDomain) !== null && _a !== void 0 ? _a : opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== null && _b !== void 0 ? _b : universeDomainEnvVar) !== null && _c !== void 0 ? _c : 'googleapis.com';\n        this._servicePath = 'vision.' + this._universeDomain;\n        const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || this._servicePath;\n        this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n        const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n        const clientConfig = (_d = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _d !== void 0 ? _d : {};\n        const fallback = (_e = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _e !== void 0 ? _e : (typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function');\n        opts = Object.assign({ servicePath, port, clientConfig, fallback }, opts);\n        // Request numeric enum values if REST transport is used.\n        opts.numericEnums = true;\n        // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n        if (servicePath !== this._servicePath && !('scopes' in opts)) {\n            opts['scopes'] = staticMembers.scopes;\n        }\n        // Load google-gax module synchronously if needed\n        if (!gaxInstance) {\n            gaxInstance = require('google-gax');\n        }\n        // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n        this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n        // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n        this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n        // Save options to use in initialize() method.\n        this._opts = opts;\n        // Save the auth object to the client, for use by other methods.\n        this.auth = this._gaxGrpc.auth;\n        // Set useJWTAccessWithScope on the auth object.\n        this.auth.useJWTAccessWithScope = true;\n        // Set defaultServicePath on the auth object.\n        this.auth.defaultServicePath = this._servicePath;\n        // Set the default scopes in auth client if needed.\n        if (servicePath === this._servicePath) {\n            this.auth.defaultScopes = staticMembers.scopes;\n        }\n        // Determine the client header string.\n        const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n        if (typeof process === 'object' && 'versions' in process) {\n            clientHeader.push(`gl-node/${process.versions.node}`);\n        }\n        else {\n            clientHeader.push(`gl-web/${this._gaxModule.version}`);\n        }\n        if (!opts.fallback) {\n            clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n        }\n        else {\n            clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n        }\n        if (opts.libName && opts.libVersion) {\n            clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n        }\n        // Load the applicable protos.\n        this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n        // Put together the default options sent with requests.\n        this._defaults = this._gaxGrpc.constructSettings('google.cloud.vision.v1p1beta1.ImageAnnotator', gapicConfig, opts.clientConfig || {}, { 'x-goog-api-client': clientHeader.join(' ') });\n        // Set up a dictionary of \"inner API calls\"; the core implementation\n        // of calling the API is handled in `google-gax`, with this code\n        // merely providing the destination and request information.\n        this.innerApiCalls = {};\n        // Add a warn function to the client constructor so it can be easily tested.\n        this.warn = this._gaxModule.warn;\n    }\n    /**\n     * Initialize the client.\n     * Performs asynchronous operations (such as authentication) and prepares the client.\n     * This function will be called automatically when any class method is called for the\n     * first time, but if you need to initialize it before calling an actual method,\n     * feel free to call initialize() directly.\n     *\n     * You can await on this method if you want to make sure the client is initialized.\n     *\n     * @returns {Promise} A promise that resolves to an authenticated service stub.\n     */\n    initialize() {\n        // If the client stub promise is already initialized, return immediately.\n        if (this.imageAnnotatorStub) {\n            return this.imageAnnotatorStub;\n        }\n        // Put together the \"service stub\" for\n        // google.cloud.vision.v1p1beta1.ImageAnnotator.\n        this.imageAnnotatorStub = this._gaxGrpc.createStub(this._opts.fallback\n            ? this._protos.lookupService('google.cloud.vision.v1p1beta1.ImageAnnotator')\n            : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this._protos.google.cloud.vision.v1p1beta1.ImageAnnotator, this._opts, this._providedCustomServicePath);\n        // Iterate over each of the methods that the service provides\n        // and create an API call method for each.\n        const imageAnnotatorStubMethods = ['batchAnnotateImages'];\n        for (const methodName of imageAnnotatorStubMethods) {\n            const callPromise = this.imageAnnotatorStub.then(stub => (...args) => {\n                if (this._terminated) {\n                    return Promise.reject('The client has already been closed.');\n                }\n                const func = stub[methodName];\n                return func.apply(stub, args);\n            }, (err) => () => {\n                throw err;\n            });\n            const descriptor = undefined;\n            const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n            this.innerApiCalls[methodName] = apiCall;\n        }\n        return this.imageAnnotatorStub;\n    }\n    /**\n     * The DNS address for this API service.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get servicePath() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'vision.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service - same as servicePath.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get apiEndpoint() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'vision.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service.\n     * @returns {string} The DNS address for this service.\n     */\n    get apiEndpoint() {\n        return this._servicePath;\n    }\n    get universeDomain() {\n        return this._universeDomain;\n    }\n    /**\n     * The port for this API service.\n     * @returns {number} The default port for this service.\n     */\n    static get port() {\n        return 443;\n    }\n    /**\n     * The scopes needed to make gRPC calls for every method defined\n     * in this service.\n     * @returns {string[]} List of default scopes.\n     */\n    static get scopes() {\n        return [\n            'https://www.googleapis.com/auth/cloud-platform',\n            'https://www.googleapis.com/auth/cloud-vision',\n        ];\n    }\n    /**\n     * Return the project ID used by this class.\n     * @returns {Promise} A promise that resolves to string containing the project ID.\n     */\n    getProjectId(callback) {\n        if (callback) {\n            this.auth.getProjectId(callback);\n            return;\n        }\n        return this.auth.getProjectId();\n    }\n    batchAnnotateImages(request, optionsOrCallback, callback) {\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        this.initialize();\n        return this.innerApiCalls.batchAnnotateImages(request, options, callback);\n    }\n    /**\n     * Terminate the gRPC channel and close the client.\n     *\n     * The client will no longer be usable and all future behavior is undefined.\n     * @returns {Promise} A promise that resolves when the client is closed.\n     */\n    close() {\n        if (this.imageAnnotatorStub && !this._terminated) {\n            return this.imageAnnotatorStub.then(stub => {\n                this._terminated = true;\n                stub.close();\n            });\n        }\n        return Promise.resolve();\n    }\n}\nexports.ImageAnnotatorClient = ImageAnnotatorClient;\n//# sourceMappingURL=image_annotator_client.js.map"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2406, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2411, "column": 0}, "map": {"version":3,"sources":["file:///Users/dokyunglee/Documents/Hackathon/Mental-Health-Tracker-App/next-frontend/node_modules/%40google-cloud/vision/build/src/v1p1beta1/index.js"],"sourcesContent":["\"use strict\";\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImageAnnotatorClient = void 0;\nvar image_annotator_client_1 = require(\"./image_annotator_client\");\nObject.defineProperty(exports, \"ImageAnnotatorClient\", { enumerable: true, get: function () { return image_annotator_client_1.ImageAnnotatorClient; } });\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,EAAE;AACF,4EAA4E;AAC5E,iEAAiE;AACjE,qDAAqD;AACrD,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,oBAAoB,GAAG,KAAK;AACpC,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,wBAAwB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,yBAAyB,oBAAoB;IAAE;AAAE,IACtJ,iCAAiC","ignoreList":[0]}},
    {"offset": {"line": 2440, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2450, "column": 0}, "map": {"version":3,"sources":["file:///Users/dokyunglee/Documents/Hackathon/Mental-Health-Tracker-App/next-frontend/node_modules/%40google-cloud/vision/build/src/v1p2beta1/image_annotator_client.js"],"sourcesContent":["\"use strict\";\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImageAnnotatorClient = void 0;\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v1p2beta1/image_annotator_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./image_annotator_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Service that performs Google Cloud Vision API detection tasks over client\n *  images, such as face, landmark, logo, label, and text detection. The\n *  ImageAnnotator service returns detected entities from the images.\n * @class\n * @memberof v1p2beta1\n */\nclass ImageAnnotatorClient {\n    /**\n     * Construct an instance of ImageAnnotatorClient.\n     *\n     * @param {object} [options] - The configuration object.\n     * The options accepted by the constructor are described in detail\n     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n     * The common options are:\n     * @param {object} [options.credentials] - Credentials object.\n     * @param {string} [options.credentials.client_email]\n     * @param {string} [options.credentials.private_key]\n     * @param {string} [options.email] - Account email address. Required when\n     *     using a .pem or .p12 keyFilename.\n     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n     *     .p12 key downloaded from the Google Developers Console. If you provide\n     *     a path to a JSON file, the projectId option below is not necessary.\n     *     NOTE: .pem and .p12 require you to specify options.email as well.\n     * @param {number} [options.port] - The port on which to connect to\n     *     the remote host.\n     * @param {string} [options.projectId] - The project ID from the Google\n     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n     *     the environment variable GCLOUD_PROJECT for your project ID. If your\n     *     app is running in an environment which supports\n     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n     *     your project ID will be detected automatically.\n     * @param {string} [options.apiEndpoint] - The domain name of the\n     *     API remote host.\n     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n     *     Follows the structure of {@link gapicConfig}.\n     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n     *     For more information, please check the\n     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n     *     need to avoid loading the default gRPC version and want to use the fallback\n     *     HTTP implementation. Load only fallback version and pass it to the constructor:\n     *     ```\n     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n     *     const client = new ImageAnnotatorClient({fallback: true}, gax);\n     *     ```\n     */\n    constructor(opts, gaxInstance) {\n        var _a, _b, _c, _d, _e;\n        this._terminated = false;\n        this.descriptors = {\n            page: {},\n            stream: {},\n            longrunning: {},\n            batching: {},\n        };\n        // Ensure that options include all the required fields.\n        const staticMembers = this.constructor;\n        if ((opts === null || opts === void 0 ? void 0 : opts.universe_domain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universeDomain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== (opts === null || opts === void 0 ? void 0 : opts.universeDomain)) {\n            throw new Error('Please set either universe_domain or universeDomain, but not both.');\n        }\n        const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object'\n            ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN']\n            : undefined;\n        this._universeDomain =\n            (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.universeDomain) !== null && _a !== void 0 ? _a : opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== null && _b !== void 0 ? _b : universeDomainEnvVar) !== null && _c !== void 0 ? _c : 'googleapis.com';\n        this._servicePath = 'vision.' + this._universeDomain;\n        const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || this._servicePath;\n        this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n        const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n        const clientConfig = (_d = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _d !== void 0 ? _d : {};\n        const fallback = (_e = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _e !== void 0 ? _e : (typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function');\n        opts = Object.assign({ servicePath, port, clientConfig, fallback }, opts);\n        // Request numeric enum values if REST transport is used.\n        opts.numericEnums = true;\n        // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n        if (servicePath !== this._servicePath && !('scopes' in opts)) {\n            opts['scopes'] = staticMembers.scopes;\n        }\n        // Load google-gax module synchronously if needed\n        if (!gaxInstance) {\n            gaxInstance = require('google-gax');\n        }\n        // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n        this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n        // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n        this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n        // Save options to use in initialize() method.\n        this._opts = opts;\n        // Save the auth object to the client, for use by other methods.\n        this.auth = this._gaxGrpc.auth;\n        // Set useJWTAccessWithScope on the auth object.\n        this.auth.useJWTAccessWithScope = true;\n        // Set defaultServicePath on the auth object.\n        this.auth.defaultServicePath = this._servicePath;\n        // Set the default scopes in auth client if needed.\n        if (servicePath === this._servicePath) {\n            this.auth.defaultScopes = staticMembers.scopes;\n        }\n        // Determine the client header string.\n        const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n        if (typeof process === 'object' && 'versions' in process) {\n            clientHeader.push(`gl-node/${process.versions.node}`);\n        }\n        else {\n            clientHeader.push(`gl-web/${this._gaxModule.version}`);\n        }\n        if (!opts.fallback) {\n            clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n        }\n        else {\n            clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n        }\n        if (opts.libName && opts.libVersion) {\n            clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n        }\n        // Load the applicable protos.\n        this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n        const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);\n        // This API contains \"long-running operations\", which return a\n        // an Operation object that allows for tracking of the operation,\n        // rather than holding a request open.\n        const lroOptions = {\n            auth: this.auth,\n            grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,\n        };\n        if (opts.fallback) {\n            lroOptions.protoJson = protoFilesRoot;\n            lroOptions.httpRules = [];\n        }\n        this.operationsClient = this._gaxModule\n            .lro(lroOptions)\n            .operationsClient(opts);\n        const asyncBatchAnnotateFilesResponse = protoFilesRoot.lookup('.google.cloud.vision.v1p2beta1.AsyncBatchAnnotateFilesResponse');\n        const asyncBatchAnnotateFilesMetadata = protoFilesRoot.lookup('.google.cloud.vision.v1p2beta1.OperationMetadata');\n        this.descriptors.longrunning = {\n            asyncBatchAnnotateFiles: new this._gaxModule.LongrunningDescriptor(this.operationsClient, asyncBatchAnnotateFilesResponse.decode.bind(asyncBatchAnnotateFilesResponse), asyncBatchAnnotateFilesMetadata.decode.bind(asyncBatchAnnotateFilesMetadata)),\n        };\n        // Put together the default options sent with requests.\n        this._defaults = this._gaxGrpc.constructSettings('google.cloud.vision.v1p2beta1.ImageAnnotator', gapicConfig, opts.clientConfig || {}, { 'x-goog-api-client': clientHeader.join(' ') });\n        // Set up a dictionary of \"inner API calls\"; the core implementation\n        // of calling the API is handled in `google-gax`, with this code\n        // merely providing the destination and request information.\n        this.innerApiCalls = {};\n        // Add a warn function to the client constructor so it can be easily tested.\n        this.warn = this._gaxModule.warn;\n    }\n    /**\n     * Initialize the client.\n     * Performs asynchronous operations (such as authentication) and prepares the client.\n     * This function will be called automatically when any class method is called for the\n     * first time, but if you need to initialize it before calling an actual method,\n     * feel free to call initialize() directly.\n     *\n     * You can await on this method if you want to make sure the client is initialized.\n     *\n     * @returns {Promise} A promise that resolves to an authenticated service stub.\n     */\n    initialize() {\n        // If the client stub promise is already initialized, return immediately.\n        if (this.imageAnnotatorStub) {\n            return this.imageAnnotatorStub;\n        }\n        // Put together the \"service stub\" for\n        // google.cloud.vision.v1p2beta1.ImageAnnotator.\n        this.imageAnnotatorStub = this._gaxGrpc.createStub(this._opts.fallback\n            ? this._protos.lookupService('google.cloud.vision.v1p2beta1.ImageAnnotator')\n            : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this._protos.google.cloud.vision.v1p2beta1.ImageAnnotator, this._opts, this._providedCustomServicePath);\n        // Iterate over each of the methods that the service provides\n        // and create an API call method for each.\n        const imageAnnotatorStubMethods = [\n            'batchAnnotateImages',\n            'asyncBatchAnnotateFiles',\n        ];\n        for (const methodName of imageAnnotatorStubMethods) {\n            const callPromise = this.imageAnnotatorStub.then(stub => (...args) => {\n                if (this._terminated) {\n                    return Promise.reject('The client has already been closed.');\n                }\n                const func = stub[methodName];\n                return func.apply(stub, args);\n            }, (err) => () => {\n                throw err;\n            });\n            const descriptor = this.descriptors.longrunning[methodName] || undefined;\n            const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n            this.innerApiCalls[methodName] = apiCall;\n        }\n        return this.imageAnnotatorStub;\n    }\n    /**\n     * The DNS address for this API service.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get servicePath() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'vision.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service - same as servicePath.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get apiEndpoint() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'vision.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service.\n     * @returns {string} The DNS address for this service.\n     */\n    get apiEndpoint() {\n        return this._servicePath;\n    }\n    get universeDomain() {\n        return this._universeDomain;\n    }\n    /**\n     * The port for this API service.\n     * @returns {number} The default port for this service.\n     */\n    static get port() {\n        return 443;\n    }\n    /**\n     * The scopes needed to make gRPC calls for every method defined\n     * in this service.\n     * @returns {string[]} List of default scopes.\n     */\n    static get scopes() {\n        return [\n            'https://www.googleapis.com/auth/cloud-platform',\n            'https://www.googleapis.com/auth/cloud-vision',\n        ];\n    }\n    /**\n     * Return the project ID used by this class.\n     * @returns {Promise} A promise that resolves to string containing the project ID.\n     */\n    getProjectId(callback) {\n        if (callback) {\n            this.auth.getProjectId(callback);\n            return;\n        }\n        return this.auth.getProjectId();\n    }\n    batchAnnotateImages(request, optionsOrCallback, callback) {\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        this.initialize();\n        return this.innerApiCalls.batchAnnotateImages(request, options, callback);\n    }\n    asyncBatchAnnotateFiles(request, optionsOrCallback, callback) {\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        this.initialize();\n        return this.innerApiCalls.asyncBatchAnnotateFiles(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `asyncBatchAnnotateFiles()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1p2beta1/image_annotator.async_batch_annotate_files.js</caption>\n     * region_tag:vision_v1p2beta1_generated_ImageAnnotator_AsyncBatchAnnotateFiles_async\n     */\n    async checkAsyncBatchAnnotateFilesProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.asyncBatchAnnotateFiles, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    /**\n     * Terminate the gRPC channel and close the client.\n     *\n     * The client will no longer be usable and all future behavior is undefined.\n     * @returns {Promise} A promise that resolves when the client is closed.\n     */\n    close() {\n        if (this.imageAnnotatorStub && !this._terminated) {\n            return this.imageAnnotatorStub.then(stub => {\n                this._terminated = true;\n                stub.close();\n                this.operationsClient.close();\n            });\n        }\n        return Promise.resolve();\n    }\n}\nexports.ImageAnnotatorClient = ImageAnnotatorClient;\n//# sourceMappingURL=image_annotator_client.js.map"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2788, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2793, "column": 0}, "map": {"version":3,"sources":["file:///Users/dokyunglee/Documents/Hackathon/Mental-Health-Tracker-App/next-frontend/node_modules/%40google-cloud/vision/build/src/v1p2beta1/index.js"],"sourcesContent":["\"use strict\";\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImageAnnotatorClient = void 0;\nvar image_annotator_client_1 = require(\"./image_annotator_client\");\nObject.defineProperty(exports, \"ImageAnnotatorClient\", { enumerable: true, get: function () { return image_annotator_client_1.ImageAnnotatorClient; } });\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,EAAE;AACF,4EAA4E;AAC5E,iEAAiE;AACjE,qDAAqD;AACrD,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,oBAAoB,GAAG,KAAK;AACpC,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,wBAAwB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,yBAAyB,oBAAoB;IAAE;AAAE,IACtJ,iCAAiC","ignoreList":[0]}},
    {"offset": {"line": 2822, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2832, "column": 0}, "map": {"version":3,"sources":["file:///Users/dokyunglee/Documents/Hackathon/Mental-Health-Tracker-App/next-frontend/node_modules/%40google-cloud/vision/build/src/v1p3beta1/image_annotator_client.js"],"sourcesContent":["\"use strict\";\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImageAnnotatorClient = void 0;\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v1p3beta1/image_annotator_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./image_annotator_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Service that performs Google Cloud Vision API detection tasks over client\n *  images, such as face, landmark, logo, label, and text detection. The\n *  ImageAnnotator service returns detected entities from the images.\n * @class\n * @memberof v1p3beta1\n */\nclass ImageAnnotatorClient {\n    /**\n     * Construct an instance of ImageAnnotatorClient.\n     *\n     * @param {object} [options] - The configuration object.\n     * The options accepted by the constructor are described in detail\n     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n     * The common options are:\n     * @param {object} [options.credentials] - Credentials object.\n     * @param {string} [options.credentials.client_email]\n     * @param {string} [options.credentials.private_key]\n     * @param {string} [options.email] - Account email address. Required when\n     *     using a .pem or .p12 keyFilename.\n     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n     *     .p12 key downloaded from the Google Developers Console. If you provide\n     *     a path to a JSON file, the projectId option below is not necessary.\n     *     NOTE: .pem and .p12 require you to specify options.email as well.\n     * @param {number} [options.port] - The port on which to connect to\n     *     the remote host.\n     * @param {string} [options.projectId] - The project ID from the Google\n     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n     *     the environment variable GCLOUD_PROJECT for your project ID. If your\n     *     app is running in an environment which supports\n     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n     *     your project ID will be detected automatically.\n     * @param {string} [options.apiEndpoint] - The domain name of the\n     *     API remote host.\n     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n     *     Follows the structure of {@link gapicConfig}.\n     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n     *     For more information, please check the\n     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n     *     need to avoid loading the default gRPC version and want to use the fallback\n     *     HTTP implementation. Load only fallback version and pass it to the constructor:\n     *     ```\n     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n     *     const client = new ImageAnnotatorClient({fallback: true}, gax);\n     *     ```\n     */\n    constructor(opts, gaxInstance) {\n        var _a, _b, _c, _d, _e;\n        this._terminated = false;\n        this.descriptors = {\n            page: {},\n            stream: {},\n            longrunning: {},\n            batching: {},\n        };\n        // Ensure that options include all the required fields.\n        const staticMembers = this.constructor;\n        if ((opts === null || opts === void 0 ? void 0 : opts.universe_domain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universeDomain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== (opts === null || opts === void 0 ? void 0 : opts.universeDomain)) {\n            throw new Error('Please set either universe_domain or universeDomain, but not both.');\n        }\n        const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object'\n            ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN']\n            : undefined;\n        this._universeDomain =\n            (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.universeDomain) !== null && _a !== void 0 ? _a : opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== null && _b !== void 0 ? _b : universeDomainEnvVar) !== null && _c !== void 0 ? _c : 'googleapis.com';\n        this._servicePath = 'vision.' + this._universeDomain;\n        const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || this._servicePath;\n        this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n        const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n        const clientConfig = (_d = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _d !== void 0 ? _d : {};\n        const fallback = (_e = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _e !== void 0 ? _e : (typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function');\n        opts = Object.assign({ servicePath, port, clientConfig, fallback }, opts);\n        // Request numeric enum values if REST transport is used.\n        opts.numericEnums = true;\n        // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n        if (servicePath !== this._servicePath && !('scopes' in opts)) {\n            opts['scopes'] = staticMembers.scopes;\n        }\n        // Load google-gax module synchronously if needed\n        if (!gaxInstance) {\n            gaxInstance = require('google-gax');\n        }\n        // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n        this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n        // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n        this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n        // Save options to use in initialize() method.\n        this._opts = opts;\n        // Save the auth object to the client, for use by other methods.\n        this.auth = this._gaxGrpc.auth;\n        // Set useJWTAccessWithScope on the auth object.\n        this.auth.useJWTAccessWithScope = true;\n        // Set defaultServicePath on the auth object.\n        this.auth.defaultServicePath = this._servicePath;\n        // Set the default scopes in auth client if needed.\n        if (servicePath === this._servicePath) {\n            this.auth.defaultScopes = staticMembers.scopes;\n        }\n        // Determine the client header string.\n        const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n        if (typeof process === 'object' && 'versions' in process) {\n            clientHeader.push(`gl-node/${process.versions.node}`);\n        }\n        else {\n            clientHeader.push(`gl-web/${this._gaxModule.version}`);\n        }\n        if (!opts.fallback) {\n            clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n        }\n        else {\n            clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n        }\n        if (opts.libName && opts.libVersion) {\n            clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n        }\n        // Load the applicable protos.\n        this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n        // This API contains \"path templates\"; forward-slash-separated\n        // identifiers to uniquely identify resources within the API.\n        // Create useful helper objects for these.\n        this.pathTemplates = {\n            productPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/products/{product}'),\n            productSetPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/productSets/{product_set}'),\n            referenceImagePathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/products/{product}/referenceImages/{reference_image}'),\n        };\n        const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);\n        // This API contains \"long-running operations\", which return a\n        // an Operation object that allows for tracking of the operation,\n        // rather than holding a request open.\n        const lroOptions = {\n            auth: this.auth,\n            grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,\n        };\n        if (opts.fallback) {\n            lroOptions.protoJson = protoFilesRoot;\n            lroOptions.httpRules = [];\n        }\n        this.operationsClient = this._gaxModule\n            .lro(lroOptions)\n            .operationsClient(opts);\n        const asyncBatchAnnotateFilesResponse = protoFilesRoot.lookup('.google.cloud.vision.v1p3beta1.AsyncBatchAnnotateFilesResponse');\n        const asyncBatchAnnotateFilesMetadata = protoFilesRoot.lookup('.google.cloud.vision.v1p3beta1.OperationMetadata');\n        this.descriptors.longrunning = {\n            asyncBatchAnnotateFiles: new this._gaxModule.LongrunningDescriptor(this.operationsClient, asyncBatchAnnotateFilesResponse.decode.bind(asyncBatchAnnotateFilesResponse), asyncBatchAnnotateFilesMetadata.decode.bind(asyncBatchAnnotateFilesMetadata)),\n        };\n        // Put together the default options sent with requests.\n        this._defaults = this._gaxGrpc.constructSettings('google.cloud.vision.v1p3beta1.ImageAnnotator', gapicConfig, opts.clientConfig || {}, { 'x-goog-api-client': clientHeader.join(' ') });\n        // Set up a dictionary of \"inner API calls\"; the core implementation\n        // of calling the API is handled in `google-gax`, with this code\n        // merely providing the destination and request information.\n        this.innerApiCalls = {};\n        // Add a warn function to the client constructor so it can be easily tested.\n        this.warn = this._gaxModule.warn;\n    }\n    /**\n     * Initialize the client.\n     * Performs asynchronous operations (such as authentication) and prepares the client.\n     * This function will be called automatically when any class method is called for the\n     * first time, but if you need to initialize it before calling an actual method,\n     * feel free to call initialize() directly.\n     *\n     * You can await on this method if you want to make sure the client is initialized.\n     *\n     * @returns {Promise} A promise that resolves to an authenticated service stub.\n     */\n    initialize() {\n        // If the client stub promise is already initialized, return immediately.\n        if (this.imageAnnotatorStub) {\n            return this.imageAnnotatorStub;\n        }\n        // Put together the \"service stub\" for\n        // google.cloud.vision.v1p3beta1.ImageAnnotator.\n        this.imageAnnotatorStub = this._gaxGrpc.createStub(this._opts.fallback\n            ? this._protos.lookupService('google.cloud.vision.v1p3beta1.ImageAnnotator')\n            : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this._protos.google.cloud.vision.v1p3beta1.ImageAnnotator, this._opts, this._providedCustomServicePath);\n        // Iterate over each of the methods that the service provides\n        // and create an API call method for each.\n        const imageAnnotatorStubMethods = [\n            'batchAnnotateImages',\n            'asyncBatchAnnotateFiles',\n        ];\n        for (const methodName of imageAnnotatorStubMethods) {\n            const callPromise = this.imageAnnotatorStub.then(stub => (...args) => {\n                if (this._terminated) {\n                    return Promise.reject('The client has already been closed.');\n                }\n                const func = stub[methodName];\n                return func.apply(stub, args);\n            }, (err) => () => {\n                throw err;\n            });\n            const descriptor = this.descriptors.longrunning[methodName] || undefined;\n            const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n            this.innerApiCalls[methodName] = apiCall;\n        }\n        return this.imageAnnotatorStub;\n    }\n    /**\n     * The DNS address for this API service.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get servicePath() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'vision.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service - same as servicePath.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get apiEndpoint() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'vision.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service.\n     * @returns {string} The DNS address for this service.\n     */\n    get apiEndpoint() {\n        return this._servicePath;\n    }\n    get universeDomain() {\n        return this._universeDomain;\n    }\n    /**\n     * The port for this API service.\n     * @returns {number} The default port for this service.\n     */\n    static get port() {\n        return 443;\n    }\n    /**\n     * The scopes needed to make gRPC calls for every method defined\n     * in this service.\n     * @returns {string[]} List of default scopes.\n     */\n    static get scopes() {\n        return [\n            'https://www.googleapis.com/auth/cloud-platform',\n            'https://www.googleapis.com/auth/cloud-vision',\n        ];\n    }\n    /**\n     * Return the project ID used by this class.\n     * @returns {Promise} A promise that resolves to string containing the project ID.\n     */\n    getProjectId(callback) {\n        if (callback) {\n            this.auth.getProjectId(callback);\n            return;\n        }\n        return this.auth.getProjectId();\n    }\n    batchAnnotateImages(request, optionsOrCallback, callback) {\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        this.initialize();\n        return this.innerApiCalls.batchAnnotateImages(request, options, callback);\n    }\n    asyncBatchAnnotateFiles(request, optionsOrCallback, callback) {\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        this.initialize();\n        return this.innerApiCalls.asyncBatchAnnotateFiles(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `asyncBatchAnnotateFiles()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1p3beta1/image_annotator.async_batch_annotate_files.js</caption>\n     * region_tag:vision_v1p3beta1_generated_ImageAnnotator_AsyncBatchAnnotateFiles_async\n     */\n    async checkAsyncBatchAnnotateFilesProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.asyncBatchAnnotateFiles, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    // --------------------\n    // -- Path templates --\n    // --------------------\n    /**\n     * Return a fully-qualified product resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} product\n     * @returns {string} Resource name string.\n     */\n    productPath(project, location, product) {\n        return this.pathTemplates.productPathTemplate.render({\n            project: project,\n            location: location,\n            product: product,\n        });\n    }\n    /**\n     * Parse the project from Product resource.\n     *\n     * @param {string} productName\n     *   A fully-qualified path representing Product resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProductName(productName) {\n        return this.pathTemplates.productPathTemplate.match(productName).project;\n    }\n    /**\n     * Parse the location from Product resource.\n     *\n     * @param {string} productName\n     *   A fully-qualified path representing Product resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromProductName(productName) {\n        return this.pathTemplates.productPathTemplate.match(productName).location;\n    }\n    /**\n     * Parse the product from Product resource.\n     *\n     * @param {string} productName\n     *   A fully-qualified path representing Product resource.\n     * @returns {string} A string representing the product.\n     */\n    matchProductFromProductName(productName) {\n        return this.pathTemplates.productPathTemplate.match(productName).product;\n    }\n    /**\n     * Return a fully-qualified productSet resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} product_set\n     * @returns {string} Resource name string.\n     */\n    productSetPath(project, location, productSet) {\n        return this.pathTemplates.productSetPathTemplate.render({\n            project: project,\n            location: location,\n            product_set: productSet,\n        });\n    }\n    /**\n     * Parse the project from ProductSet resource.\n     *\n     * @param {string} productSetName\n     *   A fully-qualified path representing ProductSet resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProductSetName(productSetName) {\n        return this.pathTemplates.productSetPathTemplate.match(productSetName)\n            .project;\n    }\n    /**\n     * Parse the location from ProductSet resource.\n     *\n     * @param {string} productSetName\n     *   A fully-qualified path representing ProductSet resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromProductSetName(productSetName) {\n        return this.pathTemplates.productSetPathTemplate.match(productSetName)\n            .location;\n    }\n    /**\n     * Parse the product_set from ProductSet resource.\n     *\n     * @param {string} productSetName\n     *   A fully-qualified path representing ProductSet resource.\n     * @returns {string} A string representing the product_set.\n     */\n    matchProductSetFromProductSetName(productSetName) {\n        return this.pathTemplates.productSetPathTemplate.match(productSetName)\n            .product_set;\n    }\n    /**\n     * Return a fully-qualified referenceImage resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} product\n     * @param {string} reference_image\n     * @returns {string} Resource name string.\n     */\n    referenceImagePath(project, location, product, referenceImage) {\n        return this.pathTemplates.referenceImagePathTemplate.render({\n            project: project,\n            location: location,\n            product: product,\n            reference_image: referenceImage,\n        });\n    }\n    /**\n     * Parse the project from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).project;\n    }\n    /**\n     * Parse the location from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).location;\n    }\n    /**\n     * Parse the product from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the product.\n     */\n    matchProductFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).product;\n    }\n    /**\n     * Parse the reference_image from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the reference_image.\n     */\n    matchReferenceImageFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).reference_image;\n    }\n    /**\n     * Terminate the gRPC channel and close the client.\n     *\n     * The client will no longer be usable and all future behavior is undefined.\n     * @returns {Promise} A promise that resolves when the client is closed.\n     */\n    close() {\n        if (this.imageAnnotatorStub && !this._terminated) {\n            return this.imageAnnotatorStub.then(stub => {\n                this._terminated = true;\n                stub.close();\n                this.operationsClient.close();\n            });\n        }\n        return Promise.resolve();\n    }\n}\nexports.ImageAnnotatorClient = ImageAnnotatorClient;\n//# sourceMappingURL=image_annotator_client.js.map"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3315, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3325, "column": 0}, "map": {"version":3,"sources":["file:///Users/dokyunglee/Documents/Hackathon/Mental-Health-Tracker-App/next-frontend/node_modules/%40google-cloud/vision/build/src/v1p3beta1/product_search_client.js"],"sourcesContent":["\"use strict\";\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProductSearchClient = void 0;\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v1p3beta1/product_search_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./product_search_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Manages Products and ProductSets of reference images for use in product\n *  search. It uses the following resource model:\n *\n *  - The API has a collection of {@link protos.google.cloud.vision.v1p3beta1.ProductSet|ProductSet} resources, named\n *  `projects/* /locations/* /productSets/*`, which acts as a way to put different\n *  products into groups to limit identification.\n *\n *  In parallel,\n *\n *  - The API has a collection of {@link protos.google.cloud.vision.v1p3beta1.Product|Product} resources, named\n *    `projects/* /locations/* /products/*`\n *\n *  - Each {@link protos.google.cloud.vision.v1p3beta1.Product|Product} has a collection of {@link protos.google.cloud.vision.v1p3beta1.ReferenceImage|ReferenceImage} resources, named\n *    `projects/* /locations/* /products/* /referenceImages/*`\n * @class\n * @memberof v1p3beta1\n */\nclass ProductSearchClient {\n    /**\n     * Construct an instance of ProductSearchClient.\n     *\n     * @param {object} [options] - The configuration object.\n     * The options accepted by the constructor are described in detail\n     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n     * The common options are:\n     * @param {object} [options.credentials] - Credentials object.\n     * @param {string} [options.credentials.client_email]\n     * @param {string} [options.credentials.private_key]\n     * @param {string} [options.email] - Account email address. Required when\n     *     using a .pem or .p12 keyFilename.\n     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n     *     .p12 key downloaded from the Google Developers Console. If you provide\n     *     a path to a JSON file, the projectId option below is not necessary.\n     *     NOTE: .pem and .p12 require you to specify options.email as well.\n     * @param {number} [options.port] - The port on which to connect to\n     *     the remote host.\n     * @param {string} [options.projectId] - The project ID from the Google\n     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n     *     the environment variable GCLOUD_PROJECT for your project ID. If your\n     *     app is running in an environment which supports\n     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n     *     your project ID will be detected automatically.\n     * @param {string} [options.apiEndpoint] - The domain name of the\n     *     API remote host.\n     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n     *     Follows the structure of {@link gapicConfig}.\n     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n     *     For more information, please check the\n     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n     *     need to avoid loading the default gRPC version and want to use the fallback\n     *     HTTP implementation. Load only fallback version and pass it to the constructor:\n     *     ```\n     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n     *     const client = new ProductSearchClient({fallback: true}, gax);\n     *     ```\n     */\n    constructor(opts, gaxInstance) {\n        var _a, _b, _c, _d, _e;\n        this._terminated = false;\n        this.descriptors = {\n            page: {},\n            stream: {},\n            longrunning: {},\n            batching: {},\n        };\n        // Ensure that options include all the required fields.\n        const staticMembers = this.constructor;\n        if ((opts === null || opts === void 0 ? void 0 : opts.universe_domain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universeDomain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== (opts === null || opts === void 0 ? void 0 : opts.universeDomain)) {\n            throw new Error('Please set either universe_domain or universeDomain, but not both.');\n        }\n        const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object'\n            ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN']\n            : undefined;\n        this._universeDomain =\n            (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.universeDomain) !== null && _a !== void 0 ? _a : opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== null && _b !== void 0 ? _b : universeDomainEnvVar) !== null && _c !== void 0 ? _c : 'googleapis.com';\n        this._servicePath = 'vision.' + this._universeDomain;\n        const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || this._servicePath;\n        this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n        const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n        const clientConfig = (_d = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _d !== void 0 ? _d : {};\n        const fallback = (_e = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _e !== void 0 ? _e : (typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function');\n        opts = Object.assign({ servicePath, port, clientConfig, fallback }, opts);\n        // Request numeric enum values if REST transport is used.\n        opts.numericEnums = true;\n        // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n        if (servicePath !== this._servicePath && !('scopes' in opts)) {\n            opts['scopes'] = staticMembers.scopes;\n        }\n        // Load google-gax module synchronously if needed\n        if (!gaxInstance) {\n            gaxInstance = require('google-gax');\n        }\n        // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n        this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n        // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n        this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n        // Save options to use in initialize() method.\n        this._opts = opts;\n        // Save the auth object to the client, for use by other methods.\n        this.auth = this._gaxGrpc.auth;\n        // Set useJWTAccessWithScope on the auth object.\n        this.auth.useJWTAccessWithScope = true;\n        // Set defaultServicePath on the auth object.\n        this.auth.defaultServicePath = this._servicePath;\n        // Set the default scopes in auth client if needed.\n        if (servicePath === this._servicePath) {\n            this.auth.defaultScopes = staticMembers.scopes;\n        }\n        // Determine the client header string.\n        const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n        if (typeof process === 'object' && 'versions' in process) {\n            clientHeader.push(`gl-node/${process.versions.node}`);\n        }\n        else {\n            clientHeader.push(`gl-web/${this._gaxModule.version}`);\n        }\n        if (!opts.fallback) {\n            clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n        }\n        else {\n            clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n        }\n        if (opts.libName && opts.libVersion) {\n            clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n        }\n        // Load the applicable protos.\n        this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n        // This API contains \"path templates\"; forward-slash-separated\n        // identifiers to uniquely identify resources within the API.\n        // Create useful helper objects for these.\n        this.pathTemplates = {\n            locationPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}'),\n            productPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/products/{product}'),\n            productSetPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/productSets/{product_set}'),\n            referenceImagePathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/products/{product}/referenceImages/{reference_image}'),\n        };\n        // Some of the methods on this service return \"paged\" results,\n        // (e.g. 50 results at a time, with tokens to get subsequent\n        // pages). Denote the keys used for pagination and results.\n        this.descriptors.page = {\n            listProductSets: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'productSets'),\n            listProducts: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'products'),\n            listReferenceImages: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'referenceImages'),\n            listProductsInProductSet: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'products'),\n        };\n        const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);\n        // This API contains \"long-running operations\", which return a\n        // an Operation object that allows for tracking of the operation,\n        // rather than holding a request open.\n        const lroOptions = {\n            auth: this.auth,\n            grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,\n        };\n        if (opts.fallback) {\n            lroOptions.protoJson = protoFilesRoot;\n            lroOptions.httpRules = [];\n        }\n        this.operationsClient = this._gaxModule\n            .lro(lroOptions)\n            .operationsClient(opts);\n        const importProductSetsResponse = protoFilesRoot.lookup('.google.cloud.vision.v1p3beta1.ImportProductSetsResponse');\n        const importProductSetsMetadata = protoFilesRoot.lookup('.google.cloud.vision.v1p3beta1.BatchOperationMetadata');\n        this.descriptors.longrunning = {\n            importProductSets: new this._gaxModule.LongrunningDescriptor(this.operationsClient, importProductSetsResponse.decode.bind(importProductSetsResponse), importProductSetsMetadata.decode.bind(importProductSetsMetadata)),\n        };\n        // Put together the default options sent with requests.\n        this._defaults = this._gaxGrpc.constructSettings('google.cloud.vision.v1p3beta1.ProductSearch', gapicConfig, opts.clientConfig || {}, { 'x-goog-api-client': clientHeader.join(' ') });\n        // Set up a dictionary of \"inner API calls\"; the core implementation\n        // of calling the API is handled in `google-gax`, with this code\n        // merely providing the destination and request information.\n        this.innerApiCalls = {};\n        // Add a warn function to the client constructor so it can be easily tested.\n        this.warn = this._gaxModule.warn;\n    }\n    /**\n     * Initialize the client.\n     * Performs asynchronous operations (such as authentication) and prepares the client.\n     * This function will be called automatically when any class method is called for the\n     * first time, but if you need to initialize it before calling an actual method,\n     * feel free to call initialize() directly.\n     *\n     * You can await on this method if you want to make sure the client is initialized.\n     *\n     * @returns {Promise} A promise that resolves to an authenticated service stub.\n     */\n    initialize() {\n        // If the client stub promise is already initialized, return immediately.\n        if (this.productSearchStub) {\n            return this.productSearchStub;\n        }\n        // Put together the \"service stub\" for\n        // google.cloud.vision.v1p3beta1.ProductSearch.\n        this.productSearchStub = this._gaxGrpc.createStub(this._opts.fallback\n            ? this._protos.lookupService('google.cloud.vision.v1p3beta1.ProductSearch')\n            : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this._protos.google.cloud.vision.v1p3beta1.ProductSearch, this._opts, this._providedCustomServicePath);\n        // Iterate over each of the methods that the service provides\n        // and create an API call method for each.\n        const productSearchStubMethods = [\n            'createProductSet',\n            'listProductSets',\n            'getProductSet',\n            'updateProductSet',\n            'deleteProductSet',\n            'createProduct',\n            'listProducts',\n            'getProduct',\n            'updateProduct',\n            'deleteProduct',\n            'createReferenceImage',\n            'deleteReferenceImage',\n            'listReferenceImages',\n            'getReferenceImage',\n            'addProductToProductSet',\n            'removeProductFromProductSet',\n            'listProductsInProductSet',\n            'importProductSets',\n        ];\n        for (const methodName of productSearchStubMethods) {\n            const callPromise = this.productSearchStub.then(stub => (...args) => {\n                if (this._terminated) {\n                    return Promise.reject('The client has already been closed.');\n                }\n                const func = stub[methodName];\n                return func.apply(stub, args);\n            }, (err) => () => {\n                throw err;\n            });\n            const descriptor = this.descriptors.page[methodName] ||\n                this.descriptors.longrunning[methodName] ||\n                undefined;\n            const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n            this.innerApiCalls[methodName] = apiCall;\n        }\n        return this.productSearchStub;\n    }\n    /**\n     * The DNS address for this API service.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get servicePath() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'vision.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service - same as servicePath.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get apiEndpoint() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'vision.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service.\n     * @returns {string} The DNS address for this service.\n     */\n    get apiEndpoint() {\n        return this._servicePath;\n    }\n    get universeDomain() {\n        return this._universeDomain;\n    }\n    /**\n     * The port for this API service.\n     * @returns {number} The default port for this service.\n     */\n    static get port() {\n        return 443;\n    }\n    /**\n     * The scopes needed to make gRPC calls for every method defined\n     * in this service.\n     * @returns {string[]} List of default scopes.\n     */\n    static get scopes() {\n        return [\n            'https://www.googleapis.com/auth/cloud-platform',\n            'https://www.googleapis.com/auth/cloud-vision',\n        ];\n    }\n    /**\n     * Return the project ID used by this class.\n     * @returns {Promise} A promise that resolves to string containing the project ID.\n     */\n    getProjectId(callback) {\n        if (callback) {\n            this.auth.getProjectId(callback);\n            return;\n        }\n        return this.auth.getProjectId();\n    }\n    createProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createProductSet(request, options, callback);\n    }\n    getProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getProductSet(request, options, callback);\n    }\n    updateProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                'product_set.name': (_a = request.productSet.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.updateProductSet(request, options, callback);\n    }\n    deleteProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deleteProductSet(request, options, callback);\n    }\n    createProduct(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createProduct(request, options, callback);\n    }\n    getProduct(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getProduct(request, options, callback);\n    }\n    updateProduct(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                'product.name': (_a = request.product.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.updateProduct(request, options, callback);\n    }\n    deleteProduct(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deleteProduct(request, options, callback);\n    }\n    createReferenceImage(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createReferenceImage(request, options, callback);\n    }\n    deleteReferenceImage(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deleteReferenceImage(request, options, callback);\n    }\n    getReferenceImage(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getReferenceImage(request, options, callback);\n    }\n    addProductToProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.addProductToProductSet(request, options, callback);\n    }\n    removeProductFromProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.removeProductFromProductSet(request, options, callback);\n    }\n    importProductSets(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.importProductSets(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `importProductSets()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1p3beta1/product_search.import_product_sets.js</caption>\n     * region_tag:vision_v1p3beta1_generated_ProductSearch_ImportProductSets_async\n     */\n    async checkImportProductSetsProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.importProductSets, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    listProductSets(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listProductSets(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project from which ProductSets should be listed.\n     *\n     *   Format is `projects/PROJECT_ID/locations/LOC_ID`.\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1p3beta1.ProductSet|ProductSet} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listProductSetsAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listProductSetsStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProductSets'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProductSets.createStream(this.innerApiCalls.listProductSets, request, callSettings);\n    }\n    /**\n     * Equivalent to `listProductSets`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project from which ProductSets should be listed.\n     *\n     *   Format is `projects/PROJECT_ID/locations/LOC_ID`.\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.vision.v1p3beta1.ProductSet|ProductSet}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1p3beta1/product_search.list_product_sets.js</caption>\n     * region_tag:vision_v1p3beta1_generated_ProductSearch_ListProductSets_async\n     */\n    listProductSetsAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProductSets'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProductSets.asyncIterate(this.innerApiCalls['listProductSets'], request, callSettings);\n    }\n    listProducts(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listProducts(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project OR ProductSet from which Products should be listed.\n     *\n     *   Format:\n     *   `projects/PROJECT_ID/locations/LOC_ID`\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1p3beta1.Product|Product} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listProductsAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listProductsStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProducts'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProducts.createStream(this.innerApiCalls.listProducts, request, callSettings);\n    }\n    /**\n     * Equivalent to `listProducts`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project OR ProductSet from which Products should be listed.\n     *\n     *   Format:\n     *   `projects/PROJECT_ID/locations/LOC_ID`\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.vision.v1p3beta1.Product|Product}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1p3beta1/product_search.list_products.js</caption>\n     * region_tag:vision_v1p3beta1_generated_ProductSearch_ListProducts_async\n     */\n    listProductsAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProducts'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProducts.asyncIterate(this.innerApiCalls['listProducts'], request, callSettings);\n    }\n    listReferenceImages(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listReferenceImages(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. Resource name of the product containing the reference images.\n     *\n     *   Format is\n     *   `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   A token identifying a page of results to be returned. This is the value\n     *   of `nextPageToken` returned in a previous reference image list request.\n     *\n     *   Defaults to the first page if not specified.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1p3beta1.ReferenceImage|ReferenceImage} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listReferenceImagesAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listReferenceImagesStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listReferenceImages'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listReferenceImages.createStream(this.innerApiCalls.listReferenceImages, request, callSettings);\n    }\n    /**\n     * Equivalent to `listReferenceImages`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. Resource name of the product containing the reference images.\n     *\n     *   Format is\n     *   `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   A token identifying a page of results to be returned. This is the value\n     *   of `nextPageToken` returned in a previous reference image list request.\n     *\n     *   Defaults to the first page if not specified.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.vision.v1p3beta1.ReferenceImage|ReferenceImage}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1p3beta1/product_search.list_reference_images.js</caption>\n     * region_tag:vision_v1p3beta1_generated_ProductSearch_ListReferenceImages_async\n     */\n    listReferenceImagesAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listReferenceImages'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listReferenceImages.asyncIterate(this.innerApiCalls['listReferenceImages'], request, callSettings);\n    }\n    listProductsInProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listProductsInProductSet(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.name\n     *   Required. The ProductSet resource for which to retrieve Products.\n     *\n     *   Format is:\n     *   `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1p3beta1.Product|Product} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listProductsInProductSetAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listProductsInProductSetStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProductsInProductSet'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProductsInProductSet.createStream(this.innerApiCalls.listProductsInProductSet, request, callSettings);\n    }\n    /**\n     * Equivalent to `listProductsInProductSet`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.name\n     *   Required. The ProductSet resource for which to retrieve Products.\n     *\n     *   Format is:\n     *   `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.vision.v1p3beta1.Product|Product}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1p3beta1/product_search.list_products_in_product_set.js</caption>\n     * region_tag:vision_v1p3beta1_generated_ProductSearch_ListProductsInProductSet_async\n     */\n    listProductsInProductSetAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProductsInProductSet'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProductsInProductSet.asyncIterate(this.innerApiCalls['listProductsInProductSet'], request, callSettings);\n    }\n    // --------------------\n    // -- Path templates --\n    // --------------------\n    /**\n     * Return a fully-qualified location resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @returns {string} Resource name string.\n     */\n    locationPath(project, location) {\n        return this.pathTemplates.locationPathTemplate.render({\n            project: project,\n            location: location,\n        });\n    }\n    /**\n     * Parse the project from Location resource.\n     *\n     * @param {string} locationName\n     *   A fully-qualified path representing Location resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromLocationName(locationName) {\n        return this.pathTemplates.locationPathTemplate.match(locationName).project;\n    }\n    /**\n     * Parse the location from Location resource.\n     *\n     * @param {string} locationName\n     *   A fully-qualified path representing Location resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromLocationName(locationName) {\n        return this.pathTemplates.locationPathTemplate.match(locationName).location;\n    }\n    /**\n     * Return a fully-qualified product resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} product\n     * @returns {string} Resource name string.\n     */\n    productPath(project, location, product) {\n        return this.pathTemplates.productPathTemplate.render({\n            project: project,\n            location: location,\n            product: product,\n        });\n    }\n    /**\n     * Parse the project from Product resource.\n     *\n     * @param {string} productName\n     *   A fully-qualified path representing Product resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProductName(productName) {\n        return this.pathTemplates.productPathTemplate.match(productName).project;\n    }\n    /**\n     * Parse the location from Product resource.\n     *\n     * @param {string} productName\n     *   A fully-qualified path representing Product resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromProductName(productName) {\n        return this.pathTemplates.productPathTemplate.match(productName).location;\n    }\n    /**\n     * Parse the product from Product resource.\n     *\n     * @param {string} productName\n     *   A fully-qualified path representing Product resource.\n     * @returns {string} A string representing the product.\n     */\n    matchProductFromProductName(productName) {\n        return this.pathTemplates.productPathTemplate.match(productName).product;\n    }\n    /**\n     * Return a fully-qualified productSet resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} product_set\n     * @returns {string} Resource name string.\n     */\n    productSetPath(project, location, productSet) {\n        return this.pathTemplates.productSetPathTemplate.render({\n            project: project,\n            location: location,\n            product_set: productSet,\n        });\n    }\n    /**\n     * Parse the project from ProductSet resource.\n     *\n     * @param {string} productSetName\n     *   A fully-qualified path representing ProductSet resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProductSetName(productSetName) {\n        return this.pathTemplates.productSetPathTemplate.match(productSetName)\n            .project;\n    }\n    /**\n     * Parse the location from ProductSet resource.\n     *\n     * @param {string} productSetName\n     *   A fully-qualified path representing ProductSet resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromProductSetName(productSetName) {\n        return this.pathTemplates.productSetPathTemplate.match(productSetName)\n            .location;\n    }\n    /**\n     * Parse the product_set from ProductSet resource.\n     *\n     * @param {string} productSetName\n     *   A fully-qualified path representing ProductSet resource.\n     * @returns {string} A string representing the product_set.\n     */\n    matchProductSetFromProductSetName(productSetName) {\n        return this.pathTemplates.productSetPathTemplate.match(productSetName)\n            .product_set;\n    }\n    /**\n     * Return a fully-qualified referenceImage resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} product\n     * @param {string} reference_image\n     * @returns {string} Resource name string.\n     */\n    referenceImagePath(project, location, product, referenceImage) {\n        return this.pathTemplates.referenceImagePathTemplate.render({\n            project: project,\n            location: location,\n            product: product,\n            reference_image: referenceImage,\n        });\n    }\n    /**\n     * Parse the project from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).project;\n    }\n    /**\n     * Parse the location from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).location;\n    }\n    /**\n     * Parse the product from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the product.\n     */\n    matchProductFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).product;\n    }\n    /**\n     * Parse the reference_image from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the reference_image.\n     */\n    matchReferenceImageFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).reference_image;\n    }\n    /**\n     * Terminate the gRPC channel and close the client.\n     *\n     * The client will no longer be usable and all future behavior is undefined.\n     * @returns {Promise} A promise that resolves when the client is closed.\n     */\n    close() {\n        if (this.productSearchStub && !this._terminated) {\n            return this.productSearchStub.then(stub => {\n                this._terminated = true;\n                stub.close();\n                this.operationsClient.close();\n            });\n        }\n        return Promise.resolve();\n    }\n}\nexports.ProductSearchClient = ProductSearchClient;\n//# sourceMappingURL=product_search_client.js.map"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4499, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4504, "column": 0}, "map": {"version":3,"sources":["file:///Users/dokyunglee/Documents/Hackathon/Mental-Health-Tracker-App/next-frontend/node_modules/%40google-cloud/vision/build/src/v1p3beta1/index.js"],"sourcesContent":["\"use strict\";\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProductSearchClient = exports.ImageAnnotatorClient = void 0;\nvar image_annotator_client_1 = require(\"./image_annotator_client\");\nObject.defineProperty(exports, \"ImageAnnotatorClient\", { enumerable: true, get: function () { return image_annotator_client_1.ImageAnnotatorClient; } });\nvar product_search_client_1 = require(\"./product_search_client\");\nObject.defineProperty(exports, \"ProductSearchClient\", { enumerable: true, get: function () { return product_search_client_1.ProductSearchClient; } });\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,EAAE;AACF,4EAA4E;AAC5E,iEAAiE;AACjE,qDAAqD;AACrD,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,mBAAmB,GAAG,QAAQ,oBAAoB,GAAG,KAAK;AAClE,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,wBAAwB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,yBAAyB,oBAAoB;IAAE;AAAE;AACtJ,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,uBAAuB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,wBAAwB,mBAAmB;IAAE;AAAE,IACnJ,iCAAiC","ignoreList":[0]}},
    {"offset": {"line": 4540, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4550, "column": 0}, "map": {"version":3,"sources":["file:///Users/dokyunglee/Documents/Hackathon/Mental-Health-Tracker-App/next-frontend/node_modules/%40google-cloud/vision/build/src/v1p4beta1/image_annotator_client.js"],"sourcesContent":["\"use strict\";\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImageAnnotatorClient = void 0;\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v1p4beta1/image_annotator_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./image_annotator_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Service that performs Google Cloud Vision API detection tasks over client\n *  images, such as face, landmark, logo, label, and text detection. The\n *  ImageAnnotator service returns detected entities from the images.\n * @class\n * @memberof v1p4beta1\n */\nclass ImageAnnotatorClient {\n    /**\n     * Construct an instance of ImageAnnotatorClient.\n     *\n     * @param {object} [options] - The configuration object.\n     * The options accepted by the constructor are described in detail\n     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n     * The common options are:\n     * @param {object} [options.credentials] - Credentials object.\n     * @param {string} [options.credentials.client_email]\n     * @param {string} [options.credentials.private_key]\n     * @param {string} [options.email] - Account email address. Required when\n     *     using a .pem or .p12 keyFilename.\n     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n     *     .p12 key downloaded from the Google Developers Console. If you provide\n     *     a path to a JSON file, the projectId option below is not necessary.\n     *     NOTE: .pem and .p12 require you to specify options.email as well.\n     * @param {number} [options.port] - The port on which to connect to\n     *     the remote host.\n     * @param {string} [options.projectId] - The project ID from the Google\n     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n     *     the environment variable GCLOUD_PROJECT for your project ID. If your\n     *     app is running in an environment which supports\n     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n     *     your project ID will be detected automatically.\n     * @param {string} [options.apiEndpoint] - The domain name of the\n     *     API remote host.\n     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n     *     Follows the structure of {@link gapicConfig}.\n     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n     *     For more information, please check the\n     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n     *     need to avoid loading the default gRPC version and want to use the fallback\n     *     HTTP implementation. Load only fallback version and pass it to the constructor:\n     *     ```\n     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n     *     const client = new ImageAnnotatorClient({fallback: true}, gax);\n     *     ```\n     */\n    constructor(opts, gaxInstance) {\n        var _a, _b, _c, _d, _e;\n        this._terminated = false;\n        this.descriptors = {\n            page: {},\n            stream: {},\n            longrunning: {},\n            batching: {},\n        };\n        // Ensure that options include all the required fields.\n        const staticMembers = this.constructor;\n        if ((opts === null || opts === void 0 ? void 0 : opts.universe_domain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universeDomain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== (opts === null || opts === void 0 ? void 0 : opts.universeDomain)) {\n            throw new Error('Please set either universe_domain or universeDomain, but not both.');\n        }\n        const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object'\n            ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN']\n            : undefined;\n        this._universeDomain =\n            (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.universeDomain) !== null && _a !== void 0 ? _a : opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== null && _b !== void 0 ? _b : universeDomainEnvVar) !== null && _c !== void 0 ? _c : 'googleapis.com';\n        this._servicePath = 'vision.' + this._universeDomain;\n        const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || this._servicePath;\n        this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n        const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n        const clientConfig = (_d = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _d !== void 0 ? _d : {};\n        const fallback = (_e = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _e !== void 0 ? _e : (typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function');\n        opts = Object.assign({ servicePath, port, clientConfig, fallback }, opts);\n        // Request numeric enum values if REST transport is used.\n        opts.numericEnums = true;\n        // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n        if (servicePath !== this._servicePath && !('scopes' in opts)) {\n            opts['scopes'] = staticMembers.scopes;\n        }\n        // Load google-gax module synchronously if needed\n        if (!gaxInstance) {\n            gaxInstance = require('google-gax');\n        }\n        // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n        this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n        // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n        this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n        // Save options to use in initialize() method.\n        this._opts = opts;\n        // Save the auth object to the client, for use by other methods.\n        this.auth = this._gaxGrpc.auth;\n        // Set useJWTAccessWithScope on the auth object.\n        this.auth.useJWTAccessWithScope = true;\n        // Set defaultServicePath on the auth object.\n        this.auth.defaultServicePath = this._servicePath;\n        // Set the default scopes in auth client if needed.\n        if (servicePath === this._servicePath) {\n            this.auth.defaultScopes = staticMembers.scopes;\n        }\n        // Determine the client header string.\n        const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n        if (typeof process === 'object' && 'versions' in process) {\n            clientHeader.push(`gl-node/${process.versions.node}`);\n        }\n        else {\n            clientHeader.push(`gl-web/${this._gaxModule.version}`);\n        }\n        if (!opts.fallback) {\n            clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n        }\n        else {\n            clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n        }\n        if (opts.libName && opts.libVersion) {\n            clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n        }\n        // Load the applicable protos.\n        this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n        // This API contains \"path templates\"; forward-slash-separated\n        // identifiers to uniquely identify resources within the API.\n        // Create useful helper objects for these.\n        this.pathTemplates = {\n            productPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/products/{product}'),\n            productSetPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/productSets/{product_set}'),\n            referenceImagePathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/products/{product}/referenceImages/{reference_image}'),\n        };\n        const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);\n        // This API contains \"long-running operations\", which return a\n        // an Operation object that allows for tracking of the operation,\n        // rather than holding a request open.\n        const lroOptions = {\n            auth: this.auth,\n            grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,\n        };\n        if (opts.fallback) {\n            lroOptions.protoJson = protoFilesRoot;\n            lroOptions.httpRules = [];\n        }\n        this.operationsClient = this._gaxModule\n            .lro(lroOptions)\n            .operationsClient(opts);\n        const asyncBatchAnnotateImagesResponse = protoFilesRoot.lookup('.google.cloud.vision.v1p4beta1.AsyncBatchAnnotateImagesResponse');\n        const asyncBatchAnnotateImagesMetadata = protoFilesRoot.lookup('.google.cloud.vision.v1p4beta1.OperationMetadata');\n        const asyncBatchAnnotateFilesResponse = protoFilesRoot.lookup('.google.cloud.vision.v1p4beta1.AsyncBatchAnnotateFilesResponse');\n        const asyncBatchAnnotateFilesMetadata = protoFilesRoot.lookup('.google.cloud.vision.v1p4beta1.OperationMetadata');\n        this.descriptors.longrunning = {\n            asyncBatchAnnotateImages: new this._gaxModule.LongrunningDescriptor(this.operationsClient, asyncBatchAnnotateImagesResponse.decode.bind(asyncBatchAnnotateImagesResponse), asyncBatchAnnotateImagesMetadata.decode.bind(asyncBatchAnnotateImagesMetadata)),\n            asyncBatchAnnotateFiles: new this._gaxModule.LongrunningDescriptor(this.operationsClient, asyncBatchAnnotateFilesResponse.decode.bind(asyncBatchAnnotateFilesResponse), asyncBatchAnnotateFilesMetadata.decode.bind(asyncBatchAnnotateFilesMetadata)),\n        };\n        // Put together the default options sent with requests.\n        this._defaults = this._gaxGrpc.constructSettings('google.cloud.vision.v1p4beta1.ImageAnnotator', gapicConfig, opts.clientConfig || {}, { 'x-goog-api-client': clientHeader.join(' ') });\n        // Set up a dictionary of \"inner API calls\"; the core implementation\n        // of calling the API is handled in `google-gax`, with this code\n        // merely providing the destination and request information.\n        this.innerApiCalls = {};\n        // Add a warn function to the client constructor so it can be easily tested.\n        this.warn = this._gaxModule.warn;\n    }\n    /**\n     * Initialize the client.\n     * Performs asynchronous operations (such as authentication) and prepares the client.\n     * This function will be called automatically when any class method is called for the\n     * first time, but if you need to initialize it before calling an actual method,\n     * feel free to call initialize() directly.\n     *\n     * You can await on this method if you want to make sure the client is initialized.\n     *\n     * @returns {Promise} A promise that resolves to an authenticated service stub.\n     */\n    initialize() {\n        // If the client stub promise is already initialized, return immediately.\n        if (this.imageAnnotatorStub) {\n            return this.imageAnnotatorStub;\n        }\n        // Put together the \"service stub\" for\n        // google.cloud.vision.v1p4beta1.ImageAnnotator.\n        this.imageAnnotatorStub = this._gaxGrpc.createStub(this._opts.fallback\n            ? this._protos.lookupService('google.cloud.vision.v1p4beta1.ImageAnnotator')\n            : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this._protos.google.cloud.vision.v1p4beta1.ImageAnnotator, this._opts, this._providedCustomServicePath);\n        // Iterate over each of the methods that the service provides\n        // and create an API call method for each.\n        const imageAnnotatorStubMethods = [\n            'batchAnnotateImages',\n            'batchAnnotateFiles',\n            'asyncBatchAnnotateImages',\n            'asyncBatchAnnotateFiles',\n        ];\n        for (const methodName of imageAnnotatorStubMethods) {\n            const callPromise = this.imageAnnotatorStub.then(stub => (...args) => {\n                if (this._terminated) {\n                    return Promise.reject('The client has already been closed.');\n                }\n                const func = stub[methodName];\n                return func.apply(stub, args);\n            }, (err) => () => {\n                throw err;\n            });\n            const descriptor = this.descriptors.longrunning[methodName] || undefined;\n            const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n            this.innerApiCalls[methodName] = apiCall;\n        }\n        return this.imageAnnotatorStub;\n    }\n    /**\n     * The DNS address for this API service.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get servicePath() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'vision.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service - same as servicePath.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get apiEndpoint() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'vision.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service.\n     * @returns {string} The DNS address for this service.\n     */\n    get apiEndpoint() {\n        return this._servicePath;\n    }\n    get universeDomain() {\n        return this._universeDomain;\n    }\n    /**\n     * The port for this API service.\n     * @returns {number} The default port for this service.\n     */\n    static get port() {\n        return 443;\n    }\n    /**\n     * The scopes needed to make gRPC calls for every method defined\n     * in this service.\n     * @returns {string[]} List of default scopes.\n     */\n    static get scopes() {\n        return [\n            'https://www.googleapis.com/auth/cloud-platform',\n            'https://www.googleapis.com/auth/cloud-vision',\n        ];\n    }\n    /**\n     * Return the project ID used by this class.\n     * @returns {Promise} A promise that resolves to string containing the project ID.\n     */\n    getProjectId(callback) {\n        if (callback) {\n            this.auth.getProjectId(callback);\n            return;\n        }\n        return this.auth.getProjectId();\n    }\n    batchAnnotateImages(request, optionsOrCallback, callback) {\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        this.initialize();\n        return this.innerApiCalls.batchAnnotateImages(request, options, callback);\n    }\n    batchAnnotateFiles(request, optionsOrCallback, callback) {\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        this.initialize();\n        return this.innerApiCalls.batchAnnotateFiles(request, options, callback);\n    }\n    asyncBatchAnnotateImages(request, optionsOrCallback, callback) {\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        this.initialize();\n        return this.innerApiCalls.asyncBatchAnnotateImages(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `asyncBatchAnnotateImages()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1p4beta1/image_annotator.async_batch_annotate_images.js</caption>\n     * region_tag:vision_v1p4beta1_generated_ImageAnnotator_AsyncBatchAnnotateImages_async\n     */\n    async checkAsyncBatchAnnotateImagesProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.asyncBatchAnnotateImages, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    asyncBatchAnnotateFiles(request, optionsOrCallback, callback) {\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        this.initialize();\n        return this.innerApiCalls.asyncBatchAnnotateFiles(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `asyncBatchAnnotateFiles()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1p4beta1/image_annotator.async_batch_annotate_files.js</caption>\n     * region_tag:vision_v1p4beta1_generated_ImageAnnotator_AsyncBatchAnnotateFiles_async\n     */\n    async checkAsyncBatchAnnotateFilesProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.asyncBatchAnnotateFiles, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    // --------------------\n    // -- Path templates --\n    // --------------------\n    /**\n     * Return a fully-qualified product resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} product\n     * @returns {string} Resource name string.\n     */\n    productPath(project, location, product) {\n        return this.pathTemplates.productPathTemplate.render({\n            project: project,\n            location: location,\n            product: product,\n        });\n    }\n    /**\n     * Parse the project from Product resource.\n     *\n     * @param {string} productName\n     *   A fully-qualified path representing Product resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProductName(productName) {\n        return this.pathTemplates.productPathTemplate.match(productName).project;\n    }\n    /**\n     * Parse the location from Product resource.\n     *\n     * @param {string} productName\n     *   A fully-qualified path representing Product resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromProductName(productName) {\n        return this.pathTemplates.productPathTemplate.match(productName).location;\n    }\n    /**\n     * Parse the product from Product resource.\n     *\n     * @param {string} productName\n     *   A fully-qualified path representing Product resource.\n     * @returns {string} A string representing the product.\n     */\n    matchProductFromProductName(productName) {\n        return this.pathTemplates.productPathTemplate.match(productName).product;\n    }\n    /**\n     * Return a fully-qualified productSet resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} product_set\n     * @returns {string} Resource name string.\n     */\n    productSetPath(project, location, productSet) {\n        return this.pathTemplates.productSetPathTemplate.render({\n            project: project,\n            location: location,\n            product_set: productSet,\n        });\n    }\n    /**\n     * Parse the project from ProductSet resource.\n     *\n     * @param {string} productSetName\n     *   A fully-qualified path representing ProductSet resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProductSetName(productSetName) {\n        return this.pathTemplates.productSetPathTemplate.match(productSetName)\n            .project;\n    }\n    /**\n     * Parse the location from ProductSet resource.\n     *\n     * @param {string} productSetName\n     *   A fully-qualified path representing ProductSet resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromProductSetName(productSetName) {\n        return this.pathTemplates.productSetPathTemplate.match(productSetName)\n            .location;\n    }\n    /**\n     * Parse the product_set from ProductSet resource.\n     *\n     * @param {string} productSetName\n     *   A fully-qualified path representing ProductSet resource.\n     * @returns {string} A string representing the product_set.\n     */\n    matchProductSetFromProductSetName(productSetName) {\n        return this.pathTemplates.productSetPathTemplate.match(productSetName)\n            .product_set;\n    }\n    /**\n     * Return a fully-qualified referenceImage resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} product\n     * @param {string} reference_image\n     * @returns {string} Resource name string.\n     */\n    referenceImagePath(project, location, product, referenceImage) {\n        return this.pathTemplates.referenceImagePathTemplate.render({\n            project: project,\n            location: location,\n            product: product,\n            reference_image: referenceImage,\n        });\n    }\n    /**\n     * Parse the project from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).project;\n    }\n    /**\n     * Parse the location from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).location;\n    }\n    /**\n     * Parse the product from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the product.\n     */\n    matchProductFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).product;\n    }\n    /**\n     * Parse the reference_image from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the reference_image.\n     */\n    matchReferenceImageFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).reference_image;\n    }\n    /**\n     * Terminate the gRPC channel and close the client.\n     *\n     * The client will no longer be usable and all future behavior is undefined.\n     * @returns {Promise} A promise that resolves when the client is closed.\n     */\n    close() {\n        if (this.imageAnnotatorStub && !this._terminated) {\n            return this.imageAnnotatorStub.then(stub => {\n                this._terminated = true;\n                stub.close();\n                this.operationsClient.close();\n            });\n        }\n        return Promise.resolve();\n    }\n}\nexports.ImageAnnotatorClient = ImageAnnotatorClient;\n//# sourceMappingURL=image_annotator_client.js.map"],"names":[],"mappings":"AA2F4C;AA3F5C;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,EAAE;AACF,4EAA4E;AAC5E,iEAAiE;AACjE,qDAAqD;AACrD,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,oBAAoB,GAAG,KAAK;AACpC,MAAM;AACN;;;;CAIC,GACD,MAAM;AACN,MAAM,UAAU,yFAAiC,OAAO;AACxD;;;;;;CAMC,GACD,MAAM;IACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAsCC,GACD,YAAY,IAAI,EAAE,WAAW,CAAE;QAC3B,IAAI,IAAI,IAAI,IAAI,IAAI;QACpB,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,WAAW,GAAG;YACf,MAAM,CAAC;YACP,QAAQ,CAAC;YACT,aAAa,CAAC;YACd,UAAU,CAAC;QACf;QACA,uDAAuD;QACvD,MAAM,gBAAgB,IAAI,CAAC,WAAW;QACtC,IAAI,CAAC,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,eAAe,KACjE,CAAC,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,cAAc,KAChE,CAAC,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,eAAe,MAAM,CAAC,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,cAAc,GAAG;YAC1I,MAAM,IAAI,MAAM;QACpB;QACA,MAAM,uBAAuB,OAAO,gKAAA,CAAA,UAAO,KAAK,YAAY,OAAO,gKAAA,CAAA,UAAO,CAAC,GAAG,KAAK,WAC7E,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,+BAA+B,GAC3C;QACN,IAAI,CAAC,eAAe,GAChB,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,cAAc,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,eAAe,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,oBAAoB,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK;QAClR,IAAI,CAAC,YAAY,GAAG,YAAY,IAAI,CAAC,eAAe;QACpD,MAAM,cAAc,CAAC,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,WAAW,KAAK,CAAC,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,WAAW,KAAK,IAAI,CAAC,YAAY;QACzK,IAAI,CAAC,0BAA0B,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,WAAW,KAAK,CAAC,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,WAAW,CAAC;QACrK,MAAM,OAAO,CAAC,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,cAAc,IAAI;QAC1F,MAAM,eAAe,CAAC,KAAK,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,YAAY,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,CAAC;QAC5H,MAAM,WAAW,CAAC,KAAK,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,QAAQ,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAM,OAAO,WAAW,eAAe,OAAO,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,KAAK,MAAM;QAC/N,OAAO,OAAO,MAAM,CAAC;YAAE;YAAa;YAAM;YAAc;QAAS,GAAG;QACpE,yDAAyD;QACzD,KAAK,YAAY,GAAG;QACpB,0GAA0G;QAC1G,IAAI,gBAAgB,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC,YAAY,IAAI,GAAG;YAC1D,IAAI,CAAC,SAAS,GAAG,cAAc,MAAM;QACzC;QACA,iDAAiD;QACjD,IAAI,CAAC,aAAa;YACd;QACJ;QACA,sEAAsE;QACtE,IAAI,CAAC,UAAU,GAAG,KAAK,QAAQ,GAAG,YAAY,QAAQ,GAAG;QACzD,gFAAgF;QAChF,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;QAC/C,8CAA8C;QAC9C,IAAI,CAAC,KAAK,GAAG;QACb,gEAAgE;QAChE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI;QAC9B,gDAAgD;QAChD,IAAI,CAAC,IAAI,CAAC,qBAAqB,GAAG;QAClC,6CAA6C;QAC7C,IAAI,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,YAAY;QAChD,mDAAmD;QACnD,IAAI,gBAAgB,IAAI,CAAC,YAAY,EAAE;YACnC,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,cAAc,MAAM;QAClD;QACA,sCAAsC;QACtC,MAAM,eAAe;YAAC,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;YAAE,CAAC,MAAM,EAAE,SAAS;SAAC;QAC3E,IAAI,OAAO,gKAAA,CAAA,UAAO,KAAK,YAAY,cAAc,gKAAA,CAAA,UAAO,EAAE;YACtD,aAAa,IAAI,CAAC,CAAC,QAAQ,EAAE,gKAAA,CAAA,UAAO,CAAC,QAAQ,CAAC,IAAI,EAAE;QACxD,OACK;YACD,aAAa,IAAI,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;QACzD;QACA,IAAI,CAAC,KAAK,QAAQ,EAAE;YAChB,aAAa,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;QACzD,OACK;YACD,aAAa,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;QACzD;QACA,IAAI,KAAK,OAAO,IAAI,KAAK,UAAU,EAAE;YACjC,aAAa,IAAI,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC,EAAE,KAAK,UAAU,EAAE;QAC1D;QACA,8BAA8B;QAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;QAC3C,8DAA8D;QAC9D,6DAA6D;QAC7D,0CAA0C;QAC1C,IAAI,CAAC,aAAa,GAAG;YACjB,qBAAqB,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;YACtD,wBAAwB,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;YACzD,4BAA4B,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;QACjE;QACA,MAAM,iBAAiB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC9D,8DAA8D;QAC9D,iEAAiE;QACjE,sCAAsC;QACtC,MAAM,aAAa;YACf,MAAM,IAAI,CAAC,IAAI;YACf,MAAM,UAAU,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG;QACzD;QACA,IAAI,KAAK,QAAQ,EAAE;YACf,WAAW,SAAS,GAAG;YACvB,WAAW,SAAS,GAAG,EAAE;QAC7B;QACA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAClC,GAAG,CAAC,YACJ,gBAAgB,CAAC;QACtB,MAAM,mCAAmC,eAAe,MAAM,CAAC;QAC/D,MAAM,mCAAmC,eAAe,MAAM,CAAC;QAC/D,MAAM,kCAAkC,eAAe,MAAM,CAAC;QAC9D,MAAM,kCAAkC,eAAe,MAAM,CAAC;QAC9D,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG;YAC3B,0BAA0B,IAAI,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,EAAE,iCAAiC,MAAM,CAAC,IAAI,CAAC,mCAAmC,iCAAiC,MAAM,CAAC,IAAI,CAAC;YACxN,yBAAyB,IAAI,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,EAAE,gCAAgC,MAAM,CAAC,IAAI,CAAC,kCAAkC,gCAAgC,MAAM,CAAC,IAAI,CAAC;QACxN;QACA,uDAAuD;QACvD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,gDAAgD,aAAa,KAAK,YAAY,IAAI,CAAC,GAAG;YAAE,qBAAqB,aAAa,IAAI,CAAC;QAAK;QACrL,oEAAoE;QACpE,gEAAgE;QAChE,4DAA4D;QAC5D,IAAI,CAAC,aAAa,GAAG,CAAC;QACtB,4EAA4E;QAC5E,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI;IACpC;IACA;;;;;;;;;;KAUC,GACD,aAAa;QACT,yEAAyE;QACzE,IAAI,IAAI,CAAC,kBAAkB,EAAE;YACzB,OAAO,IAAI,CAAC,kBAAkB;QAClC;QACA,sCAAsC;QACtC,gDAAgD;QAChD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAChE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,kDAEzB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,0BAA0B;QAC9G,6DAA6D;QAC7D,0CAA0C;QAC1C,MAAM,4BAA4B;YAC9B;YACA;YACA;YACA;SACH;QACD,KAAK,MAAM,cAAc,0BAA2B;YAChD,MAAM,cAAc,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAA,OAAQ,CAAC,GAAG;oBACzD,IAAI,IAAI,CAAC,WAAW,EAAE;wBAClB,OAAO,QAAQ,MAAM,CAAC;oBAC1B;oBACA,MAAM,OAAO,IAAI,CAAC,WAAW;oBAC7B,OAAO,KAAK,KAAK,CAAC,MAAM;gBAC5B,GAAG,CAAC,MAAQ;oBACR,MAAM;gBACV;YACA,MAAM,aAAa,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,IAAI;YAC/D,MAAM,UAAU,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,YAAY,IAAI,CAAC,KAAK,CAAC,QAAQ;YACtH,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG;QACrC;QACA,OAAO,IAAI,CAAC,kBAAkB;IAClC;IACA;;;;KAIC,GACD,WAAW,cAAc;QACrB,IAAI,OAAO,gKAAA,CAAA,UAAO,KAAK,YACnB,OAAO,gKAAA,CAAA,UAAO,CAAC,WAAW,KAAK,YAAY;YAC3C,gKAAA,CAAA,UAAO,CAAC,WAAW,CAAC,6EAA6E;QACrG;QACA,OAAO;IACX;IACA;;;;KAIC,GACD,WAAW,cAAc;QACrB,IAAI,OAAO,gKAAA,CAAA,UAAO,KAAK,YACnB,OAAO,gKAAA,CAAA,UAAO,CAAC,WAAW,KAAK,YAAY;YAC3C,gKAAA,CAAA,UAAO,CAAC,WAAW,CAAC,6EAA6E;QACrG;QACA,OAAO;IACX;IACA;;;KAGC,GACD,IAAI,cAAc;QACd,OAAO,IAAI,CAAC,YAAY;IAC5B;IACA,IAAI,iBAAiB;QACjB,OAAO,IAAI,CAAC,eAAe;IAC/B;IACA;;;KAGC,GACD,WAAW,OAAO;QACd,OAAO;IACX;IACA;;;;KAIC,GACD,WAAW,SAAS;QAChB,OAAO;YACH;YACA;SACH;IACL;IACA;;;KAGC,GACD,aAAa,QAAQ,EAAE;QACnB,IAAI,UAAU;YACV,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;YACvB;QACJ;QACA,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY;IACjC;IACA,oBAAoB,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE;QACtD,UAAU,WAAW,CAAC;QACtB,IAAI;QACJ,IAAI,OAAO,sBAAsB,cAAc,aAAa,WAAW;YACnE,WAAW;YACX,UAAU,CAAC;QACf,OACK;YACD,UAAU;QACd;QACA,UAAU,WAAW,CAAC;QACtB,QAAQ,SAAS,GAAG,QAAQ,SAAS,IAAI,CAAC;QAC1C,QAAQ,SAAS,CAAC,OAAO,GAAG,QAAQ,SAAS,CAAC,OAAO,IAAI,CAAC;QAC1D,IAAI,CAAC,UAAU;QACf,OAAO,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,SAAS,SAAS;IACpE;IACA,mBAAmB,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE;QACrD,UAAU,WAAW,CAAC;QACtB,IAAI;QACJ,IAAI,OAAO,sBAAsB,cAAc,aAAa,WAAW;YACnE,WAAW;YACX,UAAU,CAAC;QACf,OACK;YACD,UAAU;QACd;QACA,UAAU,WAAW,CAAC;QACtB,QAAQ,SAAS,GAAG,QAAQ,SAAS,IAAI,CAAC;QAC1C,QAAQ,SAAS,CAAC,OAAO,GAAG,QAAQ,SAAS,CAAC,OAAO,IAAI,CAAC;QAC1D,IAAI,CAAC,UAAU;QACf,OAAO,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,SAAS,SAAS;IACnE;IACA,yBAAyB,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE;QAC3D,UAAU,WAAW,CAAC;QACtB,IAAI;QACJ,IAAI,OAAO,sBAAsB,cAAc,aAAa,WAAW;YACnE,WAAW;YACX,UAAU,CAAC;QACf,OACK;YACD,UAAU;QACd;QACA,UAAU,WAAW,CAAC;QACtB,QAAQ,SAAS,GAAG,QAAQ,SAAS,IAAI,CAAC;QAC1C,QAAQ,SAAS,CAAC,OAAO,GAAG,QAAQ,SAAS,CAAC,OAAO,IAAI,CAAC;QAC1D,IAAI,CAAC,UAAU;QACf,OAAO,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,SAAS,SAAS;IACzE;IACA;;;;;;;;;;KAUC,GACD,MAAM,sCAAsC,IAAI,EAAE;QAC9C,MAAM,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,MAAM,CAAC,WAAW,CAAC,mBAAmB,CAAC;YAAE;QAAK;QACnG,MAAM,CAAC,UAAU,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;QAC7D,MAAM,kBAAkB,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,wBAAwB,EAAE,IAAI,CAAC,UAAU,CAAC,4BAA4B;QACpK,OAAO;IACX;IACA,wBAAwB,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE;QAC1D,UAAU,WAAW,CAAC;QACtB,IAAI;QACJ,IAAI,OAAO,sBAAsB,cAAc,aAAa,WAAW;YACnE,WAAW;YACX,UAAU,CAAC;QACf,OACK;YACD,UAAU;QACd;QACA,UAAU,WAAW,CAAC;QACtB,QAAQ,SAAS,GAAG,QAAQ,SAAS,IAAI,CAAC;QAC1C,QAAQ,SAAS,CAAC,OAAO,GAAG,QAAQ,SAAS,CAAC,OAAO,IAAI,CAAC;QAC1D,IAAI,CAAC,UAAU;QACf,OAAO,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,SAAS,SAAS;IACxE;IACA;;;;;;;;;;KAUC,GACD,MAAM,qCAAqC,IAAI,EAAE;QAC7C,MAAM,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,MAAM,CAAC,WAAW,CAAC,mBAAmB,CAAC;YAAE;QAAK;QACnG,MAAM,CAAC,UAAU,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;QAC7D,MAAM,kBAAkB,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,uBAAuB,EAAE,IAAI,CAAC,UAAU,CAAC,4BAA4B;QACnK,OAAO;IACX;IACA,uBAAuB;IACvB,uBAAuB;IACvB,uBAAuB;IACvB;;;;;;;KAOC,GACD,YAAY,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE;QACpC,OAAO,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,MAAM,CAAC;YACjD,SAAS;YACT,UAAU;YACV,SAAS;QACb;IACJ;IACA;;;;;;KAMC,GACD,4BAA4B,WAAW,EAAE;QACrC,OAAO,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,KAAK,CAAC,aAAa,OAAO;IAC5E;IACA;;;;;;KAMC,GACD,6BAA6B,WAAW,EAAE;QACtC,OAAO,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,KAAK,CAAC,aAAa,QAAQ;IAC7E;IACA;;;;;;KAMC,GACD,4BAA4B,WAAW,EAAE;QACrC,OAAO,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,KAAK,CAAC,aAAa,OAAO;IAC5E;IACA;;;;;;;KAOC,GACD,eAAe,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE;QAC1C,OAAO,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,MAAM,CAAC;YACpD,SAAS;YACT,UAAU;YACV,aAAa;QACjB;IACJ;IACA;;;;;;KAMC,GACD,+BAA+B,cAAc,EAAE;QAC3C,OAAO,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,KAAK,CAAC,gBAClD,OAAO;IAChB;IACA;;;;;;KAMC,GACD,gCAAgC,cAAc,EAAE;QAC5C,OAAO,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,KAAK,CAAC,gBAClD,QAAQ;IACjB;IACA;;;;;;KAMC,GACD,kCAAkC,cAAc,EAAE;QAC9C,OAAO,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,KAAK,CAAC,gBAClD,WAAW;IACpB;IACA;;;;;;;;KAQC,GACD,mBAAmB,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,cAAc,EAAE;QAC3D,OAAO,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,MAAM,CAAC;YACxD,SAAS;YACT,UAAU;YACV,SAAS;YACT,iBAAiB;QACrB;IACJ;IACA;;;;;;KAMC,GACD,mCAAmC,kBAAkB,EAAE;QACnD,OAAO,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,KAAK,CAAC,oBAAoB,OAAO;IAC1F;IACA;;;;;;KAMC,GACD,oCAAoC,kBAAkB,EAAE;QACpD,OAAO,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,KAAK,CAAC,oBAAoB,QAAQ;IAC3F;IACA;;;;;;KAMC,GACD,mCAAmC,kBAAkB,EAAE;QACnD,OAAO,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,KAAK,CAAC,oBAAoB,OAAO;IAC1F;IACA;;;;;;KAMC,GACD,0CAA0C,kBAAkB,EAAE;QAC1D,OAAO,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,KAAK,CAAC,oBAAoB,eAAe;IAClG;IACA;;;;;KAKC,GACD,QAAQ;QACJ,IAAI,IAAI,CAAC,kBAAkB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YAC9C,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAA;gBAChC,IAAI,CAAC,WAAW,GAAG;gBACnB,KAAK,KAAK;gBACV,IAAI,CAAC,gBAAgB,CAAC,KAAK;YAC/B;QACJ;QACA,OAAO,QAAQ,OAAO;IAC1B;AACJ;AACA,QAAQ,oBAAoB,GAAG,sBAC/B,kDAAkD","ignoreList":[0]}},
    {"offset": {"line": 5086, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5096, "column": 0}, "map": {"version":3,"sources":["file:///Users/dokyunglee/Documents/Hackathon/Mental-Health-Tracker-App/next-frontend/node_modules/%40google-cloud/vision/build/src/v1p4beta1/product_search_client.js"],"sourcesContent":["\"use strict\";\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProductSearchClient = void 0;\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v1p4beta1/product_search_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./product_search_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Manages Products and ProductSets of reference images for use in product\n *  search. It uses the following resource model:\n *\n *  - The API has a collection of\n *  {@link protos.google.cloud.vision.v1p4beta1.ProductSet|ProductSet} resources, named\n *  `projects/* /locations/* /productSets/*`, which acts as a way to put different\n *  products into groups to limit identification.\n *\n *  In parallel,\n *\n *  - The API has a collection of\n *  {@link protos.google.cloud.vision.v1p4beta1.Product|Product} resources, named\n *    `projects/* /locations/* /products/*`\n *\n *  - Each {@link protos.google.cloud.vision.v1p4beta1.Product|Product} has a collection of\n *  {@link protos.google.cloud.vision.v1p4beta1.ReferenceImage|ReferenceImage} resources,\n *  named\n *    `projects/* /locations/* /products/* /referenceImages/*`\n * @class\n * @memberof v1p4beta1\n */\nclass ProductSearchClient {\n    /**\n     * Construct an instance of ProductSearchClient.\n     *\n     * @param {object} [options] - The configuration object.\n     * The options accepted by the constructor are described in detail\n     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n     * The common options are:\n     * @param {object} [options.credentials] - Credentials object.\n     * @param {string} [options.credentials.client_email]\n     * @param {string} [options.credentials.private_key]\n     * @param {string} [options.email] - Account email address. Required when\n     *     using a .pem or .p12 keyFilename.\n     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n     *     .p12 key downloaded from the Google Developers Console. If you provide\n     *     a path to a JSON file, the projectId option below is not necessary.\n     *     NOTE: .pem and .p12 require you to specify options.email as well.\n     * @param {number} [options.port] - The port on which to connect to\n     *     the remote host.\n     * @param {string} [options.projectId] - The project ID from the Google\n     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n     *     the environment variable GCLOUD_PROJECT for your project ID. If your\n     *     app is running in an environment which supports\n     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n     *     your project ID will be detected automatically.\n     * @param {string} [options.apiEndpoint] - The domain name of the\n     *     API remote host.\n     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n     *     Follows the structure of {@link gapicConfig}.\n     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n     *     For more information, please check the\n     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n     *     need to avoid loading the default gRPC version and want to use the fallback\n     *     HTTP implementation. Load only fallback version and pass it to the constructor:\n     *     ```\n     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n     *     const client = new ProductSearchClient({fallback: true}, gax);\n     *     ```\n     */\n    constructor(opts, gaxInstance) {\n        var _a, _b, _c, _d, _e;\n        this._terminated = false;\n        this.descriptors = {\n            page: {},\n            stream: {},\n            longrunning: {},\n            batching: {},\n        };\n        // Ensure that options include all the required fields.\n        const staticMembers = this.constructor;\n        if ((opts === null || opts === void 0 ? void 0 : opts.universe_domain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universeDomain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== (opts === null || opts === void 0 ? void 0 : opts.universeDomain)) {\n            throw new Error('Please set either universe_domain or universeDomain, but not both.');\n        }\n        const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object'\n            ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN']\n            : undefined;\n        this._universeDomain =\n            (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.universeDomain) !== null && _a !== void 0 ? _a : opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== null && _b !== void 0 ? _b : universeDomainEnvVar) !== null && _c !== void 0 ? _c : 'googleapis.com';\n        this._servicePath = 'vision.' + this._universeDomain;\n        const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || this._servicePath;\n        this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n        const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n        const clientConfig = (_d = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _d !== void 0 ? _d : {};\n        const fallback = (_e = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _e !== void 0 ? _e : (typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function');\n        opts = Object.assign({ servicePath, port, clientConfig, fallback }, opts);\n        // Request numeric enum values if REST transport is used.\n        opts.numericEnums = true;\n        // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n        if (servicePath !== this._servicePath && !('scopes' in opts)) {\n            opts['scopes'] = staticMembers.scopes;\n        }\n        // Load google-gax module synchronously if needed\n        if (!gaxInstance) {\n            gaxInstance = require('google-gax');\n        }\n        // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n        this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n        // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n        this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n        // Save options to use in initialize() method.\n        this._opts = opts;\n        // Save the auth object to the client, for use by other methods.\n        this.auth = this._gaxGrpc.auth;\n        // Set useJWTAccessWithScope on the auth object.\n        this.auth.useJWTAccessWithScope = true;\n        // Set defaultServicePath on the auth object.\n        this.auth.defaultServicePath = this._servicePath;\n        // Set the default scopes in auth client if needed.\n        if (servicePath === this._servicePath) {\n            this.auth.defaultScopes = staticMembers.scopes;\n        }\n        // Determine the client header string.\n        const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n        if (typeof process === 'object' && 'versions' in process) {\n            clientHeader.push(`gl-node/${process.versions.node}`);\n        }\n        else {\n            clientHeader.push(`gl-web/${this._gaxModule.version}`);\n        }\n        if (!opts.fallback) {\n            clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n        }\n        else {\n            clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n        }\n        if (opts.libName && opts.libVersion) {\n            clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n        }\n        // Load the applicable protos.\n        this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n        // This API contains \"path templates\"; forward-slash-separated\n        // identifiers to uniquely identify resources within the API.\n        // Create useful helper objects for these.\n        this.pathTemplates = {\n            locationPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}'),\n            productPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/products/{product}'),\n            productSetPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/productSets/{product_set}'),\n            referenceImagePathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/products/{product}/referenceImages/{reference_image}'),\n        };\n        // Some of the methods on this service return \"paged\" results,\n        // (e.g. 50 results at a time, with tokens to get subsequent\n        // pages). Denote the keys used for pagination and results.\n        this.descriptors.page = {\n            listProductSets: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'productSets'),\n            listProducts: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'products'),\n            listReferenceImages: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'referenceImages'),\n            listProductsInProductSet: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'products'),\n        };\n        const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);\n        // This API contains \"long-running operations\", which return a\n        // an Operation object that allows for tracking of the operation,\n        // rather than holding a request open.\n        const lroOptions = {\n            auth: this.auth,\n            grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,\n        };\n        if (opts.fallback) {\n            lroOptions.protoJson = protoFilesRoot;\n            lroOptions.httpRules = [];\n        }\n        this.operationsClient = this._gaxModule\n            .lro(lroOptions)\n            .operationsClient(opts);\n        const importProductSetsResponse = protoFilesRoot.lookup('.google.cloud.vision.v1p4beta1.ImportProductSetsResponse');\n        const importProductSetsMetadata = protoFilesRoot.lookup('.google.cloud.vision.v1p4beta1.BatchOperationMetadata');\n        const purgeProductsResponse = protoFilesRoot.lookup('.google.protobuf.Empty');\n        const purgeProductsMetadata = protoFilesRoot.lookup('.google.cloud.vision.v1p4beta1.BatchOperationMetadata');\n        this.descriptors.longrunning = {\n            importProductSets: new this._gaxModule.LongrunningDescriptor(this.operationsClient, importProductSetsResponse.decode.bind(importProductSetsResponse), importProductSetsMetadata.decode.bind(importProductSetsMetadata)),\n            purgeProducts: new this._gaxModule.LongrunningDescriptor(this.operationsClient, purgeProductsResponse.decode.bind(purgeProductsResponse), purgeProductsMetadata.decode.bind(purgeProductsMetadata)),\n        };\n        // Put together the default options sent with requests.\n        this._defaults = this._gaxGrpc.constructSettings('google.cloud.vision.v1p4beta1.ProductSearch', gapicConfig, opts.clientConfig || {}, { 'x-goog-api-client': clientHeader.join(' ') });\n        // Set up a dictionary of \"inner API calls\"; the core implementation\n        // of calling the API is handled in `google-gax`, with this code\n        // merely providing the destination and request information.\n        this.innerApiCalls = {};\n        // Add a warn function to the client constructor so it can be easily tested.\n        this.warn = this._gaxModule.warn;\n    }\n    /**\n     * Initialize the client.\n     * Performs asynchronous operations (such as authentication) and prepares the client.\n     * This function will be called automatically when any class method is called for the\n     * first time, but if you need to initialize it before calling an actual method,\n     * feel free to call initialize() directly.\n     *\n     * You can await on this method if you want to make sure the client is initialized.\n     *\n     * @returns {Promise} A promise that resolves to an authenticated service stub.\n     */\n    initialize() {\n        // If the client stub promise is already initialized, return immediately.\n        if (this.productSearchStub) {\n            return this.productSearchStub;\n        }\n        // Put together the \"service stub\" for\n        // google.cloud.vision.v1p4beta1.ProductSearch.\n        this.productSearchStub = this._gaxGrpc.createStub(this._opts.fallback\n            ? this._protos.lookupService('google.cloud.vision.v1p4beta1.ProductSearch')\n            : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this._protos.google.cloud.vision.v1p4beta1.ProductSearch, this._opts, this._providedCustomServicePath);\n        // Iterate over each of the methods that the service provides\n        // and create an API call method for each.\n        const productSearchStubMethods = [\n            'createProductSet',\n            'listProductSets',\n            'getProductSet',\n            'updateProductSet',\n            'deleteProductSet',\n            'createProduct',\n            'listProducts',\n            'getProduct',\n            'updateProduct',\n            'deleteProduct',\n            'createReferenceImage',\n            'deleteReferenceImage',\n            'listReferenceImages',\n            'getReferenceImage',\n            'addProductToProductSet',\n            'removeProductFromProductSet',\n            'listProductsInProductSet',\n            'importProductSets',\n            'purgeProducts',\n        ];\n        for (const methodName of productSearchStubMethods) {\n            const callPromise = this.productSearchStub.then(stub => (...args) => {\n                if (this._terminated) {\n                    return Promise.reject('The client has already been closed.');\n                }\n                const func = stub[methodName];\n                return func.apply(stub, args);\n            }, (err) => () => {\n                throw err;\n            });\n            const descriptor = this.descriptors.page[methodName] ||\n                this.descriptors.longrunning[methodName] ||\n                undefined;\n            const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n            this.innerApiCalls[methodName] = apiCall;\n        }\n        return this.productSearchStub;\n    }\n    /**\n     * The DNS address for this API service.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get servicePath() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'vision.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service - same as servicePath.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get apiEndpoint() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'vision.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service.\n     * @returns {string} The DNS address for this service.\n     */\n    get apiEndpoint() {\n        return this._servicePath;\n    }\n    get universeDomain() {\n        return this._universeDomain;\n    }\n    /**\n     * The port for this API service.\n     * @returns {number} The default port for this service.\n     */\n    static get port() {\n        return 443;\n    }\n    /**\n     * The scopes needed to make gRPC calls for every method defined\n     * in this service.\n     * @returns {string[]} List of default scopes.\n     */\n    static get scopes() {\n        return [\n            'https://www.googleapis.com/auth/cloud-platform',\n            'https://www.googleapis.com/auth/cloud-vision',\n        ];\n    }\n    /**\n     * Return the project ID used by this class.\n     * @returns {Promise} A promise that resolves to string containing the project ID.\n     */\n    getProjectId(callback) {\n        if (callback) {\n            this.auth.getProjectId(callback);\n            return;\n        }\n        return this.auth.getProjectId();\n    }\n    createProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createProductSet(request, options, callback);\n    }\n    getProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getProductSet(request, options, callback);\n    }\n    updateProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                'product_set.name': (_a = request.productSet.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.updateProductSet(request, options, callback);\n    }\n    deleteProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deleteProductSet(request, options, callback);\n    }\n    createProduct(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createProduct(request, options, callback);\n    }\n    getProduct(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getProduct(request, options, callback);\n    }\n    updateProduct(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                'product.name': (_a = request.product.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.updateProduct(request, options, callback);\n    }\n    deleteProduct(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deleteProduct(request, options, callback);\n    }\n    createReferenceImage(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createReferenceImage(request, options, callback);\n    }\n    deleteReferenceImage(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deleteReferenceImage(request, options, callback);\n    }\n    getReferenceImage(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getReferenceImage(request, options, callback);\n    }\n    addProductToProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.addProductToProductSet(request, options, callback);\n    }\n    removeProductFromProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.removeProductFromProductSet(request, options, callback);\n    }\n    importProductSets(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.importProductSets(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `importProductSets()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1p4beta1/product_search.import_product_sets.js</caption>\n     * region_tag:vision_v1p4beta1_generated_ProductSearch_ImportProductSets_async\n     */\n    async checkImportProductSetsProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.importProductSets, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    purgeProducts(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.purgeProducts(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `purgeProducts()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1p4beta1/product_search.purge_products.js</caption>\n     * region_tag:vision_v1p4beta1_generated_ProductSearch_PurgeProducts_async\n     */\n    async checkPurgeProductsProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.purgeProducts, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    listProductSets(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listProductSets(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project from which ProductSets should be listed.\n     *\n     *   Format is `projects/PROJECT_ID/locations/LOC_ID`.\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1p4beta1.ProductSet|ProductSet} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listProductSetsAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listProductSetsStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProductSets'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProductSets.createStream(this.innerApiCalls.listProductSets, request, callSettings);\n    }\n    /**\n     * Equivalent to `listProductSets`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project from which ProductSets should be listed.\n     *\n     *   Format is `projects/PROJECT_ID/locations/LOC_ID`.\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.vision.v1p4beta1.ProductSet|ProductSet}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1p4beta1/product_search.list_product_sets.js</caption>\n     * region_tag:vision_v1p4beta1_generated_ProductSearch_ListProductSets_async\n     */\n    listProductSetsAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProductSets'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProductSets.asyncIterate(this.innerApiCalls['listProductSets'], request, callSettings);\n    }\n    listProducts(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listProducts(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project OR ProductSet from which Products should be listed.\n     *\n     *   Format:\n     *   `projects/PROJECT_ID/locations/LOC_ID`\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1p4beta1.Product|Product} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listProductsAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listProductsStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProducts'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProducts.createStream(this.innerApiCalls.listProducts, request, callSettings);\n    }\n    /**\n     * Equivalent to `listProducts`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project OR ProductSet from which Products should be listed.\n     *\n     *   Format:\n     *   `projects/PROJECT_ID/locations/LOC_ID`\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.vision.v1p4beta1.Product|Product}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1p4beta1/product_search.list_products.js</caption>\n     * region_tag:vision_v1p4beta1_generated_ProductSearch_ListProducts_async\n     */\n    listProductsAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProducts'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProducts.asyncIterate(this.innerApiCalls['listProducts'], request, callSettings);\n    }\n    listReferenceImages(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listReferenceImages(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. Resource name of the product containing the reference images.\n     *\n     *   Format is\n     *   `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   A token identifying a page of results to be returned. This is the value\n     *   of `nextPageToken` returned in a previous reference image list request.\n     *\n     *   Defaults to the first page if not specified.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1p4beta1.ReferenceImage|ReferenceImage} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listReferenceImagesAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listReferenceImagesStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listReferenceImages'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listReferenceImages.createStream(this.innerApiCalls.listReferenceImages, request, callSettings);\n    }\n    /**\n     * Equivalent to `listReferenceImages`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. Resource name of the product containing the reference images.\n     *\n     *   Format is\n     *   `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   A token identifying a page of results to be returned. This is the value\n     *   of `nextPageToken` returned in a previous reference image list request.\n     *\n     *   Defaults to the first page if not specified.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.vision.v1p4beta1.ReferenceImage|ReferenceImage}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1p4beta1/product_search.list_reference_images.js</caption>\n     * region_tag:vision_v1p4beta1_generated_ProductSearch_ListReferenceImages_async\n     */\n    listReferenceImagesAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listReferenceImages'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listReferenceImages.asyncIterate(this.innerApiCalls['listReferenceImages'], request, callSettings);\n    }\n    listProductsInProductSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listProductsInProductSet(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.name\n     *   Required. The ProductSet resource for which to retrieve Products.\n     *\n     *   Format is:\n     *   `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.vision.v1p4beta1.Product|Product} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listProductsInProductSetAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listProductsInProductSetStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProductsInProductSet'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProductsInProductSet.createStream(this.innerApiCalls.listProductsInProductSet, request, callSettings);\n    }\n    /**\n     * Equivalent to `listProductsInProductSet`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.name\n     *   Required. The ProductSet resource for which to retrieve Products.\n     *\n     *   Format is:\n     *   `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`\n     * @param {number} request.pageSize\n     *   The maximum number of items to return. Default 10, maximum 100.\n     * @param {string} request.pageToken\n     *   The next_page_token returned from a previous List request, if any.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.vision.v1p4beta1.Product|Product}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1p4beta1/product_search.list_products_in_product_set.js</caption>\n     * region_tag:vision_v1p4beta1_generated_ProductSearch_ListProductsInProductSet_async\n     */\n    listProductsInProductSetAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listProductsInProductSet'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listProductsInProductSet.asyncIterate(this.innerApiCalls['listProductsInProductSet'], request, callSettings);\n    }\n    // --------------------\n    // -- Path templates --\n    // --------------------\n    /**\n     * Return a fully-qualified location resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @returns {string} Resource name string.\n     */\n    locationPath(project, location) {\n        return this.pathTemplates.locationPathTemplate.render({\n            project: project,\n            location: location,\n        });\n    }\n    /**\n     * Parse the project from Location resource.\n     *\n     * @param {string} locationName\n     *   A fully-qualified path representing Location resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromLocationName(locationName) {\n        return this.pathTemplates.locationPathTemplate.match(locationName).project;\n    }\n    /**\n     * Parse the location from Location resource.\n     *\n     * @param {string} locationName\n     *   A fully-qualified path representing Location resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromLocationName(locationName) {\n        return this.pathTemplates.locationPathTemplate.match(locationName).location;\n    }\n    /**\n     * Return a fully-qualified product resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} product\n     * @returns {string} Resource name string.\n     */\n    productPath(project, location, product) {\n        return this.pathTemplates.productPathTemplate.render({\n            project: project,\n            location: location,\n            product: product,\n        });\n    }\n    /**\n     * Parse the project from Product resource.\n     *\n     * @param {string} productName\n     *   A fully-qualified path representing Product resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProductName(productName) {\n        return this.pathTemplates.productPathTemplate.match(productName).project;\n    }\n    /**\n     * Parse the location from Product resource.\n     *\n     * @param {string} productName\n     *   A fully-qualified path representing Product resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromProductName(productName) {\n        return this.pathTemplates.productPathTemplate.match(productName).location;\n    }\n    /**\n     * Parse the product from Product resource.\n     *\n     * @param {string} productName\n     *   A fully-qualified path representing Product resource.\n     * @returns {string} A string representing the product.\n     */\n    matchProductFromProductName(productName) {\n        return this.pathTemplates.productPathTemplate.match(productName).product;\n    }\n    /**\n     * Return a fully-qualified productSet resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} product_set\n     * @returns {string} Resource name string.\n     */\n    productSetPath(project, location, productSet) {\n        return this.pathTemplates.productSetPathTemplate.render({\n            project: project,\n            location: location,\n            product_set: productSet,\n        });\n    }\n    /**\n     * Parse the project from ProductSet resource.\n     *\n     * @param {string} productSetName\n     *   A fully-qualified path representing ProductSet resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProductSetName(productSetName) {\n        return this.pathTemplates.productSetPathTemplate.match(productSetName)\n            .project;\n    }\n    /**\n     * Parse the location from ProductSet resource.\n     *\n     * @param {string} productSetName\n     *   A fully-qualified path representing ProductSet resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromProductSetName(productSetName) {\n        return this.pathTemplates.productSetPathTemplate.match(productSetName)\n            .location;\n    }\n    /**\n     * Parse the product_set from ProductSet resource.\n     *\n     * @param {string} productSetName\n     *   A fully-qualified path representing ProductSet resource.\n     * @returns {string} A string representing the product_set.\n     */\n    matchProductSetFromProductSetName(productSetName) {\n        return this.pathTemplates.productSetPathTemplate.match(productSetName)\n            .product_set;\n    }\n    /**\n     * Return a fully-qualified referenceImage resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} product\n     * @param {string} reference_image\n     * @returns {string} Resource name string.\n     */\n    referenceImagePath(project, location, product, referenceImage) {\n        return this.pathTemplates.referenceImagePathTemplate.render({\n            project: project,\n            location: location,\n            product: product,\n            reference_image: referenceImage,\n        });\n    }\n    /**\n     * Parse the project from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).project;\n    }\n    /**\n     * Parse the location from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).location;\n    }\n    /**\n     * Parse the product from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the product.\n     */\n    matchProductFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).product;\n    }\n    /**\n     * Parse the reference_image from ReferenceImage resource.\n     *\n     * @param {string} referenceImageName\n     *   A fully-qualified path representing ReferenceImage resource.\n     * @returns {string} A string representing the reference_image.\n     */\n    matchReferenceImageFromReferenceImageName(referenceImageName) {\n        return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).reference_image;\n    }\n    /**\n     * Terminate the gRPC channel and close the client.\n     *\n     * The client will no longer be usable and all future behavior is undefined.\n     * @returns {Promise} A promise that resolves when the client is closed.\n     */\n    close() {\n        if (this.productSearchStub && !this._terminated) {\n            return this.productSearchStub.then(stub => {\n                this._terminated = true;\n                stub.close();\n                this.operationsClient.close();\n            });\n        }\n        return Promise.resolve();\n    }\n}\nexports.ProductSearchClient = ProductSearchClient;\n//# sourceMappingURL=product_search_client.js.map"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6315, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6320, "column": 0}, "map": {"version":3,"sources":["file:///Users/dokyunglee/Documents/Hackathon/Mental-Health-Tracker-App/next-frontend/node_modules/%40google-cloud/vision/build/src/v1p4beta1/index.js"],"sourcesContent":["\"use strict\";\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProductSearchClient = exports.ImageAnnotatorClient = void 0;\nvar image_annotator_client_1 = require(\"./image_annotator_client\");\nObject.defineProperty(exports, \"ImageAnnotatorClient\", { enumerable: true, get: function () { return image_annotator_client_1.ImageAnnotatorClient; } });\nvar product_search_client_1 = require(\"./product_search_client\");\nObject.defineProperty(exports, \"ProductSearchClient\", { enumerable: true, get: function () { return product_search_client_1.ProductSearchClient; } });\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,EAAE;AACF,4EAA4E;AAC5E,iEAAiE;AACjE,qDAAqD;AACrD,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,mBAAmB,GAAG,QAAQ,oBAAoB,GAAG,KAAK;AAClE,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,wBAAwB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,yBAAyB,oBAAoB;IAAE;AAAE;AACtJ,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,uBAAuB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,wBAAwB,mBAAmB;IAAE;AAAE,IACnJ,iCAAiC","ignoreList":[0]}},
    {"offset": {"line": 6356, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6361, "column": 0}, "map": {"version":3,"sources":["file:///Users/dokyunglee/Documents/Hackathon/Mental-Health-Tracker-App/next-frontend/node_modules/%40google-cloud/vision/build/src/helpers.js"],"sourcesContent":["\"use strict\";\n// Copyright 2017 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.call = call;\nconst fs = require(\"fs\");\nconst is = require(\"is\");\nconst promisify_1 = require(\"@google-cloud/promisify\");\nconst gax = require(\"google-gax\");\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst _requestToObject = (request) => {\n    if (is.string(request)) {\n        // Is this a URL or a local file?\n        // Guess based on what the string looks like, and build the full\n        // request object in the correct format.\n        if (request.indexOf('://') === -1 || request.indexOf('file://') === 0) {\n            request = {\n                image: { source: { filename: request } },\n            };\n        }\n        else {\n            request = {\n                image: { source: { imageUri: request } },\n            };\n        }\n    }\n    else if (Buffer.isBuffer(request)) {\n        // Drop the buffer one level lower; it will get dealt with later\n        // in the function. This allows sending <Buffer> and {image: <Buffer>} to\n        // both work identically.\n        request = { image: request };\n    }\n    return request;\n};\nconst _coerceRequest = (request, callback) => {\n    // At this point, request must be an object with an `image` key; if not,\n    // it is an error. If there is no image, throw an exception.\n    if (!is.object(request) || is.undefined(request.image)) {\n        return callback(new Error('No image present.'));\n    }\n    // If this is a buffer, read it and send the object\n    // that the Vision API expects.\n    if (Buffer.isBuffer(request.image)) {\n        request.image = { content: request.image.toString('base64') };\n    }\n    // If the file is specified as a filename and exists on disk, read it\n    // and coerce it into the base64 content.\n    if (request.image.source && request.image.source.filename) {\n        fs.readFile(request.image.source.filename, (err, blob) => {\n            if (err) {\n                callback(err);\n                return;\n            }\n            request.image.content = blob.toString('base64');\n            delete request.image.source;\n            return callback(null, request);\n        });\n    }\n    else {\n        return callback(null, request);\n    }\n};\nconst _createSingleFeatureMethod = (featureValue) => {\n    return function (request, callOptionsOrCallback, callback) {\n        // confidence check: If we got a string or buffer, we need this to be\n        // in object form now, so we can tack on the features list.\n        //\n        // Do the minimum required conversion, which can also be guaranteed to\n        // be synchronous (e.g. no file loading yet; that is handled by\n        // annotateImage later.\n        const annotateImageRequest = _requestToObject(request);\n        // If a callback was provided and options were skipped, normalize\n        // the argument names.\n        let callOptions;\n        if (is.undefined(callback) && is.function(callOptionsOrCallback)) {\n            callback = callOptionsOrCallback;\n            callOptions = undefined;\n        }\n        else {\n            callOptions = callOptionsOrCallback;\n        }\n        // Add the feature to the request.\n        annotateImageRequest.features = annotateImageRequest.features || [\n            {\n                type: featureValue,\n            },\n        ];\n        // If the user submitted explicit features that do not line up with\n        // the precise method called, throw an exception.\n        for (const feature of annotateImageRequest.features) {\n            if (feature.type !== featureValue) {\n                throw new Error('Setting explicit features is not supported on this method. ' +\n                    'Use the #annotateImage method instead.');\n            }\n        }\n        // Call the underlying #annotateImage method.\n        return this.annotateImage(annotateImageRequest, callOptions, callback);\n    };\n};\nfunction call(apiVersion) {\n    const methods = {};\n    /**\n     * Annotate a single image with the requested features.\n     *\n     * @see v1.ImageAnnotatorClient#batchAnnotateImages\n     * @see google.cloud.vision.v1.AnnotateImageRequest\n     *\n     * @method v1.ImageAnnotatorClient#annotateImage\n     * @param {object|string|Buffer} request A representation of the request\n     *     being sent to the Vision API. This is an\n     *     {@link google.cloud.vision.v1.AnnotateImageRequest AnnotateImageRequest}.\n     *     For simple cases, you may also send a string (the URL or filename of\n     *     the image) or a buffer (the image itself).\n     * @param {object} request.image A dictionary-like object representing the\n     *     image. This should have a single key (`source`, `content`).\n     *\n     *     If the key is `source`, the value should be another object containing\n     *     `imageUri` or `filename` as a key and a string as a value.\n     *\n     *     If the key is `content`, the value should be base64 encoded text.\n     *     See {@link https://cloud.google.com/vision/docs/base64} for the details.\n     * @param {object[]} request.features An array of the specific annotation\n     *     features being requested. This should take a form such as:\n     *\n     *         [{type: vision.types.Feature.Type.FACE_DETECTION},\n     *         {type: vision.types.Feature.Type.WEB_DETECTION}]\n     *\n     * @param {object} [callOptions] Optional parameters. You can override the\n     *     default settings for this call, e.g, timeout, retries, paginations,\n     *     etc. See {@link https://googleapis.github.io/gax-nodejs/global.html#CallOptions| gax.CallOptions}\n     *     for the details.\n     * @param {function(?Error, ?object)} [callback] The function which will be\n     *     called with the result of the API call.\n     *\n     *     The second parameter to the callback is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     * @returns {Promise} The promise which resolves to an array. The first\n     *     element of the array is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     *     The promise has a method named \"cancel\" which cancels the ongoing API\n     *     call.\n     *\n     * @example\n     * const vision = require('@google-cloud/vision');\n     * const client = new vision.ImageAnnotatorClient();\n     *\n     * const request = {\n     *   image: {source: {imageUri: 'gs://path/to/image.jpg'}},\n     *   features: [],\n     * };\n     * client\n     *   .annotateImage(request)\n     *   .then(response => {\n     *     // doThingsWith(response);\n     *   })\n     *   .catch(err => {\n     *     console.error(err);\n     *   });\n     */\n    methods.annotateImage = (0, promisify_1.promisify)(function (request, callOptionsOrCallback, callback) {\n        // If a callback was provided and options were skipped, normalize\n        // the argument names.\n        let callOptions;\n        if (is.undefined(callback) && is.function(callOptionsOrCallback)) {\n            callback = callOptionsOrCallback;\n            callOptions = undefined;\n        }\n        else {\n            callOptions = callOptionsOrCallback;\n        }\n        // If we got a filename for the image, open the file and transform\n        // it to content.\n        return _coerceRequest(request, (err, req) => {\n            if (err) {\n                return callback(err);\n            }\n            // Call the GAPIC batch annotation function.\n            const requests = { requests: [req] };\n            return this.batchAnnotateImages(requests, callOptions, (err, r) => {\n                // If there is an error, handle it.\n                if (err) {\n                    return callback(err);\n                }\n                // We are guaranteed to only have one response element, since we\n                // only sent one image.\n                const response = r.responses[0];\n                // Fire the callback if applicable.\n                return callback(undefined, response);\n            });\n        });\n    });\n    const protoFilesRoot = gax.protobuf.Root.fromJSON(\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    require('../protos/protos.json'));\n    const features = protoFilesRoot.lookup(`google.cloud.vision.${apiVersion}.Feature.Type`).values;\n    /**\n     * Annotate a single image with face detection.\n     *\n     * @see v1.ImageAnnotatorClient#batchAnnotateImages\n     * @see google.cloud.vision.v1.AnnotateImageRequest\n     *\n     * @method v1.ImageAnnotatorClient#faceDetection\n     * @param {object|string|Buffer} request A representation of the request\n     *     being sent to the Vision API. This is an\n     *     {@link google.cloud.vision.v1.AnnotateImageRequest AnnotateImageRequest}.\n     *     For simple cases, you may also send a string (the URL or filename of\n     *     the image) or a buffer (the image itself).\n     * @param {object} request.image A dictionary-like object representing the\n     *     image. This should have a single key (`source`, `content`).\n     *\n     *     If the key is `source`, the value should be another object containing\n     *     `imageUri` or `filename` as a key and a string as a value.\n     *\n     *     If the key is `content`, the value should be base64 encoded text.\n     *     See {@link https://cloud.google.com/vision/docs/base64} for the details.\n     * @param {object} [callOptions] Optional parameters. You can override the\n     *     default settings for this call, e.g, timeout, retries, paginations,\n     *     etc. See {@link https://googleapis.github.io/gax-nodejs/global.html#CallOptions| gax.CallOptions}\n     *     for the details.\n     * @param {function(?Error, ?object)} [callback] The function which will be\n     *     called with the result of the API call.\n     *\n     *     The second parameter to the callback is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     * @returns {Promise} The promise which resolves to an array. The first\n     *     element of the array is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     *     The promise has a method named \"cancel\" which cancels the ongoing API\n     *     call.\n     *\n     * @example\n     * const vision = require('@google-cloud/vision');\n     * const client = new vision.ImageAnnotatorClient();\n     *\n     * const request = {\n     *   image: {\n     *     source: {imageUri: 'gs://path/to/image.jpg'}\n     *   }\n     * };\n     *\n     * client\n     *   .faceDetection(request)\n     *   .then(response => {\n     *     // doThingsWith(response);\n     *   })\n     *   .catch(err => {\n     *     console.error(err);\n     *   });\n     */\n    methods.faceDetection = (0, promisify_1.promisify)(_createSingleFeatureMethod(features.FACE_DETECTION));\n    /**\n     * Annotate a single image with landmark detection.\n     *\n     * @see v1.ImageAnnotatorClient#batchAnnotateImages\n     * @see google.cloud.vision.v1.AnnotateImageRequest\n     *\n     * @method v1.ImageAnnotatorClient#landmarkDetection\n     * @param {object|string|Buffer} request A representation of the request\n     *     being sent to the Vision API. This is an\n     *     {@link google.cloud.vision.v1.AnnotateImageRequest AnnotateImageRequest}.\n     *     For simple cases, you may also send a string (the URL or filename of\n     *     the image) or a buffer (the image itself).\n     * @param {object} request.image A dictionary-like object representing the\n     *     image. This should have a single key (`source`, `content`).\n     *\n     *     If the key is `source`, the value should be another object containing\n     *     `imageUri` or `filename` as a key and a string as a value.\n     *\n     *     If the key is `content`, the value should be base64 encoded text.\n     *     See {@link https://cloud.google.com/vision/docs/base64} for the details.\n     * @param {object} [callOptions] Optional parameters. You can override the\n     *     default settings for this call, e.g, timeout, retries, paginations,\n     *     etc. See {@link https://googleapis.github.io/gax-nodejs/global.html#CallOptions| gax.CallOptions}\n     *     for the details.\n     * @param {function(?Error, ?object)} [callback] The function which will be\n     *     called with the result of the API call.\n     *\n     *     The second parameter to the callback is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     * @returns {Promise} The promise which resolves to an array. The first\n     *     element of the array is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     *     The promise has a method named \"cancel\" which cancels the ongoing API\n     *     call.\n     *\n     * @example\n     * const vision = require('@google-cloud/vision');\n     * const client = new vision.ImageAnnotatorClient();\n     *\n     * const request = {\n     *   image: {\n     *     source: {imageUri: 'gs://path/to/image.jpg'}\n     *   }\n     * };\n     *\n     * client\n     *   .landmarkDetection(request)\n     *   .then(response => {\n     *     // doThingsWith(response);\n     *   })\n     *   .catch(err => {\n     *     console.error(err);\n     *   });\n     */\n    methods.landmarkDetection = (0, promisify_1.promisify)(_createSingleFeatureMethod(features.LANDMARK_DETECTION));\n    /**\n     * Annotate a single image with logo detection.\n     *\n     * @see v1.ImageAnnotatorClient#batchAnnotateImages\n     * @see google.cloud.vision.v1.AnnotateImageRequest\n     *\n     * @method v1.ImageAnnotatorClient#logoDetection\n     * @param {object|string|Buffer} request A representation of the request\n     *     being sent to the Vision API. This is an\n     *     {@link google.cloud.vision.v1.AnnotateImageRequest AnnotateImageRequest}.\n     *     For simple cases, you may also send a string (the URL or filename of\n     *     the image) or a buffer (the image itself).\n     * @param {object} request.image A dictionary-like object representing the\n     *     image. This should have a single key (`source`, `content`).\n     *\n     *     If the key is `source`, the value should be another object containing\n     *     `imageUri` or `filename` as a key and a string as a value.\n     *\n     *     If the key is `content`, the value should be base64 encoded text.\n     *     See {@link https://cloud.google.com/vision/docs/base64} for the details.\n     * @param {object} [callOptions] Optional parameters. You can override the\n     *     default settings for this call, e.g, timeout, retries, paginations,\n     *     etc. See {@link https://googleapis.github.io/gax-nodejs/global.html#CallOptions| gax.CallOptions}\n     *     for the details.\n     * @param {function(?Error, ?object)} [callback] The function which will be\n     *     called with the result of the API call.\n     *\n     *     The second parameter to the callback is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     * @returns {Promise} The promise which resolves to an array. The first\n     *     element of the array is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     *     The promise has a method named \"cancel\" which cancels the ongoing API\n     *     call.\n     *\n     * @example\n     * const vision = require('@google-cloud/vision');\n     * const client = new vision.ImageAnnotatorClient();\n     *\n     * const request = {\n     *   image: {\n     *     source: {imageUri: 'gs://path/to/image.jpg'}\n     *   }\n     * };\n     *\n     * client\n     *   .logoDetection(request)\n     *   .then(response => {\n     *     // doThingsWith(response);\n     *   })\n     *   .catch(err => {\n     *     console.error(err);\n     *   });\n     */\n    methods.logoDetection = (0, promisify_1.promisify)(_createSingleFeatureMethod(features.LOGO_DETECTION));\n    /**\n     * Annotate a single image with label detection.\n     *\n     * @see v1.ImageAnnotatorClient#batchAnnotateImages\n     * @see google.cloud.vision.v1.AnnotateImageRequest\n     *\n     * @method v1.ImageAnnotatorClient#labelDetection\n     * @param {object|string|Buffer} request A representation of the request\n     *     being sent to the Vision API. This is an\n     *     {@link google.cloud.vision.v1.AnnotateImageRequest AnnotateImageRequest}.\n     *     For simple cases, you may also send a string (the URL or filename of\n     *     the image) or a buffer (the image itself).\n     * @param {object} request.image A dictionary-like object representing the\n     *     image. This should have a single key (`source`, `content`).\n     *\n     *     If the key is `source`, the value should be another object containing\n     *     `imageUri` or `filename` as a key and a string as a value.\n     *\n     *     If the key is `content`, the value should be base64 encoded text.\n     *     See {@link https://cloud.google.com/vision/docs/base64} for the details.\n     * @param {object} [callOptions] Optional parameters. You can override the\n     *     default settings for this call, e.g, timeout, retries, paginations,\n     *     etc. See {@link https://googleapis.github.io/gax-nodejs/global.html#CallOptions| gax.CallOptions}\n     *     for the details.\n     * @param {function(?Error, ?object)} [callback] The function which will be\n     *     called with the result of the API call.\n     *\n     *     The second parameter to the callback is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     * @returns {Promise} The promise which resolves to an array. The first\n     *     element of the array is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     *     The promise has a method named \"cancel\" which cancels the ongoing API\n     *     call.\n     *\n     * @example\n     * const vision = require('@google-cloud/vision');\n     * const client = new vision.ImageAnnotatorClient();\n     *\n     * const request = {\n     *   image: {\n     *     source: {imageUri: 'gs://path/to/image.jpg'}\n     *   }\n     * };\n     *\n     * client\n     *   .labelDetection(request)\n     *   .then(response => {\n     *     // doThingsWith(response);\n     *   })\n     *   .catch(err => {\n     *     console.error(err);\n     *   });\n     */\n    methods.labelDetection = (0, promisify_1.promisify)(_createSingleFeatureMethod(features.LABEL_DETECTION));\n    /**\n     * Annotate a single image with text detection.\n     *\n     * @see v1.ImageAnnotatorClient#batchAnnotateImages\n     * @see google.cloud.vision.v1.AnnotateImageRequest\n     *\n     * @method v1.ImageAnnotatorClient#textDetection\n     * @param {object|string|Buffer} request A representation of the request\n     *     being sent to the Vision API. This is an\n     *     {@link google.cloud.vision.v1.AnnotateImageRequest AnnotateImageRequest}.\n     *     For simple cases, you may also send a string (the URL or filename of\n     *     the image) or a buffer (the image itself).\n     * @param {object} request.image A dictionary-like object representing the\n     *     image. This should have a single key (`source`, `content`).\n     *\n     *     If the key is `source`, the value should be another object containing\n     *     `imageUri` or `filename` as a key and a string as a value.\n     *\n     *     If the key is `content`, the value should be base64 encoded text.\n     *     See {@link https://cloud.google.com/vision/docs/base64} for the details.\n     * @param {object} [callOptions] Optional parameters. You can override the\n     *     default settings for this call, e.g, timeout, retries, paginations,\n     *     etc. See {@link https://googleapis.github.io/gax-nodejs/global.html#CallOptions| gax.CallOptions}\n     *     for the details.\n     * @param {function(?Error, ?object)} [callback] The function which will be\n     *     called with the result of the API call.\n     *\n     *     The second parameter to the callback is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     * @returns {Promise} The promise which resolves to an array. The first\n     *     element of the array is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     *     The promise has a method named \"cancel\" which cancels the ongoing API\n     *     call.\n     *\n     * @example\n     * const vision = require('@google-cloud/vision');\n     * const client = new vision.ImageAnnotatorClient();\n     *\n     * const request = {\n     *   image: {\n     *     source: {imageUri: 'gs://path/to/image.jpg'}\n     *   }\n     * };\n     *\n     * client\n     *   .textDetection(request)\n     *   .then(response => {\n     *     // doThingsWith(response);\n     *   })\n     *   .catch(err => {\n     *     console.error(err);\n     *   });\n     */\n    methods.textDetection = (0, promisify_1.promisify)(_createSingleFeatureMethod(features.TEXT_DETECTION));\n    /**\n     * Annotate a single image with document text detection.\n     *\n     * @see v1.ImageAnnotatorClient#batchAnnotateImages\n     * @see google.cloud.vision.v1.AnnotateImageRequest\n     *\n     * @method v1.ImageAnnotatorClient#documentTextDetection\n     * @param {object|string|Buffer} request A representation of the request\n     *     being sent to the Vision API. This is an\n     *     {@link google.cloud.vision.v1.AnnotateImageRequest AnnotateImageRequest}.\n     *     For simple cases, you may also send a string (the URL or filename of\n     *     the image) or a buffer (the image itself).\n     * @param {object} request.image A dictionary-like object representing the\n     *     image. This should have a single key (`source`, `content`).\n     *\n     *     If the key is `source`, the value should be another object containing\n     *     `imageUri` or `filename` as a key and a string as a value.\n     *\n     *     If the key is `content`, the value should be base64 encoded text.\n     *     See {@link https://cloud.google.com/vision/docs/base64} for the details.\n     * @param {object} [callOptions] Optional parameters. You can override the\n     *     default settings for this call, e.g, timeout, retries, paginations,\n     *     etc. See {@link https://googleapis.github.io/gax-nodejs/global.html#CallOptions| gax.CallOptions}\n     *     for the details.\n     * @param {function(?Error, ?object)} [callback] The function which will be\n     *     called with the result of the API call.\n     *\n     *     The second parameter to the callback is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     * @returns {Promise} The promise which resolves to an array. The first\n     *     element of the array is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     *     The promise has a method named \"cancel\" which cancels the ongoing API\n     *     call.\n     *\n     * @example\n     * const vision = require('@google-cloud/vision');\n     * const client = new vision.ImageAnnotatorClient();\n     *\n     * const request = {\n     *   image: {\n     *     source: {imageUri: 'gs://path/to/image.jpg'}\n     *   }\n     * };\n     *\n     * client\n     *   .documentTextDetection(request)\n     *   .then(response => {\n     *     // doThingsWith(response);\n     *   })\n     *   .catch(err => {\n     *     console.error(err);\n     *   });\n     */\n    methods.documentTextDetection = (0, promisify_1.promisify)(_createSingleFeatureMethod(features.DOCUMENT_TEXT_DETECTION));\n    /**\n     * Annotate a single image with safe search detection.\n     *\n     * @see v1.ImageAnnotatorClient#batchAnnotateImages\n     * @see google.cloud.vision.v1.AnnotateImageRequest\n     *\n     * @method v1.ImageAnnotatorClient#safeSearchDetection\n     * @param {object|string|Buffer} request A representation of the request\n     *     being sent to the Vision API. This is an\n     *     {@link google.cloud.vision.v1.AnnotateImageRequest AnnotateImageRequest}.\n     *     For simple cases, you may also send a string (the URL or filename of\n     *     the image) or a buffer (the image itself).\n     * @param {object} request.image A dictionary-like object representing the\n     *     image. This should have a single key (`source`, `content`).\n     *\n     *     If the key is `source`, the value should be another object containing\n     *     `imageUri` or `filename` as a key and a string as a value.\n     *\n     *     If the key is `content`, the value should be base64 encoded text.\n     *     See {@link https://cloud.google.com/vision/docs/base64} for the details.\n     * @param {object} [callOptions] Optional parameters. You can override the\n     *     default settings for this call, e.g, timeout, retries, paginations,\n     *     etc. See {@link https://googleapis.github.io/gax-nodejs/global.html#CallOptions| gax.CallOptions}\n     *     for the details.\n     * @param {function(?Error, ?object)} [callback] The function which will be\n     *     called with the result of the API call.\n     *\n     *     The second parameter to the callback is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     * @returns {Promise} The promise which resolves to an array. The first\n     *     element of the array is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     *     The promise has a method named \"cancel\" which cancels the ongoing API\n     *     call.\n     *\n     * @example\n     * const vision = require('@google-cloud/vision');\n     * const client = new vision.ImageAnnotatorClient();\n     *\n     * const request = {\n     *   image: {\n     *     source: {imageUri: 'gs://path/to/image.jpg'}\n     *   }\n     * };\n     *\n     * client\n     *   .safeSearchDetection(request)\n     *   .then(response => {\n     *     // doThingsWith(response);\n     *   })\n     *   .catch(err => {\n     *     console.error(err);\n     *   });\n     */\n    methods.safeSearchDetection = (0, promisify_1.promisify)(_createSingleFeatureMethod(features.SAFE_SEARCH_DETECTION));\n    /**\n     * Annotate a single image with image properties.\n     *\n     * @see v1.ImageAnnotatorClient#batchAnnotateImages\n     * @see google.cloud.vision.v1.AnnotateImageRequest\n     *\n     * @method v1.ImageAnnotatorClient#imageProperties\n     * @param {object|string|Buffer} request A representation of the request\n     *     being sent to the Vision API. This is an\n     *     {@link google.cloud.vision.v1.AnnotateImageRequest AnnotateImageRequest}.\n     *     For simple cases, you may also send a string (the URL or filename of\n     *     the image) or a buffer (the image itself).\n     * @param {object} request.image A dictionary-like object representing the\n     *     image. This should have a single key (`source`, `content`).\n     *\n     *     If the key is `source`, the value should be another object containing\n     *     `imageUri` or `filename` as a key and a string as a value.\n     *\n     *     If the key is `content`, the value should be base64 encoded text.\n     *     See {@link https://cloud.google.com/vision/docs/base64} for the details.\n     * @param {object} [callOptions] Optional parameters. You can override the\n     *     default settings for this call, e.g, timeout, retries, paginations,\n     *     etc. See {@link https://googleapis.github.io/gax-nodejs/global.html#CallOptions| gax.CallOptions}\n     *     for the details.\n     * @param {function(?Error, ?object)} [callback] The function which will be\n     *     called with the result of the API call.\n     *\n     *     The second parameter to the callback is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     * @returns {Promise} The promise which resolves to an array. The first\n     *     element of the array is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     *     The promise has a method named \"cancel\" which cancels the ongoing API\n     *     call.\n     *\n     * @example\n     * const vision = require('@google-cloud/vision');\n     * const client = new vision.ImageAnnotatorClient();\n     *\n     * const request = {\n     *   image: {\n     *     source: {imageUri: 'gs://path/to/image.jpg'}\n     *   }\n     * };\n     *\n     * client\n     *   .imageProperties(request)\n     *   .then(response => {\n     *     // doThingsWith(response);\n     *   })\n     *   .catch(err => {\n     *     console.error(err);\n     *   });\n     */\n    methods.imageProperties = (0, promisify_1.promisify)(_createSingleFeatureMethod(features.IMAGE_PROPERTIES));\n    /**\n     * Annotate a single image with crop hints.\n     *\n     * @see v1.ImageAnnotatorClient#batchAnnotateImages\n     * @see google.cloud.vision.v1.AnnotateImageRequest\n     *\n     * @method v1.ImageAnnotatorClient#cropHints\n     * @param {object|string|Buffer} request A representation of the request\n     *     being sent to the Vision API. This is an\n     *     {@link google.cloud.vision.v1.AnnotateImageRequest AnnotateImageRequest}.\n     *     For simple cases, you may also send a string (the URL or filename of\n     *     the image) or a buffer (the image itself).\n     * @param {object} request.image A dictionary-like object representing the\n     *     image. This should have a single key (`source`, `content`).\n     *\n     *     If the key is `source`, the value should be another object containing\n     *     `imageUri` or `filename` as a key and a string as a value.\n     *\n     *     If the key is `content`, the value should be base64 encoded text.\n     *     See {@link https://cloud.google.com/vision/docs/base64} for the details.\n     * @param {object} [callOptions] Optional parameters. You can override the\n     *     default settings for this call, e.g, timeout, retries, paginations,\n     *     etc. See {@link https://googleapis.github.io/gax-nodejs/global.html#CallOptions| gax.CallOptions}\n     *     for the details.\n     * @param {function(?Error, ?object)} [callback] The function which will be\n     *     called with the result of the API call.\n     *\n     *     The second parameter to the callback is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     * @returns {Promise} The promise which resolves to an array. The first\n     *     element of the array is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     *     The promise has a method named \"cancel\" which cancels the ongoing API\n     *     call.\n     *\n     * @example\n     * const vision = require('@google-cloud/vision');\n     * const client = new vision.ImageAnnotatorClient();\n     *\n     * const request = {\n     *   image: {\n     *     source: {imageUri: 'gs://path/to/image.jpg'}\n     *   }\n     * };\n     *\n     * client\n     *   .cropHints(request)\n     *   .then(response => {\n     *     // doThingsWith(response);\n     *   })\n     *   .catch(err => {\n     *     console.error(err);\n     *   });\n     */\n    methods.cropHints = (0, promisify_1.promisify)(_createSingleFeatureMethod(features.CROP_HINTS));\n    /**\n     * Annotate a single image with web detection.\n     *\n     * @see v1.ImageAnnotatorClient#batchAnnotateImages\n     * @see google.cloud.vision.v1.AnnotateImageRequest\n     *\n     * @method v1.ImageAnnotatorClient#webDetection\n     * @param {object|string|Buffer} request A representation of the request\n     *     being sent to the Vision API. This is an\n     *     {@link google.cloud.vision.v1.AnnotateImageRequest AnnotateImageRequest}.\n     *     For simple cases, you may also send a string (the URL or filename of\n     *     the image) or a buffer (the image itself).\n     * @param {object} request.image A dictionary-like object representing the\n     *     image. This should have a single key (`source`, `content`).\n     *\n     *     If the key is `source`, the value should be another object containing\n     *     `imageUri` or `filename` as a key and a string as a value.\n     *\n     *     If the key is `content`, the value should be base64 encoded text.\n     *     See {@link https://cloud.google.com/vision/docs/base64} for the details.\n     * @param {object} [callOptions] Optional parameters. You can override the\n     *     default settings for this call, e.g, timeout, retries, paginations,\n     *     etc. See {@link https://googleapis.github.io/gax-nodejs/global.html#CallOptions| gax.CallOptions}\n     *     for the details.\n     * @param {function(?Error, ?object)} [callback] The function which will be\n     *     called with the result of the API call.\n     *\n     *     The second parameter to the callback is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     * @returns {Promise} The promise which resolves to an array. The first\n     *     element of the array is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     *     The promise has a method named \"cancel\" which cancels the ongoing API\n     *     call.\n     *\n     * @example\n     * const vision = require('@google-cloud/vision');\n     * const client = new vision.ImageAnnotatorClient();\n     *\n     * const request = {\n     *   image: {\n     *     source: {imageUri: 'gs://path/to/image.jpg'}\n     *   }\n     * };\n     *\n     * client\n     *   .webDetection(request)\n     *   .then(response => {\n     *     // doThingsWith(response);\n     *   })\n     *   .catch(err => {\n     *     console.error(err);\n     *   });\n     */\n    methods.webDetection = (0, promisify_1.promisify)(_createSingleFeatureMethod(features.WEB_DETECTION));\n    /**\n     * Annotate a single image with the result from Product Search.\n     *\n     * @see v1p3beta1.ImageAnnotatorClient#batchAnnotateImages\n     * @see google.cloud.vision.v1p3beta1.AnnotateImageRequest\n     *\n     * @method v1p3beta1.ImageAnnotatorClient#productSearch\n     * @param {object|string|Buffer} request A representation of the request\n     *     being sent to the Vision API. This is an\n     *     {@link google.cloud.vision.v1p3beta1.AnnotateImageRequest AnnotateImageRequest}.\n     *     For simple cases, you may also send a string (the URL or filename of\n     *     the image) or a buffer (the image itself).\n     * @param {object} request.image A dictionary-like object representing the\n     *     image. This should have a single key (`source`, `content`).\n     *\n     *     If the key is `source`, the value should be another object containing\n     *     `imageUri` or `filename` as a key and a string as a value.\n     *\n     *     If the key is `content`, the value should be base64 encoded text.\n     *     See {@link https://cloud.google.com/vision/docs/base64} for the details.\n     * @param {object} [callOptions] Optional parameters. You can override the\n     *     default settings for this call, e.g, timeout, retries, paginations,\n     * @param {function(?Error, ?object)} [callback] The function which will be\n     *     called with the result of the API call.\n     *\n     *     The second parameter to the callback is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     * @returns {Promise} The promise which resolves to an array. The first\n     *     element of the array is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     *     The promise has a method named \"cancel\" which cancels the ongoing API\n     *     call.\n     *\n     * @example\n     * const vision = require('@google-cloud/vision').v1p3beta1;\n     * const client = new vision.ImageAnnotatorClient();\n     *\n     * const request = {\n     *   image: {\n     *     source: {imageUri: 'gs://path/to/image.jpg'}\n     *   }\n     * };\n     *\n     * client\n     *   .productSearch(request)\n     *   .then(response => {\n     *     // doThingsWith(response);\n     *   })\n     *   .catch(err => {\n     *     console.error(err);\n     *   });\n     */\n    if (features.PRODUCT_SEARCH !== undefined) {\n        methods.productSearch = (0, promisify_1.promisify)(_createSingleFeatureMethod(features.PRODUCT_SEARCH));\n    }\n    /**\n     * Annotate a single image with localization vectors.\n     *\n     * @see v1p3beta1.ImageAnnotatorClient#batchAnnotateImages\n     * @see google.cloud.vision.v1p3beta1.AnnotateImageRequest\n     *\n     * @method v1p3beta1.ImageAnnotatorClient#objectLocalization\n     * @param {object|string|Buffer} request A representation of the request\n     *     being sent to the Vision API. This is an\n     *     {@link google.cloud.vision.v1.AnnotateImageRequest AnnotateImageRequest}.\n     *     For simple cases, you may also send a string (the URL or filename of\n     *     the image) or a buffer (the image itself).\n     * @param {object} request.image A dictionary-like object representing the\n     *     image. This should have a single key (`source`, `content`).\n     *\n     *     If the key is `source`, the value should be another object containing\n     *     `imageUri` or `filename` as a key and a string as a value.\n     *\n     *     If the key is `content`, the value should be base64 encoded text.\n     *     See {@link https://cloud.google.com/vision/docs/base64} for the details.\n     * @param {object} [callOptions] Optional parameters. You can override the\n     *     default settings for this call, e.g, timeout, retries, paginations,\n     *     etc. See {@link https://googleapis.github.io/gax-nodejs/global.html#CallOptions| gax.CallOptions}\n     *     for the details.\n     * @param {function(?Error, ?object)} [callback] The function which will be\n     *     called with the result of the API call.\n     *\n     *     The second parameter to the callback is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     * @returns {Promise} The promise which resolves to an array. The first\n     *     element of the array is an object representing\n     *     [BatchAnnotateImagesResponse]{@link BatchAnnotateImagesResponse}.\n     *     The promise has a method named \"cancel\" which cancels the ongoing API\n     *     call.\n     *\n     * @example\n     * // Object localization is only available in v1p3beta1.\n     * const vision = require('@google-cloud/vision').v1p3beta1;\n     * const client = new vision.ImageAnnotatorClient();\n     *\n     * const request = {\n     *   image: {\n     *     source: {imageUri: 'gs://path/to/image.jpg'}\n     *   }\n     * };\n     *\n     * client\n     *   .objectLocalization(request)\n     *   .then(response => {\n     *     // doThingsWith(response);\n     *   })\n     *   .catch(err => {\n     *     console.error(err);\n     *   });\n     */\n    if (features.OBJECT_LOCALIZATION !== undefined) {\n        methods.objectLocalization = (0, promisify_1.promisify)(_createSingleFeatureMethod(features.OBJECT_LOCALIZATION));\n    }\n    return methods;\n}\n//# sourceMappingURL=helpers.js.map"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7238, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7243, "column": 0}, "map": {"version":3,"sources":["file:///Users/dokyunglee/Documents/Hackathon/Mental-Health-Tracker-App/next-frontend/node_modules/%40google-cloud/vision/build/src/index.js"],"sourcesContent":["\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.protos = exports.ProductSearchClient = exports.ImageAnnotatorClient = exports.v1p4beta1 = exports.v1p3beta1 = exports.v1p2beta1 = exports.v1p1beta1 = exports.v1 = void 0;\nconst v1 = require(\"./v1\");\nexports.v1 = v1;\nconst v1p1beta1 = require(\"./v1p1beta1\");\nexports.v1p1beta1 = v1p1beta1;\nconst v1p2beta1 = require(\"./v1p2beta1\");\nexports.v1p2beta1 = v1p2beta1;\nconst v1p3beta1 = require(\"./v1p3beta1\");\nexports.v1p3beta1 = v1p3beta1;\nconst v1p4beta1 = require(\"./v1p4beta1\");\nexports.v1p4beta1 = v1p4beta1;\nconst helpers = require(\"./helpers\");\nObject.assign(v1.ImageAnnotatorClient.prototype, helpers.call('v1'));\nObject.assign(v1p1beta1.ImageAnnotatorClient.prototype, helpers.call('v1p1beta1'));\nObject.assign(v1p2beta1.ImageAnnotatorClient.prototype, helpers.call('v1p2beta1'));\nObject.assign(v1p3beta1.ImageAnnotatorClient.prototype, helpers.call('v1p3beta1'));\nObject.assign(v1p4beta1.ImageAnnotatorClient.prototype, helpers.call('v1p4beta1'));\nconst ImageAnnotatorClient = v1.ImageAnnotatorClient;\nexports.ImageAnnotatorClient = ImageAnnotatorClient;\nconst ProductSearchClient = v1.ProductSearchClient;\nexports.ProductSearchClient = ProductSearchClient;\n// For compatibility with JavaScript libraries we need to provide this default export:\n// tslint:disable-next-line no-default-export\nexports.default = {\n    v1,\n    v1p1beta1,\n    v1p2beta1,\n    v1p3beta1,\n    v1p4beta1,\n    ImageAnnotatorClient,\n    ProductSearchClient,\n};\nconst protos = require(\"../protos/protos\");\nexports.protos = protos;\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,EAAE;AACF,4EAA4E;AAC5E,iEAAiE;AACjE,qDAAqD;AACrD,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,MAAM,GAAG,QAAQ,mBAAmB,GAAG,QAAQ,oBAAoB,GAAG,QAAQ,SAAS,GAAG,QAAQ,SAAS,GAAG,QAAQ,SAAS,GAAG,QAAQ,SAAS,GAAG,QAAQ,EAAE,GAAG,KAAK;AAChL,MAAM;AACN,QAAQ,EAAE,GAAG;AACb,MAAM;AACN,QAAQ,SAAS,GAAG;AACpB,MAAM;AACN,QAAQ,SAAS,GAAG;AACpB,MAAM;AACN,QAAQ,SAAS,GAAG;AACpB,MAAM;AACN,QAAQ,SAAS,GAAG;AACpB,MAAM;AACN,OAAO,MAAM,CAAC,GAAG,oBAAoB,CAAC,SAAS,EAAE,QAAQ,IAAI,CAAC;AAC9D,OAAO,MAAM,CAAC,UAAU,oBAAoB,CAAC,SAAS,EAAE,QAAQ,IAAI,CAAC;AACrE,OAAO,MAAM,CAAC,UAAU,oBAAoB,CAAC,SAAS,EAAE,QAAQ,IAAI,CAAC;AACrE,OAAO,MAAM,CAAC,UAAU,oBAAoB,CAAC,SAAS,EAAE,QAAQ,IAAI,CAAC;AACrE,OAAO,MAAM,CAAC,UAAU,oBAAoB,CAAC,SAAS,EAAE,QAAQ,IAAI,CAAC;AACrE,MAAM,uBAAuB,GAAG,oBAAoB;AACpD,QAAQ,oBAAoB,GAAG;AAC/B,MAAM,sBAAsB,GAAG,mBAAmB;AAClD,QAAQ,mBAAmB,GAAG;AAC9B,sFAAsF;AACtF,6CAA6C;AAC7C,QAAQ,OAAO,GAAG;IACd;IACA;IACA;IACA;IACA;IACA;IACA;AACJ;AACA,MAAM;AACN,QAAQ,MAAM,GAAG,QACjB,iCAAiC","ignoreList":[0]}},
    {"offset": {"line": 7298, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}