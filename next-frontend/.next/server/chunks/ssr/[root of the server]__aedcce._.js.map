{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/dokyunglee/Documents/Hackathon/Mental-Health-Tracker-App/next-frontend/src/components/Card.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\n\ninterface CardData {\n  title?: string;\n  description?: string;\n  imageUrl?: string;\n}\n\nconst Card = ({ title, description, imageUrl }: CardData) => {\n  return (\n    <div className=\"bg-blue shadow-lg rounded-lg overflow-hidden w-400 h-48 p-4 text-white\">\n      {imageUrl && <img className=\"object-cover\" src={imageUrl} alt={title} />}\n      <div className=\"p-2\">\n        <h3 className=\"text-xl pb-2 font-semibold\">{title}</h3>\n        <p className=\"text-xs truncate\">{description}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n"],"names":[],"mappings":";;;;AAAA;;AAUA,MAAM,OAAO,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAY;IACtD,qBACE,8OAAC;QAAI,WAAU;;YACZ,0BAAY,8OAAC;gBAAI,WAAU;gBAAe,KAAK;gBAAU,KAAK;;;;;;0BAC/D,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA8B;;;;;;kCAC5C,8OAAC;wBAAE,WAAU;kCAAoB;;;;;;;;;;;;;;;;;;AAIzC;uCAEe"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///Users/dokyunglee/Documents/Hackathon/Mental-Health-Tracker-App/next-frontend/src/components/Button.tsx"],"sourcesContent":["interface ButtonProps {\n  value?: string;\n  onClick?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport function Button({ value, onClick }: ButtonProps) {\n  return (\n    <button\n      className=\"select-none rounded-md bg-gray-900 py-2 px-4 text-center align-middle font-sans text-xs font-bold uppercase text-white bg-blue shadow-md shadow-gray-900/10 transition-all hover:shadow-lg hover:shadow-gray-900/20 focus:opacity-[0.85] focus:shadow-none active:opacity-[0.85] active:shadow-none disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none\"\n      type=\"button\"\n      onClick={() => onClick}\n      placeholder=\"\"\n    >\n      {value}\n    </button>\n  );\n}\n"],"names":[],"mappings":";;;;;AAKO,SAAS,OAAO,EAAE,KAAK,EAAE,OAAO,EAAe;IACpD,qBACE,8OAAC;QACC,WAAU;QACV,MAAK;QACL,SAAS,IAAM;QACf,aAAY;kBAEX;;;;;;AAGP"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file:///Users/dokyunglee/Documents/Hackathon/Mental-Health-Tracker-App/next-frontend/src/components/%08ImageToText.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useRef, useState } from \"react\";\nimport dynamic from \"next/dynamic\";\nimport Tesseract from \"tesseract.js\";\nimport {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult,\n} from \"@hello-pangea/dnd\";\n\nconst ImageToText = () => {\n  const [images, setImages] = useState<{ url: string; text: string }[]>([]);\n  const [textOutput, setTextOutput] = useState(\"\");\n  const [language, setLanguage] = useState(\"eng\");\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    updateTextOutput();\n  }, [images, language]);\n\n  const handleDrop = (result: any) => {\n    if (!result.destination) return;\n    const updatedImages = [...images];\n    const [reorderedImage] = updatedImages.splice(result.source.index, 1);\n    updatedImages.splice(result.destination.index, 0, reorderedImage);\n    setImages(updatedImages);\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files) {\n      loadImages(event.target.files);\n    }\n  };\n\n  const loadImages = async (files: FileList) => {\n    const loadedImages = await Promise.all(\n      Array.from(files).map(async (file) => {\n        const imageUrl = URL.createObjectURL(file);\n        const imageText = await recognizeText(imageUrl);\n        return { url: imageUrl, text: imageText };\n      })\n    );\n    setImages((prevImages) => [...prevImages, ...loadedImages]);\n  };\n\n  const recognizeText = async (imageData: string) => {\n    const { data } = await Tesseract.recognize(imageData, language);\n    return data.text;\n  };\n\n  const handleDeleteImage = (index: number) => {\n    setImages((prevImages) => prevImages.filter((_, i) => i !== index));\n  };\n\n  const updateTextOutput = async () => {\n    const imageTexts = await Promise.all(\n      images.map((image) => recognizeText(image.url))\n    );\n    setTextOutput(imageTexts.join(\"\\n\\n\"));\n  };\n\n  const handleDragDropClick = () => {\n    fileInputRef.current?.click();\n  };\n\n  const handlePaste = async (event: React.ClipboardEvent) => {\n    event.preventDefault();\n    const items = event.clipboardData.items;\n\n    for (const item of items) {\n      if (item.type.startsWith(\"image\")) {\n        const blob = item.getAsFile();\n        if (blob) {\n          const imageUrl = URL.createObjectURL(blob);\n          const imageText = await recognizeText(imageUrl);\n          setImages((prevImages) => [\n            ...prevImages,\n            { url: imageUrl, text: imageText },\n          ]);\n        }\n      }\n    }\n\n    updateTextOutput();\n  };\n\n  return (\n    <div className=\"container mt-5\" onPaste={handlePaste}>\n      <div className=\"row\">\n        <div className=\"col-md-11 offset-md-1\">\n          <h2 className=\"text-sm font-semibold mb-4\">Image to Text</h2>\n          <div\n            className=\"drag-drop-area mb-3\"\n            onClick={handleDragDropClick}\n            tabIndex={0}\n          ></div>\n          <input\n            type=\"file\"\n            multiple\n            className=\"d-none\"\n            ref={fileInputRef}\n            onChange={handleInputChange}\n          />\n          <DragDropContext onDragEnd={handleDrop}>\n            <Droppable droppableId=\"image-list\" direction=\"horizontal\">\n              {(provided) => (\n                <div\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                  className=\"sortable\"\n                >\n                  {images.map((image, index) => (\n                    <Draggable\n                      key={index}\n                      draggableId={`image-${index}`}\n                      index={index}\n                    >\n                      {(provided) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          className=\"image-container\"\n                        >\n                          <img\n                            src={image.url}\n                            alt={`Uploaded ${index}`}\n                            className=\"img-fluid\"\n                          />\n                          <button\n                            className=\"delete-button\"\n                            onClick={() => handleDeleteImage(index)}\n                          >\n                            ×\n                          </button>\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n          <div className=\"relative w-full\">\n            <textarea\n              className=\"peer h-full min-h-[300px] w-full !resize-none  rounded-[7px] border border-blue-gray-200 border-t-transparent bg-transparent px-3 py-2.5 font-sans text-sm font-normal text-blue-gray-700 outline outline-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 focus:border-2 focus:border-gray-900 focus:border-t-transparent focus:outline-0 disabled:resize-none disabled:border-0 disabled:bg-blue-gray-50\"\n              rows={10}\n              value={textOutput}\n              readOnly\n            ></textarea>\n          </div>\n          <textarea\n            className=\"form-control\"\n            rows={10}\n            value={textOutput}\n            readOnly\n          />\n          <div className=\"language-select-container mt-3\">\n            <label htmlFor=\"languageSelect\">Select Language:</label>\n            <select\n              id=\"languageSelect\"\n              value={language}\n              onChange={(e) => setLanguage(e.target.value)}\n            >\n              <option value=\"eng\">English</option>\n              <option value=\"tur\">Turkish</option>\n              <option value=\"deu\">German</option>\n              <option value=\"jpn\">Japanese</option>\n              <option value=\"fra\">French</option>\n              <option value=\"spa\">Spanish</option>\n              <option value=\"ita\">Italian</option>\n              <option value=\"por\">Portuguese</option>\n              <option value=\"rus\">Russian</option>\n              <option value=\"kor\">Korean</option>\n            </select>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageToText;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 509, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 515, "column": 0}, "map": {"version":3,"sources":["file:///Users/dokyunglee/Documents/Hackathon/Mental-Health-Tracker-App/next-frontend/src/components/Textarea.tsx"],"sourcesContent":["import Link from \"next/link\";\nimport { useState } from \"react\";\nimport OCR from \"./OCR\";\nimport ImageToText from \"./\\bImageToText\";\n\ninterface TextareaProps {\n  placeholder?: string;\n  value: string;\n  onChange: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  handleSubmit: (event: React.FormEvent, mood: number, content: string) => void;\n  rows?: number;\n}\n\nexport function Textarea({\n  placeholder,\n  value,\n  onChange,\n  handleSubmit,\n}: TextareaProps) {\n  const [mood, setMood] = useState<number>(3); // 기본값 3으로 설정\n\n  const handleSliderChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setMood(Number(e.target.value));\n  };\n\n  return (\n    <div className=\"relative pt-10\">\n      <div className=\"relative w-full\">\n        <textarea\n          className=\"peer h-full min-h-[300px] w-full !resize-none  rounded-[7px] border border-blue-gray-200 border-t-transparent bg-transparent px-3 py-2.5 font-sans text-sm font-normal text-blue-gray-700 outline outline-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 focus:border-2 focus:border-gray-900 focus:border-t-transparent focus:outline-0 disabled:resize-none disabled:border-0 disabled:bg-blue-gray-50\"\n          value={value}\n          onChange={onChange}\n        ></textarea>\n        <label className=\"before:content[' '] after:content[' '] pointer-events-none absolute left-0 -top-1.5 flex h-full w-full select-none text-[11px] font-normal leading-tight text-blue-gray-400 transition-all before:pointer-events-none before:mt-[6.5px] before:mr-1 before:box-border before:block before:h-1.5 before:w-2.5 before:rounded-tl-md before:border-t before:border-l before:border-blue-gray-200 before:transition-all after:pointer-events-none after:mt-[6.5px] after:ml-1 after:box-border after:block after:h-1.5 after:w-2.5 after:flex-grow after:rounded-tr-md after:border-t after:border-r after:border-blue-gray-200 after:transition-all peer-placeholder-shown:text-sm peer-placeholder-shown:leading-[3.75] peer-placeholder-shown:text-blue-gray-500 peer-placeholder-shown:before:border-transparent peer-placeholder-shown:after:border-transparent peer-focus:text-[11px] peer-focus:leading-tight peer-focus:text-gray-900 peer-focus:before:border-t-2 peer-focus:before:border-l-2 peer-focus:before:!border-gray-900 peer-focus:after:border-t-2 peer-focus:after:border-r-2 peer-focus:after:!border-gray-900 peer-disabled:text-transparent peer-disabled:before:border-transparent peer-disabled:after:border-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500\">\n          {placeholder}\n        </label>\n      </div>\n      {/* OCR */}\n      <ImageToText />\n      {/* 슬라이더 */}\n      <div className=\"flex flex-col items-center justify-center p-6 space-y-4\">\n        <h2 className=\"text-sm font-semibold mb-4\">\n          Choose your today stress level\n        </h2>\n        <input\n          type=\"range\"\n          min={1}\n          max={5}\n          value={mood}\n          onChange={handleSliderChange}\n          className=\"w-full h-2 bg-lightgray rounded- accent-blue\"\n        />\n        <div className=\"mt-4 text-sm\">\n          <div className=\"flex\">\n            Stress level:{\" \"}\n            <div className=\"pl-2 text-blue font-medium\"> {mood}</div>\n          </div>\n        </div>\n      </div>\n      {/* button */}\n      <div className=\"flex gap-x-8 w-full justify-center\">\n        <div>\n          <Link href={\"/\"}>\n            <button\n              className=\"border-2 border-gray px-4 py-2 font-sans text-xs font-bold text-center text-gray-900 uppercase align-middle transition-all rounded-md select-none hover:bg-lightgray active:bg-gray-900/20 \"\n              type=\"button\"\n            >\n              Cancel\n            </button>\n          </Link>\n        </div>\n        <div>\n          <button\n            className=\"select-none rounded-md bg-gray-900 py-2 px-4 text-center align-middle font-sans text-xs font-bold uppercase text-white bg-blue shadow-md shadow-gray-900/10 transition-all hover:shadow-lg hover:shadow-gray-900/20 focus:opacity-[0.85] focus:shadow-none active:opacity-[0.85] active:shadow-none disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none\"\n            type=\"button\"\n            onClick={(e) => handleSubmit(e, mood, value)} // mood와 content 전달\n          >\n            Confirm\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;;;;;AAUO,SAAS,SAAS,EACvB,WAAW,EACX,KAAK,EACL,QAAQ,EACR,YAAY,EACE;IACd,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,IAAI,aAAa;IAE1D,MAAM,qBAAqB,CAAC;QAC1B,QAAQ,OAAO,EAAE,MAAM,CAAC,KAAK;IAC/B;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,WAAU;wBACV,OAAO;wBACP,UAAU;;;;;;kCAEZ,8OAAC;wBAAM,WAAU;kCACd;;;;;;;;;;;;0BAIL,8OAAC,mIAAA,CAAA,UAAW;;;;;0BAEZ,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA6B;;;;;;kCAG3C,8OAAC;wBACC,MAAK;wBACL,KAAK;wBACL,KAAK;wBACL,OAAO;wBACP,UAAU;wBACV,WAAU;;;;;;kCAEZ,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;gCAAO;gCACN;8CACd,8OAAC;oCAAI,WAAU;;wCAA6B;wCAAE;;;;;;;;;;;;;;;;;;;;;;;;0BAKpD,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;kCACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAM;sCACV,cAAA,8OAAC;gCACC,WAAU;gCACV,MAAK;0CACN;;;;;;;;;;;;;;;;kCAKL,8OAAC;kCACC,cAAA,8OAAC;4BACC,WAAU;4BACV,MAAK;4BACL,SAAS,CAAC,IAAM,aAAa,GAAG,MAAM;sCACvC;;;;;;;;;;;;;;;;;;;;;;;AAOX"}},
    {"offset": {"line": 677, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 683, "column": 0}, "map": {"version":3,"sources":["file:///Users/dokyunglee/Documents/Hackathon/Mental-Health-Tracker-App/next-frontend/src/data/metadata.ts"],"sourcesContent":["export const aiSolution = {\n  title: \"solution\",\n  version: \"1.2.0\",\n  description: \"user...\",\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,aAAa;IACxB,OAAO;IACP,SAAS;IACT,aAAa;AACf"}},
    {"offset": {"line": 691, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 729, "column": 0}, "map": {"version":3,"sources":["file:///Users/dokyunglee/Documents/Hackathon/Mental-Health-Tracker-App/next-frontend/src/app/journal/page.tsx"],"sourcesContent":["\"use client\";\nimport Card from \"@/components/Card\";\nimport axios from \"axios\";\nimport { Button } from \"@/components/Button\";\nimport { Textarea } from \"@/components/Textarea\";\nimport { useState, FormEvent, useEffect } from \"react\";\nimport { aiSolution } from \"@/data/metadata\";\n\nexport default function JournalForm() {\n  const [content, setContent] = useState(\"\");\n  const [mood, setMood] = useState<number>(3);\n  const [aiData, setAiData] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const handleSubmit = (\n    e: FormEvent,\n    moodValue?: number,\n    contentValue?: string\n  ) => {\n    e.preventDefault();\n    console.log(\"Journal Entry Submitted:\", {\n      content: contentValue || content,\n      mood: moodValue || mood,\n    });\n    try {\n      const response = axios.post(\"/journal\", {\n        content: contentValue || content,\n        mood: moodValue || mood,\n      });\n      alert(\"success\");\n      setAiData(true);\n    } catch (error) {\n      console.error(\"전송 오류:\", error);\n      alert(\"fail\");\n    }\n    setContent(\"\");\n  };\n\n  // const getAIsolution = async () => {\n  //   setIsLoading(true);\n  //   try {\n  //     await axios.get(``).then(({ data }) => {\n  //       setAiData(data?.items);\n  //       setIsLoading(false);\n  //     });\n  //   } catch (error) {\n  //     console.log(error);\n  //     setIsLoading(false);\n  //     setIsError(true);\n  //   }\n  // };\n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-100 p-4\">\n      <div className=\"w-full max-w-md p-6 bg-white shadow-lg rounded-2xl\">\n        <div>\n          <h2 className=\"text-xl font-bold\">Journal</h2>\n          <form\n            onSubmit={(e) => handleSubmit(e, mood, content)}\n            className=\"pb-10\"\n          >\n            <Textarea\n              placeholder=\"Write your thoughts here...\"\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n              handleSubmit={handleSubmit}\n            />\n          </form>\n          <h2 className=\"text-xl font-bold pb-10\">Solution</h2>\n          {/* AI result */}\n          {aiData && (\n            <div className=\"\">\n              <div className=\"pb-4\">\n                <Card\n                  title={aiSolution?.title}\n                  description={aiSolution?.description}\n                />\n              </div>\n              <Button value={\"confirm\"} />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AAFA;;;;;;;;AAQe,SAAS;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACzC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,eAAe,CACnB,GACA,WACA;QAEA,EAAE,cAAc;QAChB,QAAQ,GAAG,CAAC,4BAA4B;YACtC,SAAS,gBAAgB;YACzB,MAAM,aAAa;QACrB;QACA,IAAI;YACF,MAAM,WAAW,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,YAAY;gBACtC,SAAS,gBAAgB;gBACzB,MAAM,aAAa;YACrB;YACA,MAAM;YACN,UAAU;QACZ,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,UAAU;YACxB,MAAM;QACR;QACA,WAAW;IACb;IAEA,sCAAsC;IACtC,wBAAwB;IACxB,UAAU;IACV,+CAA+C;IAC/C,gCAAgC;IAChC,6BAA6B;IAC7B,UAAU;IACV,sBAAsB;IACtB,0BAA0B;IAC1B,2BAA2B;IAC3B,wBAAwB;IACxB,MAAM;IACN,KAAK;IAEL,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;;kCACC,8OAAC;wBAAG,WAAU;kCAAoB;;;;;;kCAClC,8OAAC;wBACC,UAAU,CAAC,IAAM,aAAa,GAAG,MAAM;wBACvC,WAAU;kCAEV,cAAA,8OAAC,8HAAA,CAAA,WAAQ;4BACP,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;4BAC1C,cAAc;;;;;;;;;;;kCAGlB,8OAAC;wBAAG,WAAU;kCAA0B;;;;;;oBAEvC,wBACC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,0HAAA,CAAA,UAAI;oCACH,OAAO,uHAAA,CAAA,aAAU,EAAE;oCACnB,aAAa,uHAAA,CAAA,aAAU,EAAE;;;;;;;;;;;0CAG7B,8OAAC,4HAAA,CAAA,SAAM;gCAAC,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO7B"}},
    {"offset": {"line": 873, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}